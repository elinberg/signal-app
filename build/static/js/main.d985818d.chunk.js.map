{"version":3,"sources":["components/assets/decompress.js","components/assets/market.websocket.js","components/assets/spot.websocket.js","components/assets/depth.websocket.js","components/types.js","logo.svg","components/alert.component.js","components/nav.component.js","components/login.component.js","components/assets/bitmart.websocket.driver.js","components/assets/binance.websocket.driver.js","components/assets/socket.factory.js","components/assets/market.component.js","components/asset-list.component.js","components/edit-asset.component.js","components/create-asset.component.js","components/register.component.js","components/assets/ticker.select.component.js","components/assets/spot.component.js","components/assets/depth.component.js","components/assets/technicals.component.js","components/assets/wallet.component.js","components/exchange.tradeForm.component.js","components/exchange.trade.component.js","components/dashboard.component.js","components/exchange.component.js","components/modal-exchange.component.js","components/exchanges.component.js","components/menu.component.js","components/sidebar.component.js","App.js","reportWebVitals.js","serviceWorker.js","fonts/DIN/DINRegular/DINRegular.ttf","index.js","components/assets/transformer.js"],"names":["zlib","require","Decompress","zipped","callback","a","console","log","Blob","stream","getReader","read","then","done","value","b","Buffer","from","inflateRaw","flush","info","RobustWebSocket","MarketWebSocketConnection","props","setData","data","msg","obj","Object","create","protoMethods","client","getClient","url","exchange","name","selectedTicker","replace","toLowerCase","this","timeout","shouldReconnect","event","ws","code","attempts","automaticOpen","ignoreConnectivityEvents","binaryType","addEventListener","length","send","prevPrices","market","err","buffer","json","JSON","parse","toString","unshift","splice","len","side","parseFloat","p","price","size","q","push","e","asks","bids","_transform","WebSocketConnection","transformer","newState","getStream","lastPrice","newData","high24hr","low24hr","open24hr","volume24hr","priceStyle","prevPrice","DepthWebSocketConnection","SET_ALERT","SET_ALERT_OVERWRITE","REMOVE_ALERT","LOGIN","LOGOUT","Alert","aid","React","useContext","AuthContext","state","dispatch","alerts","filter","alert","message","map","i","id","setTimeout","type","payload","className","aria-live","aria-atomic","style","position","top","right","minHeight","width","zIndex","height","src","logo","alt","onClick","data-dismiss","aria-label","aria-hidden","Nav","history","useHistory","isOpen","href","target","rel","to","isAuthenticated","localStorage","setItem","axios","defaults","headers","common","alertType","isloggedin","Login","useState","username","password","isSubmitting","errorMessage","navigator","onLine","online","useEffect","search","window","location","URLSearchParams","get","marginTop","onSubmit","preventDefault","newLogin","post","res","token","baseURL","isLoggedIn","autoComplete","onChange","disabled","BitmartWebSocket","config","credentials","trades","symbol","login","ping_id","ping_time","pingText","subscribeMessage","getSubscribeMessage","unsubscribeMessage","getUnsubscribeMessage","decompress","key","secret","apiName","messageEvent","fromEvent","loginEvent","pipe","subscribe","ev","blobEvent","unzip","setOpenOrders","pingEvent","openEvent","getLoginMessage","setInterval","readyState","clearInterval","closeEvent","undefined","asset","newTrade","getTradeStream","trade","order_id","timestamp","Date","now","createHmac","update","digest","stringify","ELEMENTS","BinanceWebSocket","pingIn","pingOut","Array","isArray","SocketFactory","socketCreator","Market","intervalId","setIntervalId","isOnline","setOnline","setOffline","onPriceClick","innerText","onChangePrice","thisExchange","getItem","apiKey","prevSelectedTicker","tickerEndpoint","iid","removeEventListener","close","sideClass","marginBottom","paddingRight","listStyleType","paddingLeft","index","whiteSpace","split","Asset","assets","textDecoration","pair","textTransform","order_type","qty","cost","base","transaction_date","AssetList","setHistory","orderTab","setOrderTab","$","carousel","on","getOrderHistory","listenKey","mytrades","response","getTrades","Bitmart","Binance","createInstance","catch","error","xbmkey","xbmname","xbmsecret","maxHeight","overflow","overflowY","data-target","data-slide-to","role","Table","minWidth","textAlign","clearTicker","baseAsset","EditAsset","options","alignLabels","timeScale","rightOffset","barSpacing","fixLeftEdge","lockVisibleTimeRangeOnResize","rightBarStaysOnScroll","borderVisible","borderColor","visible","timeVisible","secondsVisible","candlestickSeries","time","open","high","low","autoWidth","Component","CreateAsset","onChangePair","bind","onChangeAmount","amount","setState","newAsset","redirectTo","marginLeft","Register","onChangeUsername","onChangePassword","newRegistration","TickerSelect","classNamePrefix","onFocus","Spot","paddingTop","color","Depth","Technicals","Wallet","wallet","avail","currency","frozen","tab","ticker","account","available","setAmount","Math","round","ExchangeTradeForm","orderType","setOrderType","ex","initalState","tickers","setWallet","result","forEach","label","clearAmount","toFixed","onChangeQty","marginRight","sellAsset","Tabs","onSelect","k","defaultActiveKey","Tab","eventKey","title","placeholder","display","Exchange","setKey","prev","setPrev","float","paddingBottom","data-toggle","tabClassName","onTabSelect","setTab","ExchangeTradeList","showModal","setIsOpen","setTitle","setUrl","hideModal","currentExchange","Dashboard","ExchangeForm","onChangeName","onChangeApiKey","onChangeApiName","onChangeSecret","onChangeUrl","ModalExchange","Modal","show","tabIndex","ExchangeList","setExchange","tabindex","TopNav","closeMenu","pageWrapId","outerContainerId","styles","onStateChange","Sidebar","useLocation","pathname","bmBurgerButton","left","bmBurgerBars","background","bmBurgerBarsHover","bmCrossButton","bmCross","bmMenuWrap","bmMenu","padding","fontSize","bmMorphShape","fill","bmItemList","bmItem","bmOverlay","path","exact","render","showHeading","component","Exchanges","onbeforeunload","returnValue","createContext","initialState","initalData","theme","reducer","action","uuid","App","useReducer","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister","Transformer","exchangeName","date","formatted","records","Number","parseInt","create_time","toLocaleString","month","day","toLocaleTimeString","detail_id","avg_price","price_avg","notional","exec_type","status","last_price","high_24h","low_24h","open_24h","base_volume_24h","c","h","l","o","v","transformed","ms_t","filled_notional","T","S","X","x","module","exports"],"mappings":"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","file":"static/js/main.d985818d.chunk.js","sourcesContent":["const zlib = require(\"zlib\");\n\nexport class Decompress {\n    constructor(){\n    }\n\n    async unzip(zipped, callback){\n    console.log('UnZipping', zipped)\n        if( zipped instanceof Blob ) {\n\n            //console.log(event.data)\n            const stream = zipped.stream();\n            const reader = stream.getReader();\n            let json;\n            reader.read().then(({ done, value }) => {\n                if(done){\n                    \n                } else {\n                    var b = Buffer.from(value)\n\n                    zlib.inflateRaw(b,{flush: 3, info: true}, callback )\n                //    zlib.inflateRaw(b,{flush: 3, info: true}, (err, buffer) => {\n                //     json =  JSON.parse(buffer.toString('UTF-8'));\n                //     console.log('Return unzipped', json)\n                //     return json; \n                //     });\n                    \n                }  \n            })\n            //return json;\n        }  else {\n            console.log('Return Orig', zipped)\n            //return zipped;\n        }\n        \n        \n    }\n\n\n}\n","const zlib = require(\"zlib\");\nconst RobustWebSocket = require('robust-websocket');\n//const prevPrice = '0.00';\nexport default  function MarketWebSocketConnection(props, setData, data, msg) {\n\nconst obj = Object.create(protoMethods);\n obj.client = {};\n //obj.msg = msg;\n return obj.getClient(props,setData,data, msg);\n\n}\n    //console.log('Previous Ticker', localStorage.getItem('selectedTicker'), this.props.selectedTicker);\n const protoMethods = {\n    getClient: function(props, setData, data, msg){\n        let url=''\n        if(props.exchange.name === 'Binance'){\n            url = 'wss://stream.binance.com:9443/ws/'+props.selectedTicker.replace(/_/g,\"\").toLowerCase()+'@aggTrade';\n        } else {\n            url = 'wss://ws-manager-compress.bitmart.com?protocol=1.1'\n        }\n\n    this.client = new RobustWebSocket(url, null, {\n                // The number of milliseconds to wait before a connection is considered to have timed out. Defaults to 4 seconds.\n                timeout: 4000,\n                // A function that given a CloseEvent or an online event (https://developer.mozilla.org/en-US/docs/Online_and_offline_events) and the `RobustWebSocket`,\n                // will return the number of milliseconds to wait to reconnect, or a non-Number to not reconnect.\n                // see below for more examples; below is the default functionality.\n                shouldReconnect: function(event, ws) {\n                    console.log('Reconnecting')\n                    if (event.code === 1008 || event.code === 1011) return\n                    return [0, 3000, 10000][ws.attempts]\n                },\n                // A boolean indicating whether or not to open the connection automatically. Defaults to true, matching native [WebSocket] behavior.\n                // You can open the websocket by calling `open()` when you are ready. You can close and re-open the RobustWebSocket instance as much as you wish.\n                automaticOpen: true,\n                // A boolean indicating whether to disable subscribing to the connectivity events provided by the browser.\n                // By default RobustWebSocket instances use connectivity events to avoid triggering reconnection when the browser is offline. This flag is provided in the unlikely event of cases where this may not be desired.\n                ignoreConnectivityEvents: false\n                })\n        this.client.binaryType='blob'; \n        this.client.addEventListener('open', function(event) {\n         console.log('WebSocket Client Connected');\n         if(msg.length > 0 && props.exchange.name === 'Bitmart'){\n            this.send(msg);\n        }\n        // let iid2 = setInterval(() =>{\n        //     //console.log('READYSTATE1',client['Bitmart'].readyState)\n        //     if(props.exchange.name == 'Bitmart'){\n        //         console.log('PINGING:','ping')\n        //         this.send('ping');\n        //         //client['Bitmart'].send(msg);\n        //     } \n        // }, 15000);\n        })\n        var prevPrices = [];\n        data.market = [];\n        setData({...data})\n        this.client.addEventListener('message', function(event) {\n\n        //console.log('we got: ' + event.data)\n        if(msg.length > 0){\n            //this.client.send(msg);\n        }\n        // var newState;\n             if(event.data instanceof Blob) {\n        //let transformer = new _transform(props.exchange.name);\n        //console.log(event.data)\n        const stream = event.data.stream();\n        const reader = stream.getReader();\n        reader.read().then(({ done, value }) => {\n            if(done){\n                \n            } else {\n                var b = Buffer.from(value)\n                \n                zlib.inflateRaw(b,{flush: 3, info: true}, (err, buffer) => {\n                var json = JSON.parse(buffer.toString('UTF-8'))\n\n                //let prevPrice = this.prevPrice;\n\n                //let newState = transformer.getStream(json.data[0],props.selectedTicker,prevPrices);\n                \n                data.market.unshift(json.data[0])\n\n                if(data.market.length > 9){\n                    data.market.splice(9,1);\n                }\n                //console.log('MarketWS', newState)\n\n                setData({\n                    ...data,\n                    \n                })\n                //  prevPrices.push(newState.lastPrice );\n\n                // if(prevPrices.length > 2){\n                //     prevPrices.splice(0,1);\n                // }\n                //console.log('Text Frame Bitmart');\n                //console.log(err,json.data[0]);\n                }); \n            }  \n        })\n        \n        } else {\n            // text frame\n\n            if(event.data === 'pong' || event.data === 'ping' ){\n                //client.send(\"ping\")\n                return;\n            }\n            \n            //let transformer = new _transform(props.exchange.name);\n            try {\n                let json = JSON.parse(event.data);\n\n                //console.log('BMARKET', json)\n                \n                //let newData = transformer.getStream(json, props.selectedTicker, prevPrices);\n                \n                let len = prevPrices.length\n                let side = '';\n                if(parseFloat(prevPrices[len-1]) > parseFloat(json.p)){\n                    side = 'sell';\n                } else {\n                    side = 'buy';\n                } \n\n                data.market.unshift({price: json.p, size:json.q, side:side})\n\n                if(data.market.length > 9){\n                    data.market.splice(9,1);\n                }\n\n                setData({\n                    ...data\n                })\n            prevPrices.push(json.p );\n\n            if(prevPrices.length > 2){\n                prevPrices.splice(0,1);\n            }\n\n            } catch(e){\n                console.log(e);\n            }\n\n        \n            \n            //console.log('Text Frame Binance',);\n        }\n        })\n\n        this.client.addEventListener('close', function(event) {\n            //prevPrices = [];\n            setData({\n                asks: [],\n                bids: [],\n                market: []\n            });\n            if(event.data === undefined){\n                return;\n            }\n        //console.log('we got: ' + event.data)\n        })\n\n        return (this.client);\n     }\n    }   \n","const zlib = require(\"zlib\");\nconst RobustWebSocket = require('robust-websocket');\nconst _transform = require('./transformer')\n//const prevPrice = '0.00';\nexport default  function WebSocketConnection(props, setData, data, msg) {\n\nconst obj = Object.create(protoMethods);\n obj.client = {};\n //obj.msg = msg;\n return obj.getClient(props,setData,data, msg);\n\n}\n    //console.log('Previous Ticker', localStorage.getItem('selectedTicker'), this.props.selectedTicker);\n const protoMethods = {\n    getClient: function(props, setData, data, msg){\n        let url=''\n        if(props.exchange.name === 'Binance'){\n            url = 'wss://stream.binance.com:9443/ws/'+props.selectedTicker.replace(/_/g,\"\").toLowerCase()+'@miniTicker';\n        } else {\n            url = 'wss://ws-manager-compress.bitmart.com?protocol=1.1'\n        }\n\n    this.client = new RobustWebSocket(url, null, {\n                // The number of milliseconds to wait before a connection is considered to have timed out. Defaults to 4 seconds.\n                timeout: 4000,\n                // A function that given a CloseEvent or an online event (https://developer.mozilla.org/en-US/docs/Online_and_offline_events) and the `RobustWebSocket`,\n                // will return the number of milliseconds to wait to reconnect, or a non-Number to not reconnect.\n                // see below for more examples; below is the default functionality.\n                shouldReconnect: function(event, ws) {\n                    console.log('Reconnecting', event,ws, url)\n                    if (event.code === 1008 || event.code === 1011) return\n                    return [0, 3000, 10000][ws.attempts]\n                },\n                // A boolean indicating whether or not to open the connection automatically. Defaults to true, matching native [WebSocket] behavior.\n                // You can open the websocket by calling `open()` when you are ready. You can close and re-open the RobustWebSocket instance as much as you wish.\n                automaticOpen: true,\n                // A boolean indicating whether to disable subscribing to the connectivity events provided by the browser.\n                // By default RobustWebSocket instances use connectivity events to avoid triggering reconnection when the browser is offline. This flag is provided in the unlikely event of cases where this may not be desired.\n                ignoreConnectivityEvents: false\n                })\n        this.client.binaryType='blob'; \n        this.client.addEventListener('open', function(event) {\n         console.log('WebSocket Client Connected');\n         if(msg.length > 0 && props.exchange.name === 'Bitmart'){\n            this.send(msg);\n         }\n        // let iid2 = setInterval(() =>{\n        //     //console.log('READYSTATE1',client['Bitmart'].readyState)\n        //     if(props.exchange.name == 'Bitmart'){\n        //         console.log('PINGING:','ping')\n        //         this.send('ping');\n        //         //client['Bitmart'].send(msg);\n        //     } \n        // }, 10000);\n\n        })\n        var prevPrices = [];\n        this.client.addEventListener('message', function(event) {\n\n        //console.log('we got: ' + event.data)\n        if(msg.length > 0){\n            //client.send(msg);\n        }\n        // var newState;\n             if(event.data instanceof Blob) {\n        let transformer = new _transform(props.exchange.name);\n        //console.log(event.data)\n        const stream = event.data.stream();\n        const reader = stream.getReader();\n        reader.read().then(({ done, value }) => {\n            if(done){\n                \n            } else {\n                var b = Buffer.from(value)\n                \n                zlib.inflateRaw(b,{flush: 3, info: true}, (err, buffer) => {\n                var json = JSON.parse(buffer.toString('UTF-8'))\n\n                //let prevPrice = this.prevPrice;\n\n                let newState = transformer.getStream(json.data[0],props.selectedTicker,prevPrices);\n                 \n                setData({\n                    ...data,\n                    ...newState\n                })\n                prevPrices.push(newState.lastPrice );\n\n                if(prevPrices.length > 2){\n                    prevPrices.splice(0,1);\n                }\n                //console.log('Text Frame Bitmart');\n                //console.log(err,json.data[0]);\n                }); \n            }  \n        })\n        \n        } else {\n            // text frame\n\n            if(event.data === 'pong' || event.data === 'ping' ){\n                //client.send(\"ping\")\n                return;\n            }\n            //console.log('PROPS', props);\n            let transformer = new _transform(props.exchange.name);\n            try {\n                let json = JSON.parse(event.data);\n                \n                let newData = transformer.getStream(json, props.selectedTicker, prevPrices);\n                setData({\n                    ...data,\n                    ...newData\n                })\n            prevPrices.push(newData.lastPrice );\n\n            if(prevPrices.length > 2){\n                prevPrices.splice(0,1);\n            }\n\n            } catch(e){\n                console.log(e);\n            }\n\n        \n            \n            //console.log('Text Frame Binance',);\n        }\n        })\n\n        this.client.addEventListener('close', function(event) {\n            prevPrices = [];\n            \n            setData({\n                high24hr: '',\n                low24hr: '',\n                open24hr: '',\n                volume24hr: '',\n                lastPrice:'',\n                priceStyle:'' ,\n                prevPrice:'0.00' \n            });\n            if(event.data === undefined){\n                return;\n            }\n        //console.log('we got: ' + event.data)\n        })\n\n        return (this.client);\n     }\n    }   \n","const zlib = require(\"zlib\");\nconst RobustWebSocket = require('robust-websocket');\n//const prevPrice = '0.00';\nexport default  function DepthWebSocketConnection(props, setData, data, msg) {\n\nconst obj = Object.create(protoMethods);\n obj.client = {};\n //obj.msg = msg;\n return obj.getClient(props,setData,data, msg);\n\n}\n    //console.log('Previous Ticker', localStorage.getItem('selectedTicker'), this.props.selectedTicker);\n const protoMethods = {\n    getClient: function(props, setData, data, msg){\n        let url=''\n        if(props.exchange.name === 'Binance'){\n            url = 'wss://stream.binance.com:9443/ws/'+props.selectedTicker.replace(/_/g,\"\").toLowerCase()+'@depth5@100ms';\n        } else {\n            url = 'wss://ws-manager-compress.bitmart.com?protocol=1.1'\n        }\n\n    this.client = new RobustWebSocket(url, null, {\n                // The number of milliseconds to wait before a connection is considered to have timed out. Defaults to 4 seconds.\n                timeout: 4000,\n                // A function that given a CloseEvent or an online event (https://developer.mozilla.org/en-US/docs/Online_and_offline_events) and the `RobustWebSocket`,\n                // will return the number of milliseconds to wait to reconnect, or a non-Number to not reconnect.\n                // see below for more examples; below is the default functionality.\n                shouldReconnect: function(event, ws) {\n                    console.log('Reconnecting')\n                    if (event.code === 1008 || event.code === 1011) return\n                    return [0, 3000, 10000][ws.attempts]\n                },\n                // A boolean indicating whether or not to open the connection automatically. Defaults to true, matching native [WebSocket] behavior.\n                // You can open the websocket by calling `open()` when you are ready. You can close and re-open the RobustWebSocket instance as much as you wish.\n                automaticOpen: true,\n                // A boolean indicating whether to disable subscribing to the connectivity events provided by the browser.\n                // By default RobustWebSocket instances use connectivity events to avoid triggering reconnection when the browser is offline. This flag is provided in the unlikely event of cases where this may not be desired.\n                ignoreConnectivityEvents: false\n                })\n        this.client.binaryType='blob'; \n        this.client.addEventListener('open', function(event) {\n         console.log('WebSocket Client Connected');\n         if(msg.length > 0 && props.exchange.name === 'Bitmart'){\n            this.send(msg);\n        }\n        // let iid2 = setInterval(() =>{\n        //     //console.log('READYSTATE1',client['Bitmart'].readyState)\n        //     if(props.exchange.name == 'Bitmart'){\n        //         console.log('PINGING:','ping')\n        //         this.send('ping');\n        //         //client['Bitmart'].send(msg);\n        //     } \n        // }, 15000);\n        })\n        //var prevPrices = [];\n        this.client.addEventListener('message', function(event) {\n\n        //console.log('we got: ' + event.data)\n        if(msg.length > 0){\n            //this.client.send(msg);\n        }\n        // var newState;\n             if(event.data instanceof Blob) {\n        //let transformer = new _transform(props.exchange.name);\n        //console.log(event.data)\n        const stream = event.data.stream();\n        const reader = stream.getReader();\n        reader.read().then(({ done, value }) => {\n            if(done){\n                \n            } else {\n                var b = Buffer.from(value)\n                \n                zlib.inflateRaw(b,{flush: 3, info: true}, (err, buffer) => {\n                var json = JSON.parse(buffer.toString('UTF-8'))\n\n                //let prevPrice = this.prevPrice;\n\n                //let newState = transformer.getStream(json.data[0],props.selectedTicker,prevPrices);\n                let newState = json.data[0];\n                setData({\n                    ...data,\n                    ...newState\n                })\n                // prevPrices.push(newState.lastPrice );\n\n                // if(prevPrices.length > 2){\n                //     prevPrices.splice(0,1);\n                // }\n                //console.log('Text Frame Bitmart');\n                //console.log(err,json.data[0]);\n                }); \n            }  \n        })\n        \n        } else {\n            // text frame\n\n            if(event.data === 'pong' || event.data === 'ping' ){\n                //client.send(\"ping\")\n                return;\n            }\n            \n            //let transformer = new _transform(props.exchange.name);\n            try {\n                let json = JSON.parse(event.data);\n                \n                //let newData = transformer.getStream(json, props.selectedTicker, prevPrices);\n                let newData = json;\n                setData({\n                    ...data,\n                    ...newData\n                })\n            //prevPrices.push(newData.lastPrice );\n\n            // if(prevPrices.length > 2){\n            //     prevPrices.splice(0,1);\n            // }\n\n            } catch(e){\n                console.log(e);\n            }\n\n        \n            \n            //console.log('Text Frame Binance',);\n        }\n        })\n\n        this.client.addEventListener('close', function(event) {\n            //prevPrices = [];\n            setData({\n                asks: [],\n                bids: []\n            });\n            if(event.data === undefined){\n                return;\n            }\n        //console.log('we got: ' + event.data)\n        })\n\n        return (this.client);\n     }\n    }   \n","export const SET_ALERT =  'SET_ALERT';\nexport const SET_ALERT_OVERWRITE =  'SET_ALERT_OVERWRITE';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\n\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport { AuthContext } from '../App';\nimport { REMOVE_ALERT} from './types';\nimport logo from \"../logo.svg\";\n\nconst Alert = () => {\n    const { state, dispatch } = React.useContext(AuthContext);  \n    const alerts = state.alerts;\n    const onClose = (e, id) => {\n        console.log(id);\n        //document.getElementById(id).a\n        dispatch({ type: REMOVE_ALERT, payload: id})\n        //e.target.parent.toast('hide');\n    }\n    if(typeof alerts !== 'undefined' && alerts !== null && alerts.length > 0){\n        let alertsList, aid;\n        \n        alertsList = alerts.filter(alert => alert.message !== 'null').map((alert,i) => {\n            aid = alert.id;\n            setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: alert.id}), alert.timeout);\n            // return (\n            //     alert.id && <div className='alert' key={aid} className={als} role='alert'>{alert.message}</div>\n            // )\n            return (\n                alert.id && <div key={alert.id} className='' aria-live='polite' aria-atomic='true' style={{position: 'absolute', top:'150px', right: '500px', minHeight:'200px', width:'200px',zIndex:1000}}>\n                <div id={aid} className='toast fade show'>\n                    <div className='toast-header'>\n                    <img style={{width:30, height:30}} src={logo} className='rounded mr-2' alt='...' />\n                    <strong className='mr-auto'>System</strong>\n                    \n                    <button type='button' onClick={ (e) => onClose(e,aid)} className='ml-2 mb-1 close' data-dismiss='toast' aria-label='Close'>\n                        <span aria-hidden='true'>&times;</span>\n                    </button>\n                    </div>\n                    <div className='toast-body'>\n                    {alert.message}\n                    \n                </div>\n                </div>\n                </div>\n            )\n\n\n            \n        });\n        \n        return alertsList;\n    } else {\n        return null;\n    }\n    \n};\n\n\nexport default Alert;\n\n\n","import React from \"react\";\nimport { AuthContext } from \"../App\";\nimport logo from \"../logo.svg\";\nimport {  Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//import Alert from \"./alert.component\";\nimport axios from 'axios';\nimport { useHistory } from \"react-router\";\nimport { LOGOUT, SET_ALERT_OVERWRITE } from './types';\n\nexport const Nav = () => {\n  const { state, dispatch } = React.useContext(AuthContext);\n  const history = useHistory();\n  \n  const onLogout = e => {      \n    console.log('Logout');\n    localStorage.setItem('token', null);\n    \n    axios.defaults.headers.common['Authorization'] = null;\n    dispatch({\n        type: LOGOUT\n    })\n    dispatch({\n        type: SET_ALERT_OVERWRITE,\n        payload: {  message:'Logout Successful', alertType: 'success', timeout:3000}\n    })\n    history.push(\"/login\");\n }\n\n const onClick = () => {\n   if(!state.isOpen){\n     dispatch( {type:'MENU_STATE',payload:true})\n   }\n }\n  return (\n    <div>\n    \n          <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            <div className=\"\">\n            <div className=\"pull-left\">\n            <a className=\"navbar-brand\" onClick={onClick} href=\"#\" target=\"\" rel=\"noreferrer\">\n              <img src={logo} width=\"30\" height=\"30\" alt=\"CodingTheSmartWay.com\" />\n            </a>\n            <Link to=\"/dashboard\" className=\"navbar-brand\">Order Desk</Link>\n            </div>\n            <div className=\"pull-right\">\n              <ul className=\"navbar-nav navbar-right pull-right mr-auto\">\n              \n                \n                {\n                  !state.isAuthenticated ?  <li className=\"navbar-item pull-right\">\n                  <Link to=\"/login\" isloggedin=\"true\" className=\"nav-link\">Login </Link>\n                </li> : <li className=\"navbar-item pull-right\">\n                <Link to=\"/login\" onClick={onLogout} className=\"nav-link\">Log Out</Link>\n                </li>\n                }\n                <li className=\"navbar-item\">\n                  <Link to=\"/register\" className=\"nav-link\">Register</Link>\n                </li>\n              </ul>\n            </div>\n            </div>\n          </nav>\n          \n          </div>\n          \n  );\n};\n\nexport default Nav;\n\n\n\n","import React , {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport { useHistory } from \"react-router\";\nimport { SET_ALERT, LOGIN} from './types';\nimport { AuthContext } from \"../App\";\n\n\n// State updates from the useState() and useReducer() Hooks don't support the \" + 's\n// econd callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().'\n\n\n\nconst Login = () => {\n    const { dispatch } = React.useContext(AuthContext);\n    const initialState = {\n        username: \"\",\n        password: \"\",\n        isSubmitting: false,\n        errorMessage: null\n      };\n      const [data, setData] = React.useState(initialState);\n      let [online,isOnline] = useState(navigator.onLine);\n      //localStorage.clear();\n    //   const [data, setData] = React.useState(initialState);\n       let history = useHistory();\n    //   let [online,isOnline] = useState(navigator.onLine);\n\n\n\n      const setOnline = () => {\n          console.log('We are online!');\n          \n          isOnline(true);\n      };\n      const setOffline = () => {\n          console.log('We are offline!');\n          //props.selectedTicker='';\n          //props.clearTicker();\n          \n          isOnline(false);\n      };\n\n    const onChangeUsername = e => {\n\n        setData({\n            ...data,\n            username: e.target.value\n          });\n    }\n\n    const onChangePassword = e => {\n        setData({\n            ...data,\n            password: e.target.value\n        });\n    }\n\n    useEffect(() => {\n        //window.addEventListener('offline', setOffline);\n       // window.addEventListener('online', setOnline);\n        return () => {\n\n           // window.removeEventListener('offline', setOffline);\n           // window.removeEventListener('online', setOnline);\n        }\n    },[]);\n    const onSubmit = e => {\n        e.preventDefault();\n        //const history = useHistory();\n        setData({\n            ...data,\n            isSubmitting: true,\n            errorMessage: null\n          });\n        console.log(`Form submitted:`);\n         \n        const newLogin = {\n            username: data.username,\n            password: data.password\n        };\n        \n        \n        axios.post('/api/auth/signin', newLogin)\n            .then(res => {\n                console.log(res.data);\n                \n                localStorage.setItem('token', res.data.token);\n                \n                axios.defaults.headers.common['Authorization'] = res.data.token;\n                axios.defaults.baseURL='';\n                dispatch({\n                    type: LOGIN,\n                    payload: res.data\n                })\n                dispatch({\n                    type: SET_ALERT,\n                    payload: {  message:'Login Successful', alertType: 'success', timeout:3000}\n                })\n                \n                history.push(\"/dashboard\");\n                \n            });\n            \n\n\n        setData({\n            ...data,\n            username: '',\n            password: '',\n            isLoggedIn: true\n        })\n    }\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n    const offline = params.get('offline');\n    // if( offline === true ){\n    //     isOnline(false);\n    // } else{\n    //     if(online === false){\n    //         isOnline(false);\n    //     } else {\n    //         isOnline(true);\n    //     }\n    // }\n    \n    return (\n        <div className=\"container\" style={{marginTop: 10}}>\n            <h3>Login</h3>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-group\"> \n                    <label>User Name: </label>\n                    <input  type=\"text\"\n                            className=\"form-control\"\n                            autoComplete=\"username\"\n                            value={data.username}\n                            onChange={onChangeUsername}\n                            />\n                </div>\n                <div className=\"form-group\">\n                    <label>Password: </label>\n                    <input \n                            type=\"password\" \n                            className=\"form-control\"\n                            value={data.password}\n                            autoComplete=\"current-password\"\n                            onChange={onChangePassword}\n                            />\n                </div>\n                \n\n                <div className=\"form-group\">\n                    <input type=\"submit\" disabled={online ? false : true} value={online ? 'Login' : 'Offline'} className=\"btn btn-primary\" />\n                </div>\n            </form>\n        </div>\n    )\n    \n}\n\n\n\n  export default Login;","import { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nconst Decompress = require(\"./decompress\").Decompress;\nconst RobustWebSocket = require('robust-websocket');\nconst _transform = require('./transformer')\n\n\nexport default class BitmartWebSocket {\n    constructor( url, config, props, credentials, trades){\n        console.log(\"BITMART PROPS\", config, props, credentials, trades)\n        let symbol = props.selectedTicker;\n        this.client = new RobustWebSocket(config.url, null, {\n            timeout: 600000,\n            shouldReconnect: function(event, ws) {\n                console.log('Reconnecting')\n                if (event.code === 1008 || event.code === 1011) return\n                return [0, 3000, 10000][ws.attempts]\n            }\n            }\n        ) \n        this.name = 'Bitmart';\n        this.login = config.login || false;\n        this.trades = trades ;\n        this.ping_id = 0 ;\n        this.ping_time = 10000\n        this.symbol =  props.selectedTicker || 'SHIB_USDT';\n        this.url = config.url || 'wss://ws-manager-compress.bitmart.com?protocol=1.1';\n        this.client.binaryType = 'blob'; //blob / text\n        this.pingText =  'pong';\n        this.subscribeMessage = this.getSubscribeMessage(symbol);\n        this.unsubscribeMessage = this.getUnsubscribeMessage(symbol);\n        //this.loginMessage = this.getLoginMessage(symbol);\n        this.transformer =  new _transform(this.name);\n        this.decompress =  new Decompress(); //decompression class\n        this.key = credentials.key;\n        this.secret = credentials.secret;\n        this.apiName = credentials.apiName;\n        this.client.addEventListener('open', function(event){\n        });\n        this.client.addEventListener('close', function(event){});\n        this.client.addEventListener('message', function(event){\n            //console.log(\"RAW MESSAGE EVENT S B O\", typeof event.data, event.data, event )\n        });\n       \n        this.messageEvent = fromEvent(this.client, 'message');\n\n\n        this.loginEvent = this.messageEvent\n        .pipe(filter( event =>  typeof event.data === 'string'))\n        .pipe(filter( event =>  event.data !== this.pingText    ))\n        .pipe(filter( event =>  JSON.parse(event.data).event === 'login'));\n        this.loginEvent.subscribe(ev=> {\n            //console.log('LOGIN EVENT MESSAGE',JSON.parse(ev.data).event)\n            let msg = this.getSubscribeMessage(symbol)\n            this.client.send(msg);\n        }); \n\n        this.blobEvent = this.messageEvent.pipe(filter( event => event.data instanceof Blob ));\n        this.blobEvent.subscribe( ev=> {\n            //console.log('BLOB EVENT MESSAGE', ev.data)\n            let json = ev.data;\n            let unzipped;\n            this.decompress.unzip(json,(err,buffer) => {\n                \n                json =  JSON.parse(buffer.toString('UTF-8'));\n                this.setOpenOrders(json, props);\n               // console.log('BLOB EVENT CALLBACK', json)\n            })\n            \n            //console.log('BLOB EVENT UNZIPPED',json)\n        }); \n\n        this.pingEvent = this.messageEvent\n        .pipe(filter( event =>  typeof event.data === 'string'))\n        .pipe(filter( event => event.data === this.pingText ))\n        this.pingEvent.subscribe( ev=> {\n            //console.log('PING EVENT MESSAGE',ev.data)\n        }); \n        \n        this.openEvent = fromEvent(this.client, 'open').subscribe((event) => {\n            console.log('OPEN EVENT', event)\n            \n            if(this.login){\n                let msg = this.getLoginMessage(credentials.key,credentials.secret,credentials.apiName)\n                console.log('LoginMessage', msg)\n                this.client.send(msg)\n            } else {\n\n                let msg = this.getSubscribeMessage(symbol)\n                let id = setInterval(() => {\n                    if(this.client.readyState === 1){\n                        this.client.send(msg);\n                        clearInterval(id)\n                    }\n                }, 1000);\n                \n                \n            }\n            \n\n            this.ping_id = setInterval(() =>{\n                \n                if( this.client.readyState === 1 ){\n                    this.client.send('ping');\n                    \n                } \n            }, this.ping_time);\n            \n\n        \n        });\n        this.closeEvent = fromEvent(this.client, 'close').subscribe((event) => {\n            console.log('CLOSE EVENT', event)\n            clearInterval(this.ping_id)\n        });\n\n        }\n\n        setOpenOrders (json, props){\n            //console.log('setOpenOrders', json, props, trades)\n           \n           // console.log('setOpenOrders unzipped', unzipped)\n            if(  json !== undefined && json.data !== undefined && json.data.length > 0 ){\n                \n                //console.log('pre pre pre Transform', json)\n                props.setData({\n                    ...props.data,\n                    asset:[]\n                })\n                // console.log('pre pre Transform', json.data, trades)\n                \n                let newTrade = this.transformer.getTradeStream(json.data[0],this.symbol)\n                let filtered;\n                if(newTrade.state === 'CANCELED'){\n                    //console.log('PRE FILTERED', this.trades);\n                    this.trades = this.trades.filter(trade => trade.order_id !== newTrade.order_id)\n                    //console.log('FILTERED', this.trades);\n\n                } else {\n                        \n                        this.trades.unshift(newTrade)\n                        \n                }\n                            \n                    //console.log('TRDATA4', this.trades);\n                    \n                props.setData({\n                    ...props.data,\n                    asset:this.trades\n                })\n        \n            }\n        }\n\n        getLoginMessage ( key,secret,apiName ) {\n            \n            let timestamp = Date.now().toString();\n            let signature = require(\"crypto\")\n                            .createHmac(\"sha256\", secret)\n                            .update(timestamp+'#'+apiName+'#bitmart.WebSocket')\n                            .digest(\"hex\"); //binary, hex,base64\n\n            let msg = {\"op\": \"login\", \"args\":[key,timestamp,signature]} ;\n            return JSON.stringify(msg)\n\n        }\n\n        getSubscribeMessage (symbol) {\n            console.log('getSubscribeMessage', symbol )\n            this.symbol = symbol;\n            return JSON.stringify({\"op\": \"subscribe\", \"args\":[\"spot/user/order:\"+symbol]});\n        }\n\n        getUnsubscribeMessage (symbol) {\n            console.log('getUnSubscribeMessage', symbol )\n            \n            return JSON.stringify({\"op\": \"unsubscribe\", \"args\":[\"spot/user/order:\"+symbol]});\n        }\n    \n    \n    \n};\n","import { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nconst Decompress = require(\"./decompress\").Decompress;\nconst RobustWebSocket = require('robust-websocket');\nconst _transform = require('./transformer')\n\n\nexport default class BinanceWebSocket  {\n    constructor(  url, config, props, credentials, trades){\n\n        let symbol = props.selectedTicker;\n        this.client = new RobustWebSocket(config.url, null, {\n            timeout: 600000,\n            shouldReconnect: function(event, ws) {\n                console.log('Reconnecting')\n                if (event.code === 1008 || event.code === 1011) return\n                return [0, 3000, 10000][ws.attempts]\n            }\n            }\n        ) \n        this.name = 'Binance';\n        this.login = config.login || false;\n        this.trades = trades || [] ;\n        this.ping_id = 0 ;\n        this.ping_time = 1000000\n        this.symbol =  props.selectedTicker || 'DOGEUSDT';\n        this.url = config.url || 'wss://stream.binance.us:9443/ws/';\n        this.client.binaryType = 'blob'; //blob / text\n        this.pingIn =  'ping';\n        this.pingOut =  'pong';\n        this.subscribeMessage = this.getSubscribeMessage(symbol);\n        this.unsubscribeMessage = this.getUnsubscribeMessage(symbol);\n        //this.loginMessage = this.getLoginMessage(symbol);\n        this.transformer =  new _transform(this.name);\n        this.decompress =  new Decompress(); //decompression class\n        this.key = credentials.key;\n        this.secret = credentials.secret;\n        this.apiName = credentials.apiName;\n        this.client.addEventListener('open', function(event){\n            console.log(\"RAW OPEN S B O\", typeof event.data, event )\n        });\n        this.client.addEventListener('close', function(event){});\n        this.client.addEventListener('message', function(event){\n            //console.log(\"RAW MESSAGE EVENT S B O\", typeof event.data, event.data, event )\n        });\n       \n        this.messageEvent = fromEvent(this.client, 'message');\n\n\n        this.loginEvent = this.messageEvent\n        .pipe(filter( event =>  typeof event.data === 'string'))\n        .pipe(filter( event =>  event.data !== this.pingIn    ))\n        .pipe(filter( event =>  JSON.parse(event.data).event === 'login'));\n        this.loginEvent.subscribe(ev=> {\n            //console.log('LOGIN EVENT MESSAGE',JSON.parse(ev.data).event)\n            //let msg = this.getSubscribeMessage(symbol)\n           // this.client.send(msg);\n        }); \n\n        this.blobEvent = this.messageEvent\n        .pipe(filter( event => JSON.parse(event.data).e === 'executionReport'))\n    \n        this.blobEvent.subscribe( ev=> {\n           // console.log('BLOB EVENT MESSAGE', ev.data)\n            let json = JSON.parse(ev.data) ;\n            \n                this.setOpenOrders(json, props);\n               \n        })\n            \n            //console.log('BLOB EVENT UNZIPPED',json)\n         \n\n        this.pingEvent = this.messageEvent\n        .pipe(filter( event =>  typeof event.data === 'string'))\n        .pipe(filter( event => event.data === this.pingIn ))\n        this.pingEvent.subscribe( ev=> {\n            console.log('PING EVENT MESSAGE',ev.data)\n            this.client.send(this.pingOut);\n        }); \n        \n        this.openEvent = fromEvent(this.client, 'open').subscribe((event) => {\n           // console.log('OPEN EVENT', event)\n            \n            if(this.login){\n                //let msg = this.getLoginMessage(credentials.key,credentials.secret,credentials.apiName)\n                //console.log('LoginMessage', msg)\n                //this.client.send(msg)\n            } else {\n                //let msg = this.getSubscribeMessage(symbol)\n                //this.client.send(msg);\n            }\n            \n\n            \n\n        \n        });\n        this.closeEvent = fromEvent(this.client, 'close').subscribe((event) => {\n           // console.log('CLOSE EVENT', event)\n            clearInterval(this.ping_id)\n        });\n\n        }\n\n        setOpenOrders (json, props){\n           // console.log('setOpenOrders', json, props)\n           \n           console.log('setOpenOrders', Array.isArray(json), typeof json)\n            if( json !== undefined || ! Array.isArray(json) ){\n                \n                //console.log('pre pre pre Transform', json)\n                props.setData({\n                    ...props.data,\n                    asset:[]\n                })\n                 //console.log('pre pre Transform', json.data)\n                \n                let newTrade = this.transformer.getTradeStream(json,this.symbol)\n                if(newTrade.state === 'CANCELED'){\n                    //console.log('PRE FILTERED', this.trades);\n                    this.trades = this.trades.filter(trade => trade.order_id !== newTrade.order_id)\n                    //console.log('FILTERED', this.trades);\n\n                } else {\n                        \n                        this.trades.unshift(newTrade)\n                        \n                }\n                            \n                    //console.log('TRDATA4', this.trades);\n                    \n                props.setData({\n                    ...props.data,\n                    asset:this.trades\n                })\n        \n            }\n        }\n\n        getLoginMessage ( key,secret,apiName ) {\n            \n            let timestamp = Date.now().toString();\n            let signature = require(\"crypto\")\n                            .createHmac(\"sha256\", secret)\n                            .update(timestamp+'#'+apiName+'#bitmart.WebSocket')\n                            .digest(\"hex\"); //binary, hex,base64\n\n            let msg = {\"op\": \"login\", \"args\":[key,timestamp,signature]} ;\n            return JSON.stringify(msg)\n\n        }\n\n        getSubscribeMessage (symbol) {\n            console.log('getSubscribeMessage', symbol )\n            this.symbol = symbol;\n            return JSON.stringify({\"op\": \"subscribe\", \"args\":[\"spot/user/order:\"+symbol]});\n        }\n\n        getUnsubscribeMessage (symbol) {\n            console.log('getUnSubscribeMessage', symbol )\n            \n            return JSON.stringify({\"op\": \"unsubscribe\", \"args\":[\"spot/user/order:\"+symbol]});\n        }\n    \n    \n    \n};\n","import BitmartWebSocket  from './bitmart.websocket.driver';\nimport BinanceWebSocket  from './binance.websocket.driver';\nconst ELEMENTS = {\n    BitmartWebSocket,\n    BinanceWebSocket\n};\n\nexport default class SocketFactory {\n    static createInstance(config, url, props,credentials,trades) {\n        console.log('createInstance',config, props,credentials,trades)\n        const socketCreator = ELEMENTS[config.name];\n        const socket = socketCreator ? new socketCreator(config, url, props,credentials,trades) : null;\n\n        return socket;\n    }\n}","import React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router\";\nimport MarketWebSocketConnection from './market.websocket';\n\nconst Market = props => {\nconst history = useHistory();\nconst [intervalId, setIntervalId ] = useState('');\nconst [ data, setData ]= useState( {})\n//const [ prevPrice, setPrevPrice ]= useState('0.00')  ;    \nlet [isOnline] = useState(navigator.onLine);\nconst setOnline = () => {\n    console.log('We are online!');\n    isOnline(true);\n};\nconst setOffline = () => {\n    console.log('We are offline!');\n    //props.selectedTicker='';\n    //props.clearTicker();\n    history.push('/login?offline=true')\n    isOnline(false);\n};  \nconst onPriceClick = e => {\n    console.log('Price Click', e.target.innerText);\n    let event = {target:{value:e.target.innerText}}\n    props.onChangePrice(event);\n}\nuseEffect(() => {\n    window.addEventListener('offline', setOffline);\n    window.addEventListener('online', setOnline);\n        //console.log('HANDLESTATE')\n  const ex = JSON.parse(localStorage.getItem('exchanges'))\n        //console.log('local', ex)\n  let thisExchange = ex.filter(exchange => \n            props.exchange.name === exchange.name\n        )\n        if(thisExchange){ \n        } else {\n            thisExchange = [{ \n                name: props.exchange.name,\n                apiKey: '',\n                secret: '',}];        \n        }\n\n        setData({\n            name: props.exchange.name,\n            apiKey: thisExchange.length > 0 ? thisExchange[0].apiKey: '',\n            secret: thisExchange.length > 0 ? thisExchange[0].secret: '',\n            url: props.exchange.url,\n            asks:[],\n            bids:[],\n            market:[],\n            selectedTicker: '',\n            prevSelectedTicker: props.selectedTicker,\n            tickerEndpoint: props.exchange.tickerEndpoint\n        });\n\n        //console.log('exchange' ,props.exchange,props);\n        if(props.selectedTicker.length < 3){\n            return;\n        }\n\n        let msg = '';\n        if(localStorage.getItem('selectedTicker') === undefined){ \n            localStorage.setItem('selectedTicker',props.selectedTicker);\n            msg = JSON.stringify({\"op\": \"subscribe\", \"args\":[\"spot/depth5:\"+props.selectedTicker]});\n            //console.log('ws_send1',props.selectedTicker)\n           // ws_send(msg);\n        } else if(props.selectedTicker === localStorage.getItem('selectedTicker')){\n            //console.log('ws_send2',props.selectedTicker)\n        } else if(props.selectedTicker !== localStorage.getItem('selectedTicker')){\n            msg = JSON.stringify({\"op\": \"unsubscribe\", \"args\": [\"spot/depth5:\"+localStorage.getItem('selectedTicker')]});\n            //console.log('ws_send3',props.selectedTicker)\n            //ws_send(msg);\n            localStorage.setItem('selectedTicker',props.selectedTicker);\n            msg = JSON.stringify({\"op\": \"subscribe\", \"args\":[\"spot/depth5:\"+props.selectedTicker]});\n            //console.log('ws_send4',props.selectedTicker)\n            //ws_send(msg);\n        }\n        if(props.exchange.name === 'Binance'){\n            //msg='';\n        }\n        let client = [];\n        msg = JSON.stringify({\"op\": \"subscribe\", \"args\":[\"spot/trade:\"+props.selectedTicker]});\n        //console.log('DEPTH MSG', msg)\n        client[props.exchange.name] = new MarketWebSocketConnection(props,setData, data ,msg );\n        \n        //c//lient.push(ws);\n        if(props.exchange.name === 'Bitmart'){\n\n           \n\n        // let iid = setInterval(() =>{\n            \n        //     if(client['Bitmart'].readyState == 1){\n        //         //console.log('DEPTH SENDING:',msg)\n        //         client['Bitmart'].send(msg);\n        //         clearInterval(iid)\n        //     }\n        // }, 500);\n        // console.log('DEPTH SENT:',msg)\n\n        let iid = setInterval(() =>{\n            //console.log('READYSTATE1',client['Bitmart'].readyState)\n            if(client['Bitmart'].readyState === 1 ){\n                //console.log('PINGIN:','ping')\n                client['Bitmart'].send('ping');\n                //client['Bitmart'].send(msg);\n            } \n        }, 15000);\n        setIntervalId(iid);\n\n        }\n\n        \n        //console.log('CLIENT', client);\n      \n        return () => {\n\n            window.removeEventListener('offline', setOffline);\n            window.removeEventListener('online', setOnline);\n            setData({});\n            let msg = JSON.stringify({\"op\": \"unsubscribe\", \"args\": [\"spot/trade:\"+localStorage.getItem('selectedTicker')]});\n            \n            \n            localStorage.setItem('selectedTicker', '');\n            //var unSubscribe = [\"btcusd@miniTicker\",\"ethusd@miniTicker\",\"bnbusd@miniTicker\",\"aadausd@miniTicker\",\"adausd@miniTicker\",\"dogeusdt@miniTicker\", \"enjusd@miniTicker\", \"maticusd@miniTicker\", \"eosusd@miniTicker\", \"vthousdt@miniTicker\", \"uniusdt@miniTicker\"]\n            \n            //send unsubscrube message here\n            //client.send(msg)\n            if(client['Bitmart']){\n                //client.send(msg)\n                clearInterval(intervalId)\n            client['Bitmart'].close();\n            }\n            if(client['Binance']){\n                client['Binance'].close();\n            }\n\n            \n            console.log('Leaving', msg);\n        }\n\n},[props.selectedTicker]);\n        if(data.market === undefined){\n            return null;\n        }\n        if(data.bids === undefined){\n            return null;\n        }\n        //console.log('MARKET',data)\n        let sideClass = '';\n        return (\n            \n            <div className=\"pull-right\" style={{marginTop: '2px', marginBottom: '2px', paddingRight:'35px', width:'160px'}}>\n                \n                <ul className=\"pt-1\" style={{listStyleType:'none', paddingLeft:'0px'}}>\n                {data.market.map((value, index) => {\n                    if(value.side === 'buy'){\n                        sideClass = 'text-success';\n                    } else {\n                        sideClass = 'text-danger';\n                    }\n                            return <li className=\"tiny\" key={index} style={{whiteSpace:'nowrap'}}><small onClick={onPriceClick} className={sideClass} >{value.price}</small> <small className=\"\" >{value.size.split('.')[0]}</small></li>\n                })}\n                </ul>\n                \n                \n            </div>\n            \n        );\n        \n}\nexport default Market;","import React, { useEffect, useState } from 'react';\nimport SocketFactory from './assets/socket.factory'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle\";\nimport $ from 'jquery';\nimport Market from \"./assets/market.component\";\nimport axios from 'axios';\nimport Table from \"react-bootstrap/Table\";\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nconst _transform = require('./assets/transformer');\n\n const Asset  = props => {\n    console.log('AssetProps', props)\n    let style;\n    if(props.assets === undefined || props.assets.length < 1){\n        return null;\n    }\n    console.log('AssetProps1', props.assets);\n    return (\n\n       \n\n    props.assets.map((asset,i) =>{\n        if( asset.state !== undefined && asset.state === 'CANCELED'){\n            style = {textDecoration: 'line-through'}\n        } else {\n            style = {};\n        }\n        return  (\n            <tr style={style} key={i}>\n                <td  className={ asset.side ==='buy' ? 'text-success' : 'text-danger' }>{asset.pair !== undefined ? asset.pair.replace(/_/g,\"/\") : ''}</td>\n                <td style={{textTransform: 'capitalize', whiteSpace:'nowrap'}} className=\" \">{asset.price} {asset.order_type !== undefined ? asset.order_type :''}</td>\n                <td className=\"\">{asset.qty !== undefined ? asset.qty : ''} </td>\n                <td style={{}} className=\"\">{asset.cost} {asset.base}</td> \n                 <td style={{}} className=\"\">{asset.transaction_date}</td>\n            </tr>\n            )\n    })\n    )\n    \n}\n\nconst onDelete = e => {\n    \n    console.log(e.target.asset)\n    axios.delete( '/api/asset/delete/'+e.target.id)\n    .then(res => {\n        console.log(res.data);\n        \n        // dispatch({\n        //     type: SET_ALERT_OVERWRITE,\n        //     payload: {  message:'Login Successful', alertType: 'success', timeout:10000}\n        // })\n        // dispatch({\n        //     type: SET_ALERT_OVERWRITE,\n        //     payload: {  message:'Login Successful', alertType: 'success', timeout:10000}\n        // })\n        //let history = useHistory();\n       //history.push(\"/asset\");\n        \n    });\n} \n\n\nconst AssetList = props => {\n//export default className AssetList extends Component {\n    const [intervalId, setIntervalId ] = useState('');\n    const [history, setHistory ] = useState({asset:[]});\n   \n    let [isOnline] = useState(navigator.onLine);\n    let [ orderTab, setOrderTab ] = useState(0);\n    \n    // constructor(props) {\n    //     super(props);\n    //     divis.state = {asset: []};\n    // }\n    \n    var ex = JSON.parse(localStorage.getItem('exchanges'))\n    var thisExchange = ex.filter(exchange => \n        props.exchange.name === exchange.name\n    )\n    if(thisExchange){ \n    } else {\n        thisExchange = [{ \n            name: props.exchange.name,\n            apiKey: '',\n            secret: ''}];        \n    }\n    useEffect(() => {\n        $('#carousel-'+props.exchange.name).carousel('pause')\n        $('#carousel-'+props.exchange.name).on('slide.bs.carousel', function (event) {\n            console.log(event.to);\n            setOrderTab(event.to)\n            if(event.to === 0){\n                //listOpenOrders()\n            }\n            getOrderHistory()\n        })\n\n     },[props.selectedTicker,setOrderTab])\n\n\n     useEffect(() => {\n        let mytrades = [];\n        let listenKey;\n        if(props.selectedTicker === undefined || props.selectedTicker.length < 1){\n            return;\n        }\n        var key = thisExchange[0].apiKey;\n        var apiName = thisExchange[0].apiName;\n        var secret = thisExchange[0].secret;\n        console.log('CREDS',key,apiName,secret)\n    \n        let client = [];\n        props.setData({\n            ...props.data,\n            asset: []\n        });\n    \n        console.log('GETTING TRADES', props, orderTab);\n        let transformer = new _transform(props.exchange.name);\n        axios.get('/api/'+props.exchange.name+'/trades?status=4&symbol='+props.selectedTicker, {\n            headers: {\n            'xbmkey': key,\n            'xbmname': apiName,\n            'xbmsecret': secret\n            }\n        })\n        .then(response => {\n            // this.setState({ asset: response.data });\n            \n            console.log('TRADES DATA' , response.data, props.data,'/api/'+props.exchange.name+'/trades?status=4&symbol='+props.selectedTicker);\n            mytrades = transformer.getTrades(response.data.trades,props.selectedTicker)\n            /////////\n            \n            props.setData({\n            ...props.data,\n            asset: mytrades,\n            \n            });\n    \n            if(props.exchange.name === 'Binance'){\n                listenKey = response.data.listenKey;\n                console.log('LISTENKEY', listenKey);\n            }\n            console.log('Properties', props , {key:key,apiName:apiName,secret:secret} , mytrades, true)\n            // props, listenKey, credentials, trades\n            const config = { Bitmart: {name:'BitmartWebSocket', login:true, url: 'wss://ws-manager-compress.bitmart.com?protocol=1.1'}, Binance: {name:'BinanceWebSocket', login:false, url:'wss://stream.binance.us:9443/ws/'+listenKey} };\n            let url = props.exchange.name === 'Bitmart' ? config[props.exchange.name].url : config[props.exchange.name].url + listenKey ;\n            client[props.exchange.name] =  SocketFactory.createInstance(config[props.exchange.name], url, props,{key:key,apiName:apiName,secret:secret}, mytrades);\n            //console.log('CLIENT ARRAY',client)\n            //client[props.exchange.name] = new WebSocket('wss://ws-manager-compress.bitmart.com?protocol=1.1', props , {key:key,apiName:apiName,secret:secret} , mytrades, true);\n            // if(props.exchange.name === 'Binance'){\n            //     let binanceMsg = fromEvent(client[props.exchange.name].client, 'message');\n            //     let  binanceMessages = binanceMsg.pipe(filter( event => JSON.parse(event.data).e === 'executionReport'));\n            //     binanceMessages.subscribe(ev=> console.log('Binance MESSAGE',JSON.parse(ev.data))); \n            // }\n            \n            // fromEvent(client[props.exchange.name].client, 'open').subscribe((event) => console.log('Open Event', event));\n            // fromEvent(client[props.exchange.name].client, 'close').subscribe((event) => console.log('Close Event', event));\n\n                if(props.exchange.name === 'Bitmart'){\n                    \n                        // let smsg = JSON.stringify({\"op\": \"subscribe\", \"args\":[\"spot/user/order:\"+props.selectedTicker]});\n                        // client['Bitmart'].client.send(smsg)\n                        // let cancelId = setInterval(() =>{\n                        //     console.log('ReadyState:', client['Bitmart'].client.readyState, msg)\n                        //     if(client['Bitmart'].client.readyState == 1 ){\n                        //         console.log('Logging In:', msg)\n                        //         client['Bitmart'].client.send(msg);\n                        //         clearInterval(cancelId);\n                                \n                        //     } \n                        // }, 3000, cancelId);\n    \n                    \n                    // let iid = setInterval(() =>{\n                    //     //console.log('READYSTATE1',client['Bitmart'].readyState)\n                    //     if(client['Bitmart'].client.readyState === 1 ){\n                    //         //console.log('PINGIN:','ping')\n                    //         client['Bitmart'].client.send('ping');\n                    //         //client['Bitmart'].send(msg);\n                    //     } \n                    // }, 6000);\n                    // setIntervalId(iid);\n                }\n    \n                \n        }).catch(function (error){\n            console.log(error);\n        })\n        return () => {\n            // props.setData({\n            //     ...props.data,\n            //     asset: []\n            // });\n            window.removeEventListener('offline', setOffline);\n            window.removeEventListener('online', setOnline);\n            //setData({});\n            \n            \n            \n            localStorage.setItem('selectedTicker', '');\n           // var unSubscribe = [\"btcusd@miniTicker\",\"ethusd@miniTicker\",\"bnbusd@miniTicker\",\"aadausd@miniTicker\",\"adausd@miniTicker\",\"dogeusdt@miniTicker\", \"enjusd@miniTicker\", \"maticusd@miniTicker\", \"eosusd@miniTicker\", \"vthousdt@miniTicker\", \"uniusdt@miniTicker\"]\n            \n            \n            if(client['Bitmart'] !== undefined){\n                //client.send(msg)\n                clearInterval(intervalId)\n            client['Bitmart'].client.close();\n            }\n            if( client['Binance'] !== undefined ){\n                //client['Binance'].client.close();\n            }\n    \n            \n            console.log('Leaving');\n        }\n    \n    }, [props.selectedTicker, orderTab]);  \n \n    \n\n\nconsole.log('AssetsList', props);\nif(props.data === undefined || props.data.asset === undefined || props.selectedTicker === undefined){\n    return ;\n}\n    \n    \n    const setOnline = () => {\n        console.log('We are online!');\n        isOnline(true);\n    };\n    const setOffline = () => {\n        console.log('We are offline!');\n        //props.selectedTicker='';\n        //props.clearTicker();\n        history.push('/login?offline=true')\n        isOnline(false);\n    };  \n      //let history = useHistory();\n     \nconst getOrderHistory = () => {\n    let mytrades;\n    var ex = JSON.parse(localStorage.getItem('exchanges'))\n    var thisExchange = ex.filter(exchange => \n        props.exchange.name === exchange.name\n    )\n    if(thisExchange){ \n    } else {\n        thisExchange = [{ \n            name: props.exchange.name,\n            apiKey: '',\n            secret: ''}];        \n    }\n    var key = thisExchange[0].apiKey;\n    var apiName = thisExchange[0].apiName;\n    var secret = thisExchange[0].secret;\n    //return null;\n    // var timestamp = Date.now().toString();\n    // var signature = require(\"crypto\")\n    // .createHmac(\"sha256\", secret)\n    // .update(timestamp+'#'+apiName+'#bitmart.WebSocket')\n    // .digest(\"hex\"); \n    \n    \n    \n\n    setHistory({\n        ...history,\n        asset: []\n    });\n\n    console.log('GETTING ORDERS', props, thisExchange);\n    let transformer = new _transform(props.exchange.name);\n    axios.get('http://localhost:4000/'+props.exchange.name+'/trades?status=6&symbol='+props.selectedTicker, {\n        headers: {\n            xbmkey: key,\n            xbmname: apiName,\n            xbmsecret: secret\n        }\n        })\n    .then(response => {\n       // this.setState({ asset: response.data });\n       console.log('ORDERS DATA' , response.data);\n       \n\n       mytrades = transformer.getTrades(response.data.trades, props.selectedTicker)\n       setHistory({\n        ...history,\n        asset: mytrades\n        });\n    })\n\n    console.log('listOrderHistory', history)\n\n}\n\n\n\n    //});\n    // componentDidMount() {\n        // axios.get('http://localhost:4000/asset/')\n        //     .diven(response => {\n        //         divis.setState({ asset: response.data });\n        //     })\n        //     .catch(function (error){\n        //         console.log(error);\n        //     })\n    // }\n    const listOpenOrders = () => {\n    //assetList() {\n        console.log('listOpenOrders', props)\n        return <Asset data={props.data} assets={props.data.asset} />;\n\n        // return data.asset.map(function(currentAsset, i){\n        //     return <Asset asset={currentAsset} key={i} />;\n        // })\n    }\n\nconst listOrderHistory = () => {\n\n        // setHistory({\n        //     ...history,\n        //     asset: []\n        // });\n\n        // console.log('GETTING ORDERS', props, orderTab);\n        // let transformer = new _transform(props.exchange.name);\n        // axios.get('http://localhost:4000/'+props.exchange.name+'/trades?status=4&symbol='+props.selectedTicker, headers)\n        // .then(response => {\n        //    // this.setState({ asset: response.data });\n        //    console.log('ORDERS DATA' , response.data, props.data);\n        //    mytrades = transformer.getTrades(response.data.trades)\n        //    setHistory({\n        //     ...history,\n        //     asset: mytrades\n        //     });\n        // })\n\n        // console.log('listOrderHistory', props)\n        return <Asset data={history} assets={history.asset} />\n\n        // return data.asset.map(function(currentAsset, i){\n        //     return <Asset asset={currentAsset} key={i} />;\n        // })\n    }\n    \n          \n        return (\n <div className=\"font-face-din fx-12\" style={{width:'100%', maxHeight:'196px', overflow:'scroll', overflowY:'scroll'}} >\n<div id={'carousel-'+props.exchange.name}  className=\"carousel slide\">\n\n  <ol className=\"carousel-indicators carousel-indicators-numbers\">\n    <li data-target={'#carousel-'+props.exchange.name}  data-slide-to=\"0\" className=\"active\">Open Orders</li>\n    <li data-target={'#carousel-'+props.exchange.name}  data-slide-to=\"1\" className=\"\">Order History</li>\n    <li data-target={'#carousel-'+props.exchange.name}  data-slide-to=\"2\">Market Trades</li>\n  </ol>\n\n\n  <div className=\"carousel-inner\" role=\"listbox\">\n    <div className=\"carousel-item active\">\n    <Table size=\"sm\" className=\"font-face-din fx-11 mb-0\" style={{ marginTop: 0 , width:'100%', minWidth:'375px',textAlign:'left' }} >\n        <tbody style={{ overflow:'auto'}}>\n            <Asset data={props.data} assets={props.data.asset} />\n        </tbody>\n    </Table>\n    </div>\n    <div className=\"carousel-item\">\n    <Table size=\"sm\" className=\"font-face-din fx-11 mb-0\" style={{ marginTop: 0 , width:'100%', minWidth:'375px',textAlign:'left' }} >\n        <tbody style={{ overflow:'auto'}}>\n        <Asset data={history} assets={history.asset} />\n        </tbody>\n    </Table>\n    </div>\n    <div className=\"carousel-item\">\n    <div size=\"sm\" className=\"font-face-din fx-11 mb-0\" style={{ marginTop: 0 , width:'100%', minWidth:'375px',textAlign:'left' }} >\n        <div style={{ overflow:'auto'}}>\n        <Market onChangePrice={props.onChangePrice} clearTicker={props.clearTicker}  baseAsset={props.data.baseAsset}  exchange={props.exchange} selectedTicker={props.selectedTicker} prevSelectedTicker={props.prevSelectedTicker}  />\n        </div>\n    </div>\n    </div>\n  </div>\n\n</div>\n</div>\n               \n)\n\n}\nexport default AssetList;","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle\";\nimport Chart from 'kaktana-react-lightweight-charts'\n\n//import { REMOVE_ALERT, SET_ALERT } from \"../components/types\";\n\n\n\n \n    class EditAsset extends React.Component {\n        constructor(props) {\n          super(props);\n      \n          this.state = {\n            options: {\n              alignLabels: true,\n              timeScale: {\n                rightOffset: 12,\n                barSpacing: 3,\n                fixLeftEdge: true,\n                lockVisibleTimeRangeOnResize: true,\n                rightBarStaysOnScroll: true,\n                borderVisible: false,\n                borderColor: \"#fff000\",\n                visible: true,\n                timeVisible: true,\n                secondsVisible: false\n              }\n            },\n            candlestickSeries: [{\n              data: [\n                { time: '2018-10-19', open: 180.34, high: 180.99, low: 178.57, close: 179.85 },\n                { time: '2018-10-22', open: 180.82, high: 181.40, low: 177.56, close: 178.75 },\n                { time: '2018-10-23', open: 175.77, high: 179.49, low: 175.44, close: 178.53 },\n                { time: '2018-10-24', open: 178.58, high: 182.37, low: 176.31, close: 176.97 },\n                { time: '2018-10-25', open: 177.52, high: 180.50, low: 176.83, close: 179.07 },\n                { time: '2018-10-26', open: 176.88, high: 177.34, low: 170.91, close: 172.23 },\n                { time: '2018-10-29', open: 173.74, high: 175.99, low: 170.95, close: 173.20 },\n                { time: '2018-10-30', open: 173.16, high: 176.43, low: 172.64, close: 176.24 },\n                { time: '2018-10-31', open: 177.98, high: 178.85, low: 175.59, close: 175.88 },\n                { time: '2018-11-01', open: 176.84, high: 180.86, low: 175.90, close: 180.46 },\n                { time: '2018-11-02', open: 182.47, high: 183.01, low: 177.39, close: 179.93 },\n                { time: '2018-11-05', open: 181.02, high: 182.41, low: 179.30, close: 182.19 }\n              ]\n            }]\n          }\n        }\n      \n        render() {\n          return (\n            <div className=\"container\" style={{ height:'200px'}} >\n            <Chart options={this.state.options} candlestickSeries={this.state.candlestickSeries} autoWidth height={320} />\n            </div>\n          )\n        }\n    }\n\nexport default EditAsset","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class CreateAsset extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onChangePair = this.onChangePair.bind(this);\n        this.onChangePrice = this.onChangePrice.bind(this);\n        this.onChangeAmount = this.onChangeAmount.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            pair: '',\n            price: '',\n            amount: '',\n            //todo_completed: false\n        }\n    }\n\n    onChangePair(e) {\n        this.setState({\n            pair: e.target.value\n        });\n    }\n\n    onChangePrice(e) {\n        this.setState({\n            price: e.target.value\n        });\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        \n        console.log(`Form submitted:`, this.state);\n        console.log(`Pair: ${this.state.pair}`);\n        console.log(`Price: ${this.state.price}`);\n        console.log(`Amount: ${this.state.amount}`);\n        \n\n        const newAsset = {\n            pair: this.state.pair,\n            price: this.state.price,\n            amount: this.state.amount,\n            //todo_completed: this.state.todo_completed\n        };\n\n        axios.post('/api/asset/add', newAsset)\n\n            .then(res => {\n                console.log(res.data);\n                this.setState({\n                    redirectTo: '/'\n                })\n            \n            });\n            \n\n\n        this.setState({\n            pair: '',\n            price: '',\n            amount: '',\n            //order_type: '',\n            //order_status: 0,\n            //status_message: ''\n        })\n    }\n\n    render() {\n        return (\n            <div style={{ marginLeft: '12px', minWidth:'400px' }} className=\"float-left pt-2\">\n                <h5>Create New Asset</h5>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\"> \n                        <label>Pair: </label>\n                        <input  type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.pair}\n                                onChange={this.onChangePair}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Price: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.price}\n                                onChange={this.onChangePrice}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Amount: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.amount}\n                                onChange={this.onChangeAmount}\n                                />\n                    </div>\n                    \n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Create Asset\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class Register extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        //this.onChangeAmount = this.onChangeAmount.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            username: '',\n            password: '',\n            //amount: '',\n            //todo_completed: false\n        }\n    }\n\n    onChangeUsername(e) {\n        this.setState({\n            username: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n\n    onSubmit(e) {\n        e.preventDefault();\n        \n        console.log(`Registration submitted:`, this.state);\n        console.log(`Pair: ${this.state.username}`);\n        console.log(`Price: ${this.state.price}`);\n        console.log(`Amount: ${this.state.amount}`);\n        \n        const newRegistration = {\n            username: this.state.username,\n            password: this.state.password,\n            //amount: this.state.amount,\n            //todo_completed: this.state.todo_completed\n        };\n\n        axios.post('/api/auth/signup', newRegistration)\n\n            .then(res => {\n                console.log(res.data);\n                this.props.history.push(\"/login\");\n                // this.setState({\n                //     redirectTo: '/login'\n                // })\n            \n            });\n            \n        this.setState({\n            username: '',\n            password: '',\n            //amount: '',\n            //order_type: '',\n            //order_status: 0,\n            //status_message: ''\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container\" style={{marginTop: 10}}>\n                <h3>Register</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\"> \n                        <label>User Name: </label>\n                        <input  type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.username}\n                                onChange={this.onChangeUsername}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.password}\n                                onChange={this.onChangePassword}\n                                />\n                    </div>\n                    \n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Register\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport Select from \"react-select\";\n//import axios from 'axios';\n//var opts = [{ value: 'SHIB_USDT', label: 'SHIB_USDT' }]\n//props.options\n const TickerSelect = props => (\n    <Select classNamePrefix=\"react-select\" className=\"react-select-container\" options={props.options} onFocus={props.onFocus} onChange={props.onChange} />\n)\n\nexport default TickerSelect;","import React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router\";\nimport WebSocketConnection from './spot.websocket';\n\n// let count = 0;\n// let prices = [];\n// let gains = [];\n// let losses = [];\nconst Spot = props => {\n//const { state, dispatch } = React.useContext(AuthContext); \nconst history = useHistory();\nconst [intervalId, setIntervalId ] = useState('');\nconst [ data, setData ]= useState( {})\n//const [ prices, setPrices ]= useState( [])\n//const [ prevPrice, setPrevPrice ]= useState('0.00')  ;    \nlet [isOnline] = useState(navigator.onLine);\n\nconst setOnline = () => {\n    console.log('We are online!');\n    isOnline(true);\n};\nconst setOffline = () => {\n    console.log('We are offline!');\n    //props.selectedTicker='';\n    //props.clearTicker();\n    history.push('/login?offline=true')\n    isOnline(false);\n}; \n\nconst onPriceClick = e => {\n    console.log('Price Click', e.target.innerText);\n    let event = {target:{value:e.target.innerText}}\n    props.onChangePrice(event);\n}\n\nuseEffect(()=>{\n    //let prices = [];\n    // if(props !== undefined && props.selectedTicker !== undefined && props.selectedTicker.length > 0){\n\n    //     if(data.priceStyle==='text-danger'){\n    //         //loss\n    //         if(losses.length < 14){\n    //             losses.push(parseFloat(data.prevPrice)-parseFloat(data.lastPrice))\n    //             console.log('Losses',parseFloat(data.prevPrice)-parseFloat(data.lastPrice))\n    //         }\n            \n    //     } else if(data.priceStyle==='text-success'){\n    //         if(gains.length < 14){\n    //             gains.push(parseFloat(data.lastPrice)-parseFloat(data.prevPrice))\n    //             console.log('Gains', parseFloat(data.lastPrice)-parseFloat(data.prevPrice))\n    //         }\n    //     }\n\n    //     console.log(gains,losses)\n    //     if(gains.length == 14 && losses.length == 14){\n    //         console.log('GOT HERE')\n    //     //let gains = prices.filter(price => price > 0);\n    //     console.log('Gains',gains)\n    //     let avgGain = (gains) => gains.reduce((a, b) => a + b) / gains.length;\n    //     //let losses = prices.filter(price => price < 0);\n    //     let avgLoss= (losses) => losses.reduce((a, b) => a + b) / losses.length;\n    //     console.log('Losses',losses)\n    //     let gain = avgGain(gains);\n    //     let loss = avgLoss(losses)\n    //     let rs = Math.abs(gain) / Math.abs(loss);\n    //     let rsi = 100 - (100 / (1 + rs));\n    //     console.log('RSI',rsi);\n    //     gains=[];\n    //     losses=[]\n    //     }\n    //     //prices = [];\n        \n\n    // } else {\n        \n    //     count = 0;\n\n    // count++\n    // console.log(count);\n    // }//if selectedTicker\n     \n},[data.lastPrice, props.selectedTicker])\n\n\n\nuseEffect(() => {\n    window.addEventListener('offline', setOffline);\n    window.addEventListener('online', setOnline);\n\n        //console.log('HANDLESTATE')\n  const ex = JSON.parse(localStorage.getItem('exchanges'))\n        //console.log('local', ex)\n   let thisExchange = ex.filter(exchange => \n            props.exchange.name === exchange.name\n        )\n        if(thisExchange){ \n        } else {\n            thisExchange = [{ \n                name: props.exchange.name,\n                apiKey: '',\n                secret: '',}];        \n        }\n\n        setData({\n            name: props.exchange.name,\n            apiKey: thisExchange.length > 0 ? thisExchange[0].apiKey: '',\n            secret: thisExchange.length > 0 ? thisExchange[0].secret: '',\n            url: props.exchange.url,\n            high24hr: '',\n            low24hr: '',\n            open24hr: '',\n            volume24hr: '',\n            lastPrice:'',\n            priceStyle:'' ,\n            prevPrice:'0.00' ,\n            selectedTicker: '',\n            prevSelectedTicker: props.selectedTicker,\n            tickerEndpoint: props.exchange.tickerEndpoint\n        });\n\n        console.log('exchange' ,props.exchange,props);\n        if(props.selectedTicker.length < 3){\n            return;\n        }\n\n        let msg = '';\n        if(localStorage.getItem('selectedTicker') === undefined){ \n            localStorage.setItem('selectedTicker',props.selectedTicker);\n            msg = JSON.stringify({\"op\": \"subscribe\", \"args\":[\"spot/ticker:\"+props.selectedTicker]});\n            //console.log('ws_send1',props.selectedTicker)\n           // ws_send(msg);\n        } else if(props.selectedTicker === localStorage.getItem('selectedTicker')){\n            //console.log('ws_send2',props.selectedTicker)\n        } else if(props.selectedTicker !== localStorage.getItem('selectedTicker')){\n            msg = JSON.stringify({\"op\": \"unsubscribe\", \"args\": [\"spot/ticker:\"+localStorage.getItem('selectedTicker')]});\n            //console.log('ws_send3',props.selectedTicker)\n            //ws_send(msg);\n            localStorage.setItem('selectedTicker',props.selectedTicker);\n            msg = JSON.stringify({\"op\": \"subscribe\", \"args\":[\"spot/ticker:\"+props.selectedTicker]});\n            //console.log('ws_send4',props.selectedTicker)\n            //ws_send(msg);\n        }\n        if(props.exchange.name === 'Binance'){\n            //msg='';\n        }\n        let client = [];\n        client[props.exchange.name] = new WebSocketConnection(props,setData, data ,msg );\n        \n        //c//lient.push(ws);\n        if(props.exchange.name === 'Bitmart'){\n\n        // let iid = setInterval(() =>{\n            \n        //     if(client['Bitmart'].readyState == 1){\n        //         console.log('SENDING:',msg)\n        //         client['Bitmart'].send(msg);\n        //         clearInterval(iid)\n        //     }\n        // }, 500);\n\n        let iid = setInterval(() =>{\n            //console.log('READYSTATE1',client['Bitmart'].readyState)\n            if(client['Bitmart'].readyState === 1 ){\n                //console.log('PINGING:','ping')\n                client['Bitmart'].send('ping');\n                //client['Bitmart'].send(msg);\n            } \n        }, 15000);\n        setIntervalId(iid)\n\n        }\n        \n        \n        //console.log('CLIENT', client);\n      \n        return () => {\n\n            window.removeEventListener('offline', setOffline);\n            window.removeEventListener('online', setOnline);\n            setData({});\n            let msg = JSON.stringify({\"op\": \"unsubscribe\", \"args\": [\"spot/ticker:\"+localStorage.getItem('selectedTicker')]});\n            \n            \n            localStorage.setItem('selectedTicker', '');\n            var unSubscribe = [\"btcusd@miniTicker\",\"ethusd@miniTicker\",\"bnbusd@miniTicker\",\"aadausd@miniTicker\",\"adausd@miniTicker\",\"dogeusdt@miniTicker\", \"enjusd@miniTicker\", \"maticusd@miniTicker\", \"eosusd@miniTicker\", \"vthousdt@miniTicker\", \"uniusdt@miniTicker\"]\n            \n            //send unsubscrube message here\n            //client.send(msg)\n            if(client['Bitmart']){\n                \n                //client['Bitmart'].send(msg)\n                \n                clearInterval(intervalId)\n                client['Bitmart'].close();\n            }\n            if(client['Binance']){\n                client['Binance'].close();\n            }\n\n            \n            console.log('Leaving', msg);\n        }\n\n},[props.selectedTicker]);\n\n//console.log(count++) \n        return (\n            \n            <div className=\"container\" style={{marginTop: '2px', marginBottom: '2px'}}>\n                \n                 <div onClick={onPriceClick} style={{width:'72%', paddingLeft:'1px',paddingTop:'1px'}} className=\"float-left\"><h6 className={data.priceStyle}>{data.lastPrice}</h6></div>\n                <div style={{width:'28%', paddingLeft:'1px'}} className=\"float-left\"><h6> {data.baseAsset}</h6></div>\n\n                <div style={{width:'72%', paddingLeft:'1px',paddingTop:'1px', marginTop:'0px' }} className=\"tiny pt-1 float-left\"><small>{data.high24hr}</small></div>\n                <div style={{width:'28%',color:'',paddingTop:'1px', marginTop:'0px' }}  className=\"tiny-label pt-1 float-left\"><small >High</small></div>\n\n                <div style={{width:'72%', paddingLeft:'1px',paddingTop:'1px', marginTop:'0px'}} className=\"tiny float-left\"><small>{data.low24hr}</small></div>\n                <div style={{width:'28%',color:'',paddingTop:'1px', marginTop:'0px' }}  className=\"tiny-label float-left\"><small> Low</small></div>\n\n                <div style={{width:'72%', paddingLeft:'1px',paddingTop:'1px', color:'', marginTop:'0px' }} className=\"tiny float-left\"><small>{data.open24hr}</small></div>\n                <div style={{width:'28%',color:'',paddingTop:'1px', marginTop:'0px' }}  className=\"tiny-label float-left\"><small>Open</small></div>\n\n\n                <div style={{width:'72%', paddingLeft:'1px',paddingTop:'1px', color:'', marginTop:'0px'}} className=\"tiny float-left\"><small>{data.volume24hr}</small></div>\n                <div style={{width:'28%',color:'',paddingTop:'1px', marginTop:'0px'}}  className=\"tiny-label float-left\"><small> Volume</small></div>\n\n            </div>\n            \n        );\n        \n}\nexport default Spot;","import React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router\";\nimport DepthWebSocketConnection from './depth.websocket';\n\nconst Depth = props => {\nconst history = useHistory();\nconst [intervalId, setIntervalId ] = useState('');\nconst [ data, setData ]= useState( {})\n//const [ prevPrice, setPrevPrice ]= useState('0.00')  ;    \nlet [isOnline] = useState(navigator.onLine);\nconst setOnline = () => {\n    console.log('We are online!');\n    isOnline(true);\n};\nconst setOffline = () => {\n    console.log('We are offline!');\n    history.push('/login?offline=true')\n    isOnline(false);\n};  \nconst onPriceClick = e => {\n    console.log('Price Click', e.target.innerText);\n    let event = {target:{value:e.target.innerText}}\n    props.onChangePrice(event);\n}\nuseEffect(() => {\n    window.addEventListener('offline', setOffline);\n    window.addEventListener('online', setOnline);\n        //console.log('HANDLESTATE')\n  const ex = JSON.parse(localStorage.getItem('exchanges'))\n        //console.log('local', ex)\n   let thisExchange = ex.filter(exchange => \n            props.exchange.name === exchange.name\n        )\n        if(thisExchange){ \n        } else {\n            thisExchange = [{ \n                name: props.exchange.name,\n                apiKey: '',\n                secret: ''}];        \n        }\n\n        setData({\n            name: props.exchange.name,\n            apiKey: thisExchange.length > 0 ? thisExchange[0].apiKey: '',\n            secret: thisExchange.length > 0 ? thisExchange[0].secret: '',\n            url: props.exchange.url,\n            asks:[],\n            bids:[],\n            selectedTicker: '',\n            prevSelectedTicker: props.selectedTicker,\n            tickerEndpoint: props.exchange.tickerEndpoint\n        });\n\n        //console.log('exchange' ,props.exchange,props);\n        if(props.selectedTicker.length < 3){\n            return;\n        }\n\n        let msg = '';\n        if(localStorage.getItem('selectedTicker') === undefined){ \n            localStorage.setItem('selectedTicker',props.selectedTicker);\n            msg = JSON.stringify({\"op\": \"subscribe\", \"args\":[\"spot/depth5:\"+props.selectedTicker]});\n            //console.log('ws_send1',props.selectedTicker)\n           // ws_send(msg);\n        } else if(props.selectedTicker === localStorage.getItem('selectedTicker')){\n            console.log('ws_send2',props.selectedTicker)\n        } else if(props.selectedTicker !== localStorage.getItem('selectedTicker')){\n            msg = JSON.stringify({\"op\": \"unsubscribe\", \"args\": [\"spot/depth5:\"+localStorage.getItem('selectedTicker')]});\n            //console.log('ws_send3',props.selectedTicker)\n            //ws_send(msg);\n            localStorage.setItem('selectedTicker',props.selectedTicker);\n            msg = JSON.stringify({\"op\": \"subscribe\", \"args\":[\"spot/depth5:\"+props.selectedTicker]});\n            //console.log('ws_send4',props.selectedTicker)\n            //ws_send(msg);\n        }\n        if(props.exchange.name === 'Binance'){\n            //msg='';\n        }\n        let client = [];\n        msg = JSON.stringify({\"op\": \"subscribe\", \"args\":[\"spot/depth5:\"+props.selectedTicker]});\n        //console.log('DEPTH MSG', msg)\n        client[props.exchange.name] = new DepthWebSocketConnection(props,setData, data ,msg );\n        \n        //c//lient.push(ws);\n        if(props.exchange.name === 'Bitmart'){\n\n           \n\n        // let iid = setInterval(() =>{\n            \n        //     if(client['Bitmart'].readyState === 1){\n        //         //console.log('DEPTH SENDING:',msg)\n        //         client['Bitmart'].send(msg);\n        //         clearInterval(iid)\n        //     }\n        // }, 500);\n        // console.log('DEPTH SENT:',msg)\n\n        let iid = setInterval(() =>{\n            //console.log('READYSTATE1',client['Bitmart'].readyState)\n            if(client['Bitmart'].readyState === 1 ){\n                //console.log('PINGIN:','ping')\n                client['Bitmart'].send('ping');\n                //client['Bitmart'].send(msg);\n            } \n        }, 15000);\n        setIntervalId(iid);\n\n        }\n\n        \n        //console.log('CLIENT', client);\n      \n        return () => {\n\n            window.removeEventListener('offline', setOffline);\n            window.removeEventListener('online', setOnline);\n            setData({});\n            let msg = JSON.stringify({\"op\": \"unsubscribe\", \"args\": [\"spot/depth5:\"+localStorage.getItem('selectedTicker')]});\n            \n            \n            localStorage.setItem('selectedTicker', '');\n            var unSubscribe = [\"btcusd@miniTicker\",\"ethusd@miniTicker\",\"bnbusd@miniTicker\",\"aadausd@miniTicker\",\"adausd@miniTicker\",\"dogeusdt@miniTicker\", \"enjusd@miniTicker\", \"maticusd@miniTicker\", \"eosusd@miniTicker\", \"vthousdt@miniTicker\", \"uniusdt@miniTicker\"]\n            \n            //send unsubscrube message here\n            //client.send(msg)\n            if(client['Bitmart']){\n                //client.send(msg)\n                clearInterval(intervalId)\n            client['Bitmart'].close();\n            }\n            if(client['Binance']){\n                client['Binance'].close();\n            }\n\n            \n            console.log('Leaving', msg);\n        }\n\n},[props.selectedTicker]);\n        if(data.asks === undefined){\n            return null;\n        }\n        if(data.bids === undefined){\n            return null;\n        }\n        //console.log('DEPTH',data)\n        return (\n            \n            <div className=\"container\" style={{marginTop: '2px', marginBottom: '2px', paddingLeft:'0px'}}>\n                \n                <ul className=\"pt-1\" style={{listStyleType:'none', paddingLeft:'0px'}}>\n                {data.asks.map((value, index) => {\n                            return <li className=\"tiny\" key={index} style={{whiteSpace:'nowrap'}}><small onClick={onPriceClick} className=\"text-danger\" >{value[0]}</small> <small className=\"\" >{value[1]}</small></li>\n                })}\n                </ul>\n                <ul style={{listStyleType:'none', paddingLeft:'0px'}}>\n                {data.bids.map((value, index) => {\n                            return <li className=\"tiny\" key={index} style={{whiteSpace:'nowrap'}}><small onClick={onPriceClick} className=\"text-success\">{value[0]}</small> <small className=\"\" >{value[1]}</small></li>\n                })}\n                </ul>\n                \n            </div>\n            \n        );\n        \n}\nexport default Depth;","import React, {Component} from 'react';\n\n\n\n class  Technicals extends Component {\n\nconstructor(props){\n    super(props)\n    // this.data =       {\n    //     \"interval\": \"15m\",\n    //     \"width\": \"100%\",\n    //     \"isTransparent\": false,\n    //     \"height\": \"100%\",\n    //     \"symbol\": \"BINANCE:SHIBUSDT\",\n    //     \"showIntervalTabs\": true,\n    //     \"locale\": \"en\",\n    //     \"colorTheme\": \"light\"\n    //   };\n}\n    componentDidMount() {\n        // const script = document.createElement(\"script\");\n        // script.async = true;\n        // script.src = \"https://s3.tradingview.com/external-embedding/embed-widget-technical-analysis.js\";\n        // //const el =findDOMNode(this.domRef)\n        // script.innerHTML=  JSON.stringify({\n        //     \"interval\": \"15m\",\n        //     \"width\": \"100%\",\n        //     \"isTransparent\": false,\n        //     \"height\": \"50%\",\n        //     \"symbol\": \"BINANCE:SHIBUSDT\",\n        //     \"showIntervalTabs\": false,\n        //     \"locale\": \"en\",\n        //     \"colorTheme\": \"light\"\n        //   })\n        \n        // document.getElementById('tradingview').appendChild(script);\n        // console.log('SCRIPTS',document.getElementById('tradingview'))\n         \n      }\nrender(){\n    return(null)\nreturn (\n\n\n    <div class=\"tradingview-widget-container\">\n      <div class=\"tradingview-widget-container__widget\"></div>\n      <div id=\"tradingview\" class=\"tradingview-widget-copyright\"></div>\n      \n    </div>\n\n\n)\n}\n}\n\nexport default Technicals;","import React from 'react';\n\n const Wallet = props => {\n     let avail = '';\n     let currency = '';\n     let frozen = '';\n     let asset, wallet;\n     if( props.wallet === undefined ){\n         return;\n     }\n\n     if(props.tab === 'buy'){\n        \n        asset = props.ticker !== undefined ? props.ticker.replace(/.*_/g,\"\") : '';\n    } else {\n        \n        asset =  props.ticker !== undefined ? props.ticker.replace(/_.*/g,\"\"): '';\n    }\n     wallet = props.wallet.filter(account => \n        account.id === asset\n    ) \n     console.log('WALLET TAG', wallet,asset)\n     if(wallet.length > 0 ){\n        avail = wallet[0].available;\n        frozen = wallet[0].frozen;\n        currency = wallet[0].id\n     }\n\n     const percent25 = e => {\n         console.log('PERCENT25')\n         if(avail.length>0){\n        \n        props.setAmount({target:{value:.25 * Math.round(avail)}})\n         }\n    }\n\n    const percent50 = e => {\n        console.log('PERCENT50')\n        if(avail.length>0){\n       \n       props.setAmount({target:{value:.50 * Math.round(avail)}})\n        }\n   }\n\n   const percent75 = e => {\n    console.log('PERCENT75')\n    if(avail.length>0){\n   \n   props.setAmount({target:{value:.75 * Math.round(avail)}})\n    }\n}\n\nconst percent100 = e => {\n    console.log('PERCENT100', avail)\n    if(avail.length>0){\n   \n        props.setAmount({target:{value:Math.round(avail)}})\n    }\n}\n\n    return (\n    <div className=\"\" style={{paddingLeft:'0px'}}>\n    <div className=\"row\">\n        <div onClick={percent25} className=\"col-sm-3 tiny\"><small>25%</small></div>\n        <div onClick={percent50} className=\"col-sm-3 tiny\"><small className=\"\">50%</small></div>\n        <div onClick={percent75} className=\"col-sm-3 tiny\"><small className=\"\">75%</small></div>\n        <div onClick={percent100} className=\"col-sm-3 tiny\"><small className=\"\">100%</small></div>\n    </div>\n     <div className=\"row\">    \n        <div style={{whiteSpace:'nowrap'}} className=\"col-sm-12 pt-2 tiny\"><small className=\"\">Avail. {avail} {currency}</small></div> \n        <div style={{whiteSpace:'nowrap'}} className=\"col-sm-12  tiny\"><small className=\"\">In Orders {frozen} </small></div> \n    </div>\n    </div>\n    )\n     \n }\n\nexport default Wallet;","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport TickerSelect from \"./assets/ticker.select.component\";\nimport Spot from \"./assets/spot.component\";\nimport Depth from \"./assets/depth.component\";\nimport Technicals from \"./assets/technicals.component\";\nimport Wallet from \"./assets/wallet.component\";\nimport AssetList from \"./asset-list.component\";\nimport { Tabs, Tab } from \"react-bootstrap\";\nimport {SET_ALERT} from './types';\nimport { AuthContext } from '../App';\nimport { useHistory } from \"react-router\";\n\n const  ExchangeTradeForm = (props) => {\n// onTabSelect={onSelect} prev={prev} setTab={setKey} tab={key} exchange={props.exchange}\n    \n\n    const [orderType, setOrderType] = useState('limit');\n    \n    const onSelect = k => {\n        console.log('onSelect',k)\n        setOrderType(k)\n    }\n        const {  dispatch } = React.useContext(AuthContext);\n        //const { state, dispatch, data, setData } = React.useContext(AuthContext);\n        var ex = JSON.parse(localStorage.getItem('exchanges'))\n        let history = useHistory();\n        //console.log('TAB:',props.tab)\n        //var prevTab = props.tab;\n        var thisExchange = ex.filter(exchange => \n            props.exchange.name === exchange.name\n        )\n        if(thisExchange){ \n        } else {\n            thisExchange = [{ \n                name: props.exchange.name,\n                apiKey: '',\n                secret: ''}];        \n        }\n        if(thisExchange[0] === undefined){\n            history.push('/exchanges')\n            dispatch({\n                type: SET_ALERT,\n                payload: {  message:'Configure your Exchanges by adding API Keys', alertType: 'success', timeout:3000}\n            })\n        }\n        var initalState = {\n            name: props.exchange.name,\n            apiKey: thisExchange.length > 0 ? thisExchange[0].apiKey: '',\n            url: props.exchange.url,\n            tickers: [],\n            asset: [],\n            amount: '',\n            qty: '',\n            lastPrice:'',\n            selectedTicker: '',\n            baseAsset:'',\n            price:'',\n            tickerEndpoint: props.exchange.tickerEndpoint,\n            secret: thisExchange.length > 0 ? thisExchange[0].secret: ''\n        }\n\n\n        \nconst [data, setData]= useState(initalState);          \nconst [wallet, setWallet]= useState({wallet:[]});\nuseEffect(() => {\n\n    \n    \n    if(data.price.length > 0 || data.qty.length > 0 || data.amount.length > 0 ){\n        setData(\n            {...data,\n            price:'',\n            amount: '',\n            qty: ''}\n        )\n    }\n\n}, []); \n\nuseEffect(() => {\n    if(data.price.length > 0 || data.qty.length > 0 || data.amount.length > 0 ){\n        setData(\n            {...data,\n            price:'',\n            amount: '',\n            qty: ''}\n        )\n    }\n\n}, [orderType]);\n\nuseEffect(() => {\n\n\n      axios.get(props.exchange.url+'/tickers').then(result => {\n            \n        result.data.tickers.forEach((ticker,i) => {\n\n            result.data.tickers[i] = { value: ticker, label: ticker }\n        })\n\n        console.log('TICKERS:',props.exchange.url,result.data.tickers);\n            \n            setData({\n            ...data,\n            tickers:result.data.tickers\n            })\n\n        });\n        //if(props.exchange.name == 'Bitmart'){\n            \n            console.log('URL',props.exchange.url)\n            axios.get(props.exchange.url+'/accounts', {\n                headers: {\n                'xbmkey': data.apiKey,\n                'xbmsecret': data.secret\n                }\n            }).then(result => {\n            \n            console.log('WALLET',result.data.wallet)\n    \n                setWallet({\n                wallet:result.data.wallet\n                })\n                //console.log('ACCOUNTDATA:',data);\n    \n            })\n        //}\n      return () => {\n          //setData({})\n          console.log('LEAVING')\n      };\n}, []);  \n\n\n const onFocusTicker = e => {\n\n     setData({\n            ...data,\n            prevSelectedTicker: data.selectedTicker ? data.selectedTicker : \"\",\n            \n          });\n }\n const clearTicker = e => {\n    setData({\n        ...data,\n        selectedTicker:  \"\",\n        baseAsset:  ''\n\n      });\n }\nconst onChangeTicker = e => {\n    //    \nconsole.log('OnChangeTicker', e)\n    \n    let asset, sellAsset;\n    //   setData({\n        //       name: e.target.value\n        //   });\n        //console.log('MYWALLET',mywallet)\n        if(props.tab === 'buy'){\n            asset = e.value.replace(/.*_/g,\"\");\n            sellAsset = e.value.replace(/_.*/g,\"\");\n        } else {\n            asset = e.value.replace(/_.*/g,\"\");\n            sellAsset = e.value.replace(/.*_/g,\"\");\n            \n        }\n        setData({\n            ...data,\n            selectedTicker: e.value ? e.value : \"\",\n            baseAsset: e.value !== undefined ? asset : '',\n            sellAsset: sellAsset\n          });\n          //data.wallet.filter( account => account.id === e.value.replace(/.*_/g,\"\") )\n       // console.log('FILTERED WALLET',data.wallet, e.value.replace(/.*_/g,\"\"));\n  \n}\n\n\n//const { Provider, Consumer } = React.createContext();\n\nconst onChangeName = e => {\n        setData({\n            ...data,\n            name: e.target.value\n        });\n        \n}\n// const tabEvent = e => {\n//     console.log('TABEVENT',e)\n// }\nconst clearAmount = e => {\n    setData(\n        {...data,\n        price:'',\n        amount: '',\n        qty: ''}\n    )\n}\nconst onChangeAmount = e => {\n    let qty, amount;\n    if(data.price.length < 1 && orderType === 'limit'){\n        dispatch({\n            type: SET_ALERT,\n            payload: {  message:'Please Choose a price before setting qty', alertType: 'success', timeout:3000}\n        })\n        return;\n    }\n\n    if(props.tab === 'buy' && orderType === 'limit'){\n         qty = Math.round(parseFloat(e.target.value) / parseFloat(data.price));\n         amount = parseFloat(e.target.value).toFixed(2);\n    } else if(props.tab === 'sell' && orderType === 'limit') {\n        qty = e.target.value ;\n        amount = Math.round(parseFloat(e.target.value) * parseFloat(data.price));\n        amount = amount.toFixed(2)\n    } else if(props.tab === 'buy' && orderType === 'market') {\n        amount = parseFloat(e.target.value).toFixed(2);\n        qty = '';\n    } else if(props.tab === 'sell' && orderType === 'market'){\n        amount = parseFloat(e.target.value).toFixed(2);\n        qty='';\n    }\n\n    setData({\n        ...data,\n        amount: amount,\n        qty: qty\n    });\n    \n}\nconst onChangePrice = e => {\n    \n    setData({\n        ...data,\n        price: e.target.value\n    });  \n}\n\nconst onChangeQty = e => {\n    setData({\n        ...data,\n        qty: e.target.value\n    });  \n}\n\n\n\nfunction onSubmit(e) {\n\n    e.preventDefault();\n    \n    console.log(`Form submitted:`, data.name);\n\n    \n\n\n}\n\n\n       //console.log('RETURN FORM', data, props)\nreturn (       \n    \n            <div className=\"pl-0\" style={{marginTop: '10px', marginLeft:'2px', marginRight:'2px'}}>\n                \n                <form className=\"form-row pb-0 mb-0\" style={{width:'100%'}} onSubmit={onSubmit}>\n                    <div className=\"form-group col-sm-6 mb-0\"> \n                    <TickerSelect options={data.tickers} onFocus={onFocusTicker} onChange={onChangeTicker} />\n                        <input  type=\"hidden\"\n                                className=\"form-control\"\n                                value={data.name}\n                                onChange={onChangeName}\n                                />\n                    <h5 className=\"mt-9x\">{props.exchange.name} </h5>\n                    {/* <Spot onRef={ref => (spot = ref)} baseAsset={data.baseAsset}  exchange={props.exchange} clearTicker={clearTicker} selectedTicker={data.selectedTicker}  /> */}\n                    <Technicals />\n                    </div>\n                    <div className=\"form-group col-sm-6 mb-0\"> \n                    \n                    <Spot onChangePrice={onChangePrice} clearTicker={clearTicker}  baseAsset={data.baseAsset}  exchange={props.exchange} selectedTicker={data.selectedTicker} prevSelectedTicker={data.prevSelectedTicker}  />\n                    \n                    </div>\n\n                    <Tabs onSelect={onSelect} defaultActiveKey=\"limit\" id=\"controlled-tab-example\" className=\"col-sm-12\">\n                <Tab eventKey=\"limit\" title=\"Limit\" className=\"col-sm-12\">\n                \n                   <div className=\"row pt-2\"> \n                   <div className=\"col-sm-6\"> \n                    <div className=\"form-group\"> \n                        <label>Price</label>\n                        <input  type=\"text\"\n                                placeholder=\"Price\"\n                                className=\"form-control\"\n                                value={data.price}\n                                onChange={onChangePrice}\n                                />\n                    </div>\n                    <div className=\"form-group\"> \n                        <label>Qty</label>\n                        <input  type=\"text\"\n                                placeholder=\"Quantity\"\n                                className=\"form-control\"\n                                value={data.qty}\n                                onChange={onChangeQty}\n                                />\n                    </div>\n                    <Wallet tab={props.tab} clearAmount={clearAmount} wallet={wallet.wallet} ticker={data.selectedTicker} setAmount={onChangeAmount}/>\n                    <div className=\"form-group mb-0 pb-0\"> \n                        <label>Total:</label> <div style={{display:'inline-block'}} onChange={onChangeAmount}>{data.amount}</div> \n                    </div>\n                </div>\n                <div className=\"col-sm-6 form-group\">\n                <label>Depth</label>\n                    <Depth onChangePrice={onChangePrice} clearTicker={clearTicker}  baseAsset={data.baseAsset}  exchange={props.exchange} selectedTicker={data.selectedTicker} prevSelectedTicker={data.prevSelectedTicker}  />\n                </div>\n                    \n                </div>\n                </Tab>\n                <Tab eventKey=\"market\" title=\"Market\" className=\"col-sm-12\">\n                <div className=\"row pt-2\">\n                <div className=\"col-sm-6\"> \n                <div className=\"form-group \"> \n                        <label>Price</label>\n                        <input  type=\"text\"\n                                disabled=\"disabled\"\n                                placeholder=\"Optimal Market Price\"\n                                className=\"form-control\"\n                                value=\"Optimal Market Price\"\n                                \n                                />\n                </div>\n                <div className=\"form-group\"> \n                        <label>Total</label>\n                        <input  type=\"text\"\n                                placeholder={ props.tab === 'buy' ? 'Total '+data.baseAsset : 'Total '+data.sellAsset}\n                                className=\"form-control\"\n                                value={data.amount}\n                                onChange={onChangeQty}\n                                />\n                </div>\n                <div><Wallet clearAmount={clearAmount} tab={props.tab} wallet={wallet.wallet} ticker={data.selectedTicker}  setAmount={onChangeAmount}/></div>\n                    <div className=\"form-group mb-0\"> \n                        <label>Total:</label> <div style={{display:'inline-block'}} onChange={onChangeAmount}>{data.amount}</div> \n                    </div>\n                </div>\n                <div className=\"col-sm-6 form-group\">\n                    <label>Depth</label>\n                    <Depth onChangePrice={onChangePrice} clearTicker={clearTicker}  baseAsset={data.baseAsset}  exchange={props.exchange} selectedTicker={data.selectedTicker} prevSelectedTicker={data.prevSelectedTicker}  />\n                </div>\n                </div>\n                \n                </Tab>\n                </Tabs>\n                    \n                    <div className=\"form-group col-sm-12 pb-2 mb-0\">\n                        { props.tab ==='buy' ? <input type=\"submit\" value=\"Place buy order\" className=\"btn btn-success\" /> :\n                        <input type=\"submit\" value=\"Place sell order\" className=\"btn btn-danger\" />\n                    }\n                    </div>\n                    <AssetList onChangePrice={onChangePrice} data={data} clearTicker={clearTicker} setData={setData} selectedTicker={data.selectedTicker} exchange={props.exchange} prevSelectedTicker={data.prevSelectedTicker}/>\n                </form>\n            {/* <div className=\"d-flex justify-content-between flex-wrap  align-items-center pb-2 mb-3 border-bottom\"> */}\n                {/* <Trade exchange={props.exchange} selectedTicker={data.selectedTicker} prevSelectedTicker={data.prevSelectedTicker}  /> */}\n               \n            {/* </div> */}\n            </div>\n        \n        )\n    \n}\nexport default ExchangeTradeForm;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n//import {SET_ALERT_OVERWRITE} from './types';\n\nimport ExchangeTradeForm from \"./exchange.tradeForm.component\"\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\n export const Exchange  = props => {\nconst [key, setKey] = useState('buy');\nconst [prev, setPrev] = useState('sell');\nconst onSelect = k => {\n    console.log('onSelect',k)\n    if(k === 'buy'){\n        setPrev('sell')\n    } else {\n        setPrev('buy')\n    }\n    setKey(k)\n}\n\nuseEffect(() => {\n\n\n}, []);\n    \n\nreturn (\n    \n    <div className=\"card\" style={{float:'left', width: '26rem', marginLeft:'10px',  marginRight:'5px'}}>\n        \n        <div style={{paddingLeft:'10px', paddingRight:'0px', paddingTop:'10px' ,paddingBottom:'5px'}} className=\"card-body\">\n            <Tabs defaultActiveKey=\"buy\" \n                id={'buy-sell-tab-'+props.exchange.name}  onSelect={onSelect} className=\"nav nav-pills nav-justified nav-fill\">\n                <Tab className=\"tab\" data-toggle=\"tab\" eventKey=\"buy\" title=\"Buy\" tabClassName=\"\">\n                {/* <ExchangeTradeForm exchange={props.exchange} /> */}\n                </Tab>\n                <Tab className=\"tab\" data-toggle=\"tab\" eventKey=\"sell\" title=\"Sell\" tabClassName=\"\">\n                {/* <ExchangeTradeForm exchange={props.exchange} />  */}\n                </Tab>\n            </Tabs>\n            <ExchangeTradeForm onTabSelect={onSelect} prev={prev} setTab={setKey} tab={key} exchange={props.exchange} /> \n            {/* <AssetList selectedTicker={props.selectedTicker} exchange={props.exchange}/> */}\n            {/* <div class=\"btn-group\" style={{width:'100%'}} role=\"group\" aria-label=\"Buy or Sell\">\n                <button type=\"button\" class=\"btn btn-primary btn-block btn-sm mt-0 active\">Buy</button>\n                <button type=\"button\" class=\"btn btn-secondary btn-block btn-sm mt-0\">Sell</button>\n            </div> */}\n            {/* <div>\n                <div className=\"col-sm-12\" eventKey=\"buy\" title=\"Buy\" tabClassName=\"\">\n                <ExchangeTradeFormBuy exchange={props.exchange} />\n                </div>\n                <div className=\"col-sm-12\" eventKey=\"sell\" title=\"Sell\" tabClassName=\"\">\n                <ExchangeTradeFormBuy exchange={props.exchange} /> \n                </div>\n            </div> */}\n            \n        </div>\n    </div>\n    )\n\n    \n}\n\n\nconst ExchangeTradeList = props => {\n\n    //const { data, setData } = React.useContext(AuthContext);\n\n    const initialState = {\n        exchange: [],\n        showModal: 'none'\n      };\n\n    const [data, setData] = React.useState(initialState);\n    \n\n// if(props.exchange === undefined){\n//     return null;\n// }\nconsole.log('ExchangeTradeList', data)\n    //useEffect(() => {\n        useEffect(() => {\n           \n         axios.get('/api/exchange/')\n             .then(response => {\n                 //this.setState({ asset: response.data });\n                 console.log('GET EX',response.data, data)\n                setData({\n                    ...data,\n                    exchange: response.data,\n                    showModal: 'none'\n                  });\n             })\n             .catch(function (error){\n                 console.log(error);\n             })\n\n            return () => {\n                 setData({})\n             }\n\n         }, []);\n    //console.log('isData', data)\n    const [ setIsOpen] = React.useState(false);\n    const [ setTitle ] = React.useState(\"Transitioning ....\");\n    const [ setUrl ] = React.useState(\"\");\n    //const [time, setTime] = React.useState(\"\");\n    \n    const showModal = props => {\n        //document.getElementById('exchangeModal').setAttribute('show', true);\n        setIsOpen(true);\n        setTitle(props.exchange.name);\n       // setExchange(props.exchange)\n        //setUrl(props.exchange.url)\n        //setHideModal(hideModal);\n \n    };\n    const hideModal = () => {\n        //document.getElementById('exchangeModal').setAttribute('show', true);\n        setIsOpen(false);\n        setTitle('')\n    };\n    \n    async function asyncAxios(currentExchange) {\n        var config = {\n            method: 'get',\n            withCredentials: true,\n            url: currentExchange.url+'/time', \n            data : {}\n          };\n        try {\n        const response = await axios(config);\n        return response.data;\n        }\n        catch (error) {\n            console.log(error);\n        }\n        \n    }\n\n\n    const listExchange = () => {\n        console.log('ListEx', data)\n        return data.exchange.map(function(currentExchange, i){\n           \n            //setData(data)\n             console.log('DATA',currentExchange);\n            \n            // var config = {\n            //     method: 'get',\n            //     withCredentials: true,\n            //     url: currentExchange.url+'/time', \n            //     data : {}\n            //   };\n            //   let {data} =  axios(config);\n            // asyncAxios(currentExchange).then(function(response) {\n            //     console.log('Time',response.serverTime);\n            //     //dispatch('SET_TIME',response.serverTime)\n            //     //currentExchange.serverTime = response.serverTime;\n                \n            //   });\n              //console.log('FFFF',props)\n            \n              return <Exchange title={currentExchange.name} hideModal={hideModal} setUrl={setUrl} setTitle={setTitle} showModal={showModal} setIsOpen={setIsOpen} exchange={currentExchange} key={i} />;\n            \n            \n        })\n    }\n\n  if( data === undefined){\n        return null;\n  }\n  return (\n    <div className=\"pull-left\" style={{marginTop: '36px', width:'100%'}}>\n       \n        {listExchange()}\n\n        {/* <ModalExchange id=\"exchangeModal\" setExchange={setExchange} exchange={exchange} title={title} url={url} setUrl={setUrl} setTitle={setTitle} isOpen={isOpen} show={true} hideModal={hideModal} showModal={showModal} tabindex=\"-1\"></ModalExchange>    */}\n    </div>\n    \n  );\n\n}\nexport default ExchangeTradeList;","import React, { useEffect } from 'react';\n\n//import { REMOVE_ALERT, SET_ALERT } from \"../components/types\";\n//import { AuthContext } from \"../App\";\nimport ExchangeTradeList from \"./exchange.trade.component\";\n//import Trade from \"./assets/trade.component\";\n//import TradeContext from './exchange.tradeForm.component'\n//import TradeFormContext from './tradeFormContext'\n//import axios from 'axios';\n\n const Dashboard = (props) => { \n  //const { data , setData, dispatch} = React.useContext(AuthContext);\n  //let exchange;\n  //const {state} = useContext(TradeFormContext);\n  //console.log('CONTEXT',props)\n \n  useEffect(() => {\n   \n    \n  },[]);\n      \n \n    //const { tradeFormContext } = React.useContext(TradeFormContext);  \n    //console.log(tradeFormContext);\n    //const { state, selectedTicker } = tradeFormContext;\n\n    //const data = state;\n    //const msg = {  message:'Fuck Yeah', alertType: 'success', timeout:10000 } \n    //const { exchange , setExchange} = React.useState({exchange:[]});\n//     useEffect(() => {\n      \n//       axios.get('/api/exchange/')\n//           .then(response => {\n//               //this.setState({ asset: response.data });\n              \n//                 setData({\n//                   ...data,\n//                   exchange: response.data\n//                 });\n//                 //setExchange(response.data)\n//           })\n//           .catch(function (error){\n//               console.log(error);\n//           })\n//       }, []);\n// console.log('AXIOS', data)\n        return ( <ExchangeTradeList />\n          \n  \n        \n            \n        )\n\n}\n\nexport default Dashboard","import React, { Component } from 'react';\n\nexport default class ExchangeForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeApiKey = this.onChangeApiKey.bind(this);\n        this.onChangeApiName = this.onChangeApiName.bind(this);\n        this.onChangeSecret = this.onChangeSecret.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.ex = JSON.parse(localStorage.getItem('exchanges'))\n        //console.log('local',this.ex)\n        this.thisExchange = this.ex.filter(exchange => \n            props.exchange.name === exchange.name\n        )\n        if(this.thisExchange){ \n        } else {\n            this.thisExchange = [{ \n                name: props.exchange.name,\n                apiKey: '',\n                apiName: '',\n                secret: '',}];        \n        }\n\n        this.state = {\n            name: props.exchange.name,\n            apiKey: this.thisExchange.length > 0 ? this.thisExchange[0].apiKey: '',\n            apiName: this.thisExchange.length > 0 ? this.thisExchange[0].apiName: '',\n            url: props.exchange.url,\n            secret: this.thisExchange.length > 0 ? this.thisExchange[0].secret: '',\n        }\n        console.log('exchange',props.exchange);\n        \n        \n        \n    }\n\n    onChangeName(e) {\n        this.setState({\n            name: e.target.value\n        });\n    }\n\n    onChangeApiKey(e) {\n        this.setState({\n            apiKey: e.target.value\n        });\n    }\n    onChangeApiName(e) {\n        this.setState({\n            apiName: e.target.value\n        });\n    }\n\n    onChangeUrl(e) {\n        this.setState({\n            url: e.target.value\n        });\n    }\n\n    onChangeSecret(e) {\n        this.setState({\n            secret: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        \n        console.log(`Form submitted:`, this.state.name);;\n\n        const data = this.ex.filter(exchange => \n            this.state.name !== exchange.name\n        )\n\n        data.push({ name: this.state.name, secret: this.state.secret, apiKey:this.state.apiKey, apiName:this.state.apiName})\n        localStorage.setItem('exchanges', JSON.stringify(data));\n        this.props.hideModal();\n        //console.log(this.props)\n    }\n    \n\n    render() {\n        \n        return (\n            <div className=\"container\" style={{marginTop: 10}}>\n                \n                <form style={{width:'100%'}} onSubmit={this.onSubmit}>\n                    <div className=\"form-group\"> \n                        <label>Name: </label>\n                        <input  type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.name}\n                                onChange={this.onChangeName}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Url: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.url}\n                                onChange={this.onChangeUrl}\n                                \n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>API Name: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.apiName}\n                                onChange={this.onChangeApiName}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>API Key: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.apiKey}\n                                onChange={this.onChangeApiKey}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Secret: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.secret}\n                                onChange={this.onChangeSecret}\n                                />\n                    </div>\n                    \n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Save and Close\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport ExchangeForm from \"./exchange.component\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\n\n\n\nconst ModalExchange = props => {\n\n    \n    return(\n        <Modal  show={props.isOpen}  tabIndex=\"-1\">\n        <div style={{width:'400px'}} className=\"modal-dialog\">\n            <div className=\"modal-content\">\n            <div className=\"modal-header\">\n                <h5 className=\"modal-title\">{props.title}</h5>\n                <button type=\"button\" className=\"close\" onClick={props.hideModal} aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div className=\"modal-body\">\n                <ExchangeForm hideModal={props.hideModal} exchange={props.exchange} />\n            </div>\n            <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={props.hideModal}>Close</button>\n            </div>\n            </div>\n        </div>\n        </Modal>\n        )\n\n}\nexport default ModalExchange;","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n//import {SET_ALERT_OVERWRITE} from './types';\nimport ModalExchange from \"./modal-exchange.component\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n//import { AuthContext } from \"../App\";\n//App.use(cors());\n const Exchange  = props => (\n    \n    <div className=\"card\" style={{float:'left', width: '14rem', marginRight:'10px', height:'204px'}}>\n \n        <div className=\"card-body\">\n            <h5 className=\"card-title\">{props.exchange.name} </h5>\n            <p className=\"card-text\"></p>\n            \n            <Link className=\"btn btn-primary\" onClick={() => props.showModal(props)} to={\"#\"}>Configure</Link>\n        </div>\n    </div>\n    \n    \n)\n\n\nconst ExchangeList = () => {\n\n //   const { dispatch } = React.useContext(AuthContext);\n\n    const initialState = {\n        exchange: []\n      };\n\n    const [data, setData] = React.useState(initialState);\n    \n\n\n\n    //useEffect(() => {\n        useEffect(() => {\n           \n        axios.get('/api/exchange/')\n            .then(response => {\n                //this.setState({ asset: response.data });\n                setData({\n                    ...data,\n                    exchange: response.data,\n                    showModal: 'none'\n                  });\n            })\n            .catch(function (error){\n                console.log(error);\n            })\n        }, []);\n    \n    const [isOpen, setIsOpen] = React.useState(false);\n    //const [hideModal, setHideModal] = React.useState({});\n    const [exchange, setExchange] = React.useState({});\n    const [title, setTitle] = React.useState(\"Transitioning...\");\n    const [url, setUrl] = React.useState(\"\");\n    //const [time, setTime] = React.useState(\"\");\n   \n    const showModal = props => {\n        //document.getElementById('exchangeModal').setAttribute('show', true);\n        setIsOpen(true);\n        setTitle(props.exchange.name);\n        setExchange(props.exchange)\n        //setUrl(props.exchange.url)\n        //setHideModal(hideModal);\n \n    };\n    const hideModal = () => {\n        //document.getElementById('exchangeModal').setAttribute('show', true);\n        setIsOpen(false);\n        setTitle('')\n    };\n    \n    async function asyncAxios(currentExchange) {\n        var config = {\n            method: 'get',\n            withCredentials: true,\n            url: currentExchange.url+'/time', \n            data : {}\n          };\n        try {\n        const response = await axios(config);\n        return response.data;\n        }\n        catch (error) {\n            console.log(error);\n        }\n        \n    }\n\n\n    const listExchange = () => {\n        \n        return data.exchange.map(function(currentExchange, i){\n           \n    \n            \n            // var config = {\n            //     method: 'get',\n            //     withCredentials: true,\n            //     url: currentExchange.url+'/time', \n            //     data : {}\n            //   };\n            //   let {data} =  axios(config);\n            //asyncAxios(currentExchange).then(function(response) {\n                //console.log('Time',response.serverTime);\n                //dispatch('SET_TIME',response.serverTime)\n                //currentExchange.serverTime = response.serverTime;\n                \n              //});\n              console.log('FFFF',data)\n            \n              return <Exchange title={currentExchange.name} hideModal={hideModal} setUrl={setUrl} setTitle={setTitle} showModal={showModal} setIsOpen={setIsOpen} exchange={currentExchange} key={i} />;\n            \n            \n        })\n    }\n\n\n  return (\n    <div style={{ marginLeft: '12px' }} className=\"float-left pt-2\">\n        <h5>Exchanges</h5>\n        {listExchange()}\n\n        <ModalExchange id=\"exchangeModal\" setExchange={setExchange} exchange={exchange} title={title} url={url} setUrl={setUrl} setTitle={setTitle} isOpen={isOpen} show={true} hideModal={hideModal} showModal={showModal} tabindex=\"-1\"></ModalExchange>   \n    </div>\n    \n  );\n\n}\nexport default ExchangeList;","import React from 'react';\nimport {  Link } from \"react-router-dom\";\nimport { slide as Menu } from 'react-burger-menu';\nimport { AuthContext } from \"../App\";\n\nconst TopNav = props => {\n\n    const {  data, setData } = React.useContext(AuthContext);\n    const handleStateChange = data => {\n        //console.log('Oh Fuck', data)\n        setData({isOpen: data.isOpen})  ;\n    }\n    const closeMenu = () => {\n        setData({isOpen: false})  ;\n      }\n\n  return (\n    <Menu pageWrapId={props.pageWrapId} outerContainerId={props.outerContainerId} styles={props.styles} isOpen={data.isOpen} onStateChange={handleStateChange} className=\"col-md-2 d-none d-md-block eggplant\">\n      {props.isAuthenticated && (\n                  <Link to=\"/dashboard\" onClick={closeMenu} className=\"nav-link menu-item\">Dashboard</Link>\n                )}\n                {props.isAuthenticated && (\n                  <Link to=\"/exchanges\" onClick={closeMenu} className=\"nav-link menu-item\">Exchanges</Link>\n                )}\n                {props.isAuthenticated && ( \n                  <Link to=\"/asset\" onClick={closeMenu} className=\"nav-link menu-item\">Assets</Link>\n                )}\n                {props.isAuthenticated && ( \n                  <Link to=\"/create\" onClick={closeMenu} className=\"nav-link menu-item\">Create Asset</Link>\n                )}\n                {props.isAuthenticated && ( \n                  <Link to=\"/edit\" onClick={closeMenu} className=\"nav-link menu-item\">Edit Asset</Link>\n                )}\n    </Menu>\n  );\n}\n\nexport default TopNav;","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { AuthContext } from \"../App\";\nimport { useLocation } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//import { Container, Row, Col, Nav, Navbar} from \"react-bootstrap\";\n\n//import Dashboard from \"./dashboard.component\";\nimport Login from \"./login.component\";\nimport AssetList from \"./asset-list.component\";\nimport EditAsset from \"./edit-asset.component\";\nimport CreateAsset from \"./create-asset.component\";\nimport Register from \"./register.component\";\nimport Dashboard from \"./dashboard.component\";\nimport Exchanges from \"./exchanges.component\";\nimport TopMenu from \"./menu.component\";\n\nexport const Sidebar = props => {\n\n    const { state, data } = React.useContext(AuthContext);\n    let location = useLocation();\n    //console.log(location.pathname);\n    //const { state, dispatch } = React.useContext(AuthContext);\n//     const history = useHistory();\n//     const onLogout = e => {      \n//       console.log('Logout');\n//       localStorage.setItem('token', null);\n      \n//       axios.defaults.headers.common['Authorization'] = null;\n//       dispatch({\n//           type: LOGOUT\n//       })\n//       dispatch({\n//           type: SET_ALERT_OVERWRITE,\n//           payload: {  message:'Logout Successful', alertType: 'success', timeout:10000}\n//       })\n//       history.push(\"/login\");\n//    }\n\n\n\nvar styles = {\n  width:'196px',\n  bmBurgerButton: {\n    position: 'fixed',\n    width: '36px',\n    height: '30px',\n    left: '14px',\n    top: '72px'\n  },\n  bmBurgerBars: {\n    background: '#373a47'\n  },\n  bmBurgerBarsHover: {\n    background: '#a90000'\n  },\n  bmCrossButton: {\n    height: '24px',\n    width: '24px'\n  },\n  bmCross: {\n    background: '#bdc3c7'\n  },\n  bmMenuWrap: {\n    position: 'fixed',\n    height: '100%',\n    minWidth:'230px'\n  },\n  bmMenu: {\n    background: '#373a47',\n    padding: '2.5em 1.5em 0',\n    fontSize: '1.15em'\n  },\n  bmMorphShape: {\n    fill: '#373a47'\n  },\n  bmItemList: {\n    color: '#b8b7ad',\n    padding: '0.8em'\n  },\n  bmItem: {\n    display: 'inline-block'\n  },\n  bmOverlay: {\n    background: 'rgba(0, 0, 0, 0.3)'\n  }\n}\n\nvar isOpen = open => {\n  if(open === undefined){\n    return false;\n  }\n  return open;\n}\nvar isMenuOpen = function(state) {\n  console.log('SIDEBAR MENU STATE',state)\n  return state;\n};\n\n    return (\n        <div id=\"outer-container\" className=\"container-fluid\" style={{width:'100%'}}>\n        <div  className=\"row\"> \n        \n          { state.isAuthenticated  && location.pathname !== '/register' && (\n          <TopMenu pageWrapId={ \"main\" } outerContainerId={ \"outer-container\" } styles={styles}  onStateChange={isMenuOpen}  isOpen={data.isOpen }  isAuthenticated={state.isAuthenticated} />)}\n          <main id=\"main\"  role=\"main\" style={{marginLeft:'unset'}}  className=\"col-md-12 ml-sm-auto col-lg-12 mt-3 px-0\">\n          <Route path=\"/dashboard\" exact render={ () => <Dashboard isOpen={isOpen} />} />\n          <Route path=\"/asset\" exact render={ props => <AssetList showHeading={true} />} />\n          <Route path=\"/exchanges\" exact component={Exchanges} />\n          <Route path=\"/edit\" component={EditAsset} />\n          <Route path=\"/create\" component={CreateAsset} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register}  />\n          </main>\n          </div>\n    </div>\n    )\n};\nexport default Sidebar","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//import \"bootswatch/dist/lux/bootstrap.min.css\"\nimport './App.css'\nimport Alert from \"./components/alert.component\";\nimport Nav from \"./components/nav.component\";\nimport Sidebar from \"./components/sidebar.component\";\nimport {v4 as uuid } from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT, LOGIN, LOGOUT, SET_ALERT_OVERWRITE} from \"./components/types\";\n\n\n//export const AuthContext = React.createContext();\nwindow.onbeforeunload = (event) => {\n  const e = event || window.event;\n  // Cancel the event\n  e.preventDefault();\n  if (e) {\n    e.returnValue = ''; // Legacy method for cross browser support\n  }\n  return ''; // Legacy method for cross browser support\n};\n\nexport const AuthContext = React.createContext();\nconst initialState = {\n  isAuthenticated: false,\n  isOpen: false,\n  username: null,\n  token: null,\n  message: null,\n  alerts: [],\n  onTabSelect: {},\n  prev: '',\n  setTab:{},\n  tab: '',\n  selectedTicker:'',\n  exchange: []\n};\n\nexport const  initalData = {\n  onTabSelect: {},\n  prev: '',\n  theme:'dark',\n  isOpen: false,\n  setTab:{},\n  tab: '',\n  selectedTicker:'',\n  exchange: [],\n  asset: [],\n  name: '',\n  apiKey:  '',\n  secret:  '',\n  url: '',\n  asks:[],\n  bids:[],\n  prevSelectedTicker: '',\n  tickerEndpoint: '',\n  price:'',\n  qty:'',\n  amount:'',\n  wallet:[]\n} ;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case LOGIN:\n      localStorage.setItem(\"username\", action.payload.username);\n      localStorage.setItem(\"token\", action.payload.token);\n      const ls = localStorage.getItem('exchanges') ? localStorage.getItem('exchanges') : false;\n      //console.log('exchanges', ls)\n      if(ls === false){\n          localStorage.setItem('exchanges',JSON.stringify([]));\n      }\n      return {\n        ...state,\n        isAuthenticated: true,\n        isOpen: false,\n        username: action.payload.username,\n        token: action.payload.token\n      };\n      case 'MENU_STATE':\n      console.log('RCVD MENU STATE',action.payload, state)\n       \n      return {\n        ...state,\n        isOpen:false\n      };\n      case SET_ALERT:\n      //console.log('Message',action.payload)\n      state.alerts.push({message:action.payload.message,\n        alertType: action.payload.alertType,\n        timeout: action.payload.timeout,\n        id: uuid()});\n      return {\n        ...state,\n        message: action.payload.message,\n        alerts:state.alerts\n      };\n      case SET_ALERT_OVERWRITE:\n      //console.log('Message',action.payload)\n      state.alerts=[];\n      state.alerts.push({message:action.payload.message,\n        alertType: action.payload.alertType,\n        timeout: action.payload.timeout,\n        id: uuid()});\n      return {\n        ...state,\n        message: action.payload.message,\n        alerts:state.alerts\n      };\n      case REMOVE_ALERT:\n        //console.log('Remove Alert',action.payload, state)\n        \n        return {\n          ...state,\n          message: '',\n          alerts:state.alerts.filter(alert => alert.id !== action.payload)\n        };\n    case LOGOUT:\n      //localStorage.clear();\n      localStorage.setItem('token', '')\n      return {\n        ...state,\n        isAuthenticated: false,\n        username: null\n      };\n    default:\n      return state;\n  }\n};\n\n\n\n//console.log('Store New State',store.getState())\n\n\n  \n\n  function App() {\n\n \n\n    //let nav;\n    //window.$prevPrice = '0.00'\n    //console.log('Store State',this.props.store.getState())\n\n\n  \n    const [state, dispatch] = React.useReducer(reducer, initialState);\n\n    const [data, setData] = React.useState(initalData);\n    \n\n \n\n\n    //console.log('App store 1',this.props.authenticated);\n    //var isLoggedIn = this.props.store.getState();\n\n    return (\n      <AuthContext.Provider\n      value={{\n        state,\n        dispatch,\n        data,\n        setData\n      }}\n    >\n      \n      <Router>\n        <div className=\"App\">     \n          <Alert />\n          <Nav /> \n          <Sidebar />\n          <br/>\n          \n        </div>\n      </Router>\n      \n      </AuthContext.Provider>\n    );\n  \n}\n\n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","export default __webpack_public_path__ + \"static/media/DINRegular.93f8fccd.ttf\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\nimport './fonts/DIN/DINRegular/DINRegular.ttf';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\nserviceWorker.unregister();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// {\n//   \"e\": \"24hrTicker\",  // Event type\n//   \"E\": 123456789,     // Event time\n//   \"s\": \"BNBBTC\",      // Symbol\n//   \"p\": \"0.0015\",      // Price change\n//   \"P\": \"250.00\",      // Price change percent\n//   \"w\": \"0.0018\",      // Weighted average price\n//   \"x\": \"0.0009\",      // First trade(F)-1 price (first trade before the 24hr rolling window)\n//   \"c\": \"0.0025\",      // Last price\n//   \"Q\": \"10\",          // Last quantity\n//   \"b\": \"0.0024\",      // Best bid price\n//   \"B\": \"10\",          // Best bid quantity\n//   \"a\": \"0.0026\",      // Best ask price\n//   \"A\": \"100\",         // Best ask quantity\n//   \"o\": \"0.0010\",      // Open price\n//   \"h\": \"0.0025\",      // High price\n//   \"l\": \"0.0010\",      // Low price\n//   \"v\": \"10000\",       // Total traded base asset volume\n//   \"q\": \"18\",          // Total traded quote asset volume\n//   \"O\": 0,             // Statistics open time\n//   \"C\": 86400000,      // Statistics close time\n//   \"F\": 0,             // First trade ID\n//   \"L\": 18150,         // Last trade Id\n//   \"n\": 18151          // Total number of trades\n// }\n// TradeStread\n// \"data\":{\n//   \"current_page\":1,\n//   \"orders\":[\n//       {\n//           \"order_id\":2147601241,\n//           \"symbol\":\"BTC_USDT\",\n//           \"create_time\":1591099963000,\n//           \"side\":\"sell\",\n//           \"type\":\"limit\",\n//           \"price\":\"9000.00\",\n//           \"price_avg\":\"0.00\",\n//           \"size\":\"1.00000\",\n//           \"notional\":\"9000.00000000\",\n//           \"filled_notional\":\"0.00000000\",\n//           \"filled_size\":\"0.00000\",\n//           \"status\":\"4\"\n//       }\n\nclass Transformer {\n    constructor(exchangeName) {\n      this.name = exchangeName;\n    }\n\n    getTrades( json, ticker) {\n      \n      var records= [];\n      var timestamp, date, formatted;\n      if(json === undefined){\n        return [];\n      }\n      console.log('getTrades',json);\n\n          if(this.name === 'Bitmart'){\n            \n            \n            \n            \n            json.forEach( trade =>  {\n              timestamp = Number.parseInt(trade.create_time) + 1000; //convert to milli's\n                date = new Date(timestamp)\n                formatted = date.toLocaleString(\"en-US\", {month: \"numeric\"}) + '-' +\n                date.toLocaleString(\"en-US\", {day: \"numeric\"}) + ' ' +\n                date.toLocaleTimeString('en-US')\n              records.push(\n                {\n                  order_id: trade.order_id,\n                  detail_id: trade.detail_id,\n                  avg_price: trade.price_avg,\n                  price: trade.price,\n                  pair: trade.symbol,\n                  side: trade.side,\n                  qty: trade.size,\n                  cost: parseFloat(trade.notional).toFixed(2),\n                  base:trade.symbol.split('_')[1],\n                  order_type:  trade.exec_type === 'M' ? 'Market': 'Limit' ,\n                  transaction_date: formatted,\n                  state: 'EXISTING',\n                  status: 'WORKING'\n                }\n              )\n              })\n            \n            return records;\n          }\n          if(this.name === 'Binance'){\n \n            \n            json.forEach( trade => {\n              timestamp = Number.parseInt(trade.create_time) + 1000; //convert to milli's\n                date = new Date(timestamp)\n                formatted = date.toLocaleString(\"en-US\", {month: \"numeric\"}) + '-' +\n                date.toLocaleString(\"en-US\", {day: \"numeric\"}) + ' ' +\n                date.toLocaleTimeString('en-US')\n              records.push(\n                \n                {\n                  order_id: trade.order_id,\n                  detail_id: trade.detail_id,\n                  avg_price: trade.price_avg === undefined ? trade.price_avg: trade.price,\n                  price: trade.price,\n                  pair: ticker.replace('_','/'),\n                  side: trade.side,\n                  qty: parseFloat(trade.size).toFixed(2),\n                  cost: parseFloat(trade.notional).toFixed(2),\n                  base:ticker.split('_')[1],\n                  order_type:  trade.exec_type === 'M' ? 'Market': 'Limit' ,\n                  transaction_date: formatted,\n                  state: 'EXISTING',\n                  status: 'WORKING'\n                }\n              )\n            })\n            \n            return records;\n          }\n      }\n\n    getStream( json, symbol, prevPrices) {\n    //console.log('GETSTREAM',this.name,json, symbol);\n      var transformed = {};\n      var len = prevPrices.length;\n      var priceStyle = '';\n        if(this.name === 'Bitmart'){\n          \n          \n          \n          if(parseFloat(prevPrices[len-1]) > parseFloat(json.last_price)){\n            priceStyle = 'text-danger';\n          } else if(parseFloat(prevPrices[len-1]) < parseFloat(json.last_price)){\n            priceStyle = 'text-success';\n          } else {\n            priceStyle = '';\n          }\n\n          transformed = {\n            lastPrice: json.last_price,\n            high24hr: json.high_24h,\n            low24hr: json.low_24h,\n            open24hr: json.open_24h,\n            volume24hr: json.base_volume_24h.split('.')[0],\n            priceStyle: priceStyle,\n            prevPrice: prevPrices[len-1],\n            baseAsset: symbol.replace(/.*_/g,\"\")\n        };\n\n\n\n          return transformed;\n        }\n        if(this.name === 'Binance'){\n         \n          len = prevPrices.length\n          priceStyle = '';\n          if(parseFloat(prevPrices[len-1]) > parseFloat(json.c)){\n            priceStyle = 'text-danger';\n          } else if(parseFloat(prevPrices[len-1]) < parseFloat(json.c)){\n            priceStyle = 'text-success';\n          } else {\n            priceStyle = '';\n          }\n        //console.log('PREVIOUS', prevPrices[len - 1], json.c, Math.floor(parseFloat(prevPrices[len-1])*1000000)   > Math.floor(parseFloat(json.c)*1000000));\n        transformed = {\n            lastPrice: json.c,\n            high24hr: json.h,\n            low24hr: json.l,\n            open24hr: json.o,\n            volume24hr: json.v !== undefined ? json.v.split('.')[0]: '',\n            priceStyle: priceStyle,\n            prevPrice: prevPrices[len-1],\n            baseAsset: symbol.replace(/.*_/g,\"\")\n        };\n          return transformed ;\n        }\n    }\n    getTradeStream( trade,ticker) {\n      //console.log('GETSTREAM',this.name,json, symbol);\n      var transformed = {};\n      var timestamp, date, formatted, time;\n          if(this.name === 'Bitmart'){\n\n           \n            console.log('Pre Transform', trade)\n            // if(trade.cost !== undefined && trade.cost.length > 0){\n            //   return trade;\n            // }\n\n            // if(trade.state == 8){\n            //   transformed.order_id = trade.order_id ;\n            //   transformed.state = 'CANCELED' ;\n            //   return transformed;\n            // }\n\n            \n            var  state, status;\n            //console.log('MST1', trade.ms_t)\n           if(trade.ms_t !== undefined){\n             time = trade.ms_t;\n             //console.log('MST2', time)\n             timestamp = Number.parseInt(time)  ; //convert to milli's\n             //console.log('MST3', timestamp)\n           } else {\n             time = trade.create_time;\n             timestamp = Number.parseInt(time) + 1000; //convert to milli's\n           }\n            // date.toLocaleString(\"en-US\", {year: \"numeric\"}) + '-' + \n            date = new Date(timestamp)\n            //console.log('MST4', date)\n            formatted = date.toLocaleString(\"en-US\", {month: \"numeric\"}) + '-' +\n            date.toLocaleString(\"en-US\", {day: \"numeric\"}) + ' ' +\n            date.toLocaleTimeString('en-US')\n  //       {\n//           \"order_id\":2147601241,\n//           \"symbol\":\"BTC_USDT\",\n//           \"create_time\":1591099963000,\n//           \"side\":\"sell\",\n//           \"type\":\"limit\",\n//           \"price\":\"9000.00\",\n//           \"price_avg\":\"0.00\",\n//           \"size\":\"1.00000\",\n//           \"notional\":\"9000.00000000\",\n//           \"filled_notional\":\"0.00000000\",\n//           \"filled_size\":\"0.00000\",\n//           \"status\":\"4\"\n// 1=Order failure\n// 2=Placing order\n// 3=Order failure, Freeze failure\n// 4=Order success, Pending for fulfilment\n// 5=Partially filled\n// 6=Fully filled\n// 7=Canceling\n// 8=Canceled\n//       }\n// let statusEnum = ['Order failure', 'Placing order', \n// 'Order failure - Freeze failure','Order success-Pending for fulfilment',\n// 'Partially filled', 'Fully filled', 'Canceling', 'Canceled']\n\n\n          if(trade.state === \"1\" || trade.state === \"3\" ){\n            state = 'REJECTED';\n            status = 'REJECTED state:'+trade.state;\n          }\n          if(trade.state === \"8\" || trade.state === \"7\" ){\n              state = 'CANCELED';\n              status = 'CANCELED state:'+trade.state;\n          }\n          if(trade.state === \"2\" || trade.state === \"4\" || trade.state === \"5\" || trade.state === \"6\" ){\n            state = 'NEW';\n            status = 'NEW state:'+trade.state;\n          }\n\n            transformed = {\n              order_id: parseInt(trade.order_id),\n              avg_price: (trade.price !== undefined && trade.price.length > 0) ? trade.price.match(/.*[1-9]/gm)[0] : '', \n              price: (trade.price !== undefined && trade.price.length > 0) ? trade.price.match(/.*[1-9]/gm)[0] : '',\n              pair: trade.symbol.replace('_', '/'),\n              side: trade.side,\n              qty: parseFloat(trade.size).toFixed(2),\n              cost: (trade.notional !== undefined && trade.notional.length > 0) ? parseFloat(trade.notional).toFixed(2) : trade.filled_notional !== undefined ? parseFloat(trade.filled_notional).toFixed(2) : '' ,\n              base:trade.symbol.split('_')[1],\n              order_type:  trade.type === 'market' || trade.type === 'M'? 'Market': 'Limit' ,\n              transaction_date: formatted,\n              status: status,\n              state: state\n            }\n  \n            console.log('Post Transform', transformed)\n  \n            return transformed;\n          }\n          if(this.name === 'Binance'){\n           \n          //   {\n          //     \"e\": \"executionReport\",\n          //     \"E\": 1622812265611,\n          //     \"s\": \"DOGEUSD\",\n          //     \"c\": \"web_aa4d10978ef54eabb2326f7d32bc0570\",\n          //     \"S\": \"SELL\",\n          //     \"o\": \"LIMIT\",\n          //     \"f\": \"GTC\",\n          //     \"q\": \"26.00000000\",\n          //     \"p\": \"0.9900\",\n          //     \"P\": \"0.0000\",\n          //     \"F\": \"0.00000000\",\n          //     \"g\": -1,\n          //     \"C\": \"web_2df29c1a353c4a18b538f4f2195e3328\",\n          //     \"x\": \"CANCELED\",\n          //     \"X\": \"CANCELED\",\n          //     \"r\": \"NONE\",\n          //     \"i\": 85245149,\n          //     \"l\": \"0.00000000\",\n          //     \"z\": \"0.00000000\",\n          //     \"L\": \"0.0000\",\n          //     \"n\": \"0\",\n          //     \"N\": null,\n          //     \"T\": 1622812265610,\n          //     \"t\": -1,\n          //     \"I\": 182468972,\n          //     \"w\": false,\n          //     \"m\": false,\n          //     \"M\": false,\n          //     \"O\": 1622810861818,\n          //     \"Z\": \"0.0000\",\n          //     \"Y\": \"0.0000\",\n          //     \"Q\": \"0.0000\"\n          // }\n            console.log('Pre Transform Binance', trade)\n            if(trade.create_time !== undefined && trade.create_time.length > 0){\n              return trade;\n            }\n\n            if(trade.e !== undefined && trade.e !== 'executionReport'){\n              return trade;\n            }\n            \n           \n             time = trade.T;\n             timestamp = Number.parseInt(time) + 1000; //convert to milli's\n           \n            // date.toLocaleString(\"en-US\", {year: \"numeric\"}) + '-' + \n            date = new Date(timestamp)\n            formatted = date.toLocaleString(\"en-US\", {month: \"numeric\"}) + '-' +\n            date.toLocaleString(\"en-US\", {day: \"numeric\"}) + ' ' +\n            date.toLocaleTimeString('en-US')\n            let cost =  parseFloat(trade.p) * parseFloat(trade.q)\n\n            transformed = {\n              order_id: trade.i,\n              avg_price: trade.p ,//(trade.p !== undefined && trade.p.length > 0) ? trade.p : '', \n              price: trade.p, //(trade.p !== undefined && trade.p.length > 0) ? trade.p.match(/.*[1-9]/gm)[0] : '',\n              pair: ticker.replace('_', '/'),\n              side: trade.S,\n              qty: parseFloat(trade.q).toFixed(2),\n              cost: cost.toFixed(2)  ,\n              base:ticker.split('_')[1],\n              order_type:  trade.o === 'market' || trade.o === 'MARKET'? 'Market': 'Limit' ,\n              transaction_date: formatted,\n              status: (trade.X !== undefined) ? trade.X : '',\n              state: (trade.x !== undefined) ? trade.x : ''\n            }\n\n            console.log('POST Transform Binance', transformed)\n\n            return transformed ;\n          }\n      }\n  }\n  module.exports = Transformer ;"],"sourceRoot":""}