{"version":3,"sources":["components/assets/trade.websocket.js","components/assets/market.websocket.js","components/assets/spot.websocket.js","components/assets/depth.websocket.js","components/types.js","logo.svg","components/alert.component.js","components/nav.component.js","components/login.component.js","components/assets/market.component.js","components/asset-list.component.js","components/edit-asset.component.js","components/create-asset.component.js","components/register.component.js","components/assets/ticker.select.component.js","components/assets/spot.component.js","components/assets/depth.component.js","components/assets/technicals.component.js","components/assets/wallet.component.js","components/exchange.tradeForm.component.js","components/exchange.trade.component.js","components/dashboard.component.js","components/exchange.component.js","components/modal-exchange.component.js","components/exchanges.component.js","components/menu.component.js","components/sidebar.component.js","App.js","reportWebVitals.js","serviceWorker.js","fonts/DIN/DINRegular/DINRegular.ttf","index.js","components/assets/transformer.js"],"names":["zlib","require","RobustWebSocket","_transform","TradeWebSocketConnection","props","listenKey","credentials","trades","obj","Object","create","protoMethods","client","getClient","setData","data","undefined","selectedTicker","url","exchange","name","console","log","this","timeout","shouldReconnect","event","ws","code","attempts","automaticOpen","ignoreConnectivityEvents","binaryType","addEventListener","timestamp","Date","now","toString","signature","createHmac","secret","update","apiName","digest","msg","JSON","stringify","key","send","Blob","parse","smsg","transformer","stream","getReader","read","then","done","value","b","Buffer","from","inflateRaw","flush","info","err","buffer","json","length","asset","orderId","newTrade","getTradeStream","state","order_id","filter","trade","unshift","e","MarketWebSocketConnection","replace","toLowerCase","prevPrices","market","splice","len","side","parseFloat","p","price","size","q","push","asks","bids","WebSocketConnection","newState","getStream","lastPrice","newData","high24hr","low24hr","open24hr","volume24hr","priceStyle","prevPrice","DepthWebSocketConnection","SET_ALERT","SET_ALERT_OVERWRITE","REMOVE_ALERT","LOGIN","LOGOUT","Alert","aid","React","useContext","AuthContext","dispatch","alerts","alert","message","map","i","id","setTimeout","type","payload","className","aria-live","aria-atomic","style","position","top","right","minHeight","width","zIndex","height","src","logo","alt","onClick","data-dismiss","aria-label","aria-hidden","Nav","history","useHistory","isOpen","href","target","rel","to","isAuthenticated","localStorage","setItem","axios","defaults","headers","common","alertType","isloggedin","Login","useState","username","password","isSubmitting","errorMessage","navigator","onLine","online","isOnline","setOnline","setOffline","useEffect","window","removeEventListener","search","location","URLSearchParams","get","marginTop","onSubmit","preventDefault","newLogin","post","res","token","baseURL","isLoggedIn","autoComplete","onChange","disabled","Market","intervalId","setIntervalId","onPriceClick","innerText","onChangePrice","thisExchange","getItem","apiKey","prevSelectedTicker","tickerEndpoint","iid","setInterval","readyState","clearInterval","close","sideClass","marginBottom","paddingRight","listStyleType","paddingLeft","index","whiteSpace","split","Asset","assets","textDecoration","pair","textTransform","order_type","qty","cost","base","transaction_date","AssetList","setHistory","orderTab","setOrderTab","$","carousel","on","getOrderHistory","mytrades","response","getTrades","catch","error","xbmkey","xbmname","xbmsecret","maxHeight","overflow","overflowY","data-target","data-slide-to","role","Table","minWidth","textAlign","clearTicker","baseAsset","EditAsset","CreateAsset","onChangePair","bind","onChangeAmount","amount","setState","newAsset","redirectTo","marginLeft","Component","Register","onChangeUsername","onChangePassword","newRegistration","TickerSelect","classNamePrefix","options","onFocus","Spot","paddingTop","color","Depth","Technicals","Wallet","wallet","avail","currency","frozen","tab","ticker","account","available","setAmount","Math","round","ExchangeTradeForm","orderType","setOrderType","initalState","tickers","setWallet","result","forEach","label","clearAmount","toFixed","onChangeQty","marginRight","sellAsset","Tabs","onSelect","k","defaultActiveKey","Tab","eventKey","title","placeholder","display","Exchange","setKey","prev","setPrev","float","paddingBottom","data-toggle","tabClassName","onTabSelect","setTab","ExchangeTradeList","showModal","setIsOpen","setTitle","setUrl","hideModal","currentExchange","Dashboard","ExchangeForm","onChangeName","onChangeApiKey","onChangeApiName","onChangeSecret","ex","onChangeUrl","ModalExchange","Modal","show","tabIndex","ExchangeList","setExchange","tabindex","TopNav","closeMenu","pageWrapId","outerContainerId","styles","onStateChange","Sidebar","useLocation","open","pathname","bmBurgerButton","left","bmBurgerBars","background","bmBurgerBarsHover","bmCrossButton","bmCross","bmMenuWrap","bmMenu","padding","fontSize","bmMorphShape","fill","bmItemList","bmItem","bmOverlay","path","exact","render","showHeading","component","Exchanges","createContext","onbeforeunload","returnValue","initialState","initalData","theme","reducer","action","uuid","App","useReducer","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister","Transformer","exchangeName","date","formatted","records","Number","parseInt","create_time","toLocaleString","month","day","toLocaleTimeString","detail_id","avg_price","price_avg","symbol","notional","exec_type","status","last_price","high_24h","low_24h","open_24h","base_volume_24h","c","h","l","o","v","time","transformed","ms_t","filled_notional","T","S","X","x","module","exports"],"mappings":"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","file":"static/js/main.ad872eda.chunk.js","sourcesContent":["const zlib = require(\"zlib\");\nconst RobustWebSocket = require('robust-websocket');\nconst _transform = require('./transformer')\n//const prevPrice = '0.00';\nexport default  function TradeWebSocketConnection(props, listenKey, credentials, trades) {\n\nconst obj = Object.create(protoMethods);\n obj.client = {};\n\n //obj.msg = msg;\n return obj.getClient(props,props.setData,props.data, listenKey, credentials, trades);\n\n}\n    //console.log('Previous Ticker', localStorage.getItem('selectedTicker'), this.props.selectedTicker);\n const protoMethods = {\n\n    getClient: function(props, setData, data, listenKey, credentials, trades){\n        //console.log('getClient',props, setData, data, msg, trades)\n        if(props.selectedTicker === undefined){\n            return;\n        }\n        let url=''\n        if(props.exchange.name === 'Binance'){\n            url = 'wss://stream.binance.us:9443/ws/'+listenKey;\n        } else {\n            url = 'wss://ws-manager-compress.bitmart.com?protocol=1.1'\n            \n        }\n\n        console.log('Connecting to:', url)\n    //this.trades = []\n\n   \n    this.client = new RobustWebSocket(url, null, {\n                // The number of milliseconds to wait before a connection is considered to have timed out. Defaults to 4 seconds.\n                timeout: 60000,\n                // A function that given a CloseEvent or an online event (https://developer.mozilla.org/en-US/docs/Online_and_offline_events) and the `RobustWebSocket`,\n                // will return the number of milliseconds to wait to reconnect, or a non-Number to not reconnect.\n                // see below for more examples; below is the default functionality.\n                shouldReconnect: function(event, ws) {\n                    console.log('Reconnecting')\n                    if (event.code === 1008 || event.code === 1011) return\n                    return [0, 3000, 10000][ws.attempts]\n                },\n                // A boolean indicating whether or not to open the connection automatically. Defaults to true, matching native [WebSocket] behavior.\n                // You can open the websocket by calling `open()` when you are ready. You can close and re-open the RobustWebSocket instance as much as you wish.\n                automaticOpen: true,\n                // A boolean indicating whether to disable subscribing to the connectivity events provided by the browser.\n                // By default RobustWebSocket instances use connectivity events to avoid triggering reconnection when the browser is offline. This flag is provided in the unlikely event of cases where this may not be desired.\n                ignoreConnectivityEvents: false\n                })\n        this.client.binaryType='blob'; \n        this.client.addEventListener('open', function(event) {\n            if(props.exchange.name === 'Binance'){\n                //console.log('GOT', response.data.listenKey)\n               \n            } else {\n\n                var timestamp = Date.now().toString();\n                var signature = require(\"crypto\")\n                                .createHmac(\"sha256\", credentials.secret)\n                                .update(timestamp+'#'+credentials.apiName+'#bitmart.WebSocket')\n                                .digest(\"hex\"); //binary, hex,base64\n                var msg = JSON.stringify({\"op\": \"login\", \"args\":[credentials.key,timestamp,signature]});\n                this.send(msg)\n            }\n         console.log('WebSocket Client Connected to ', props.exchange.name);\n         \n        \n        // let iid2 = setInterval(() =>{\n        //     //console.log('READYSTATE1',client['Bitmart'].readyState)\n        //     if(props.exchange.name == 'Bitmart'){\n        //         console.log('PINGING:','ping')\n        //         this.send('ping');\n        //         //client['Bitmart'].send(msg);\n        //     } \n        // }, 15000);\n        })\n    this.client.addEventListener('message', function(event) {\n            // text frame\n            //console.log('Binance TradeWSQQQQ',JSON.parse(event.data))\n            if(event.data === 'pong' || event.data === 'ping' ){\n                //this.send(\"ping\")\n                return;\n            }\n            console.log('message',event.data)\n            \n            if(event.data instanceof Blob ) {\n\n            } else {\n                if( JSON.parse(event.data).event === 'login' ){\n                    \n                    let smsg = JSON.stringify({\"op\": \"subscribe\", \"args\":[\"spot/user/order:\"+props.selectedTicker]});\n                    console.log('SUBSCRIBING:' , smsg)\n                    \n                    this.send(smsg);\n                \n                } \n            }\n        // var newState;\n    if(event.data instanceof Blob ) {\n        if(props.exchange.name === 'Bitmart'){\n        let transformer = new _transform(props.exchange.name);\n        //console.log(event.data)\n        const stream = event.data.stream();\n        const reader = stream.getReader();\n        reader.read().then(({ done, value }) => {\n            if(done){\n                \n            } else {\n                var b = Buffer.from(value)\n                \n                zlib.inflateRaw(b,{flush: 3, info: true}, (err, buffer) => {\n\n                var json = JSON.parse(buffer.toString('UTF-8'))\n\n                /////////////////////////\n                // let transformer = new _transform(props.exchange.name);\n                // try {\n                //     let json = JSON.parse(event.data);\n                //     if(json.e.length > 0 && json.e == 'executionReport'){\n                //         setData({\n                //             ...data,\n                //             asset:[]\n                //         })\n    \n                //         console.log('TRDATA1',json,data);\n    \n                //         let newTrade = transformer.getTradeStream(json,props.selectedTicker)\n                //         let orderId;\n                //         if(newTrade.state == 'CANCELED'){\n                //             orderId=newTrade.order_id\n                //             trades = trades.filter(trade => trade.order_id !== orderId)\n                //         } else {\n                //             orderId=='-1'\n                //             trades.unshift(newTrade)\n                //         }\n                            \n                //         console.log('TRDATA4', trades);\n                        \n                //         setData({\n                //             ...data,\n                //             asset:trades\n                //         })\n    \n                //     }\n    \n                // } catch(e){\n                //     console.log(e);\n                // }\n\n\n                //////////////////////////\n                console.log('pre pre pre pre undefined Transform', json)\n                if(json.data !== undefined && json.data.length > 0){\n                    console.log('pre pre pre Transform', json)\n                    setData({\n                        ...data,\n                        asset:[]\n                    })\n                        console.log('pre pre Transform', json.data, trades)\n\n                        let newTrade = transformer.getTradeStream(json.data[0],props.selectedTicker)\n                        let orderId;\n                        if(newTrade.state === 'CANCELED'){\n                            orderId=newTrade.order_id\n                            trades = trades.filter(trade => trade.order_id !== orderId)\n                            console.log('FILTERED', trades);\n                            if(trades.length < 1){\n                                \n                            }\n                        } else {\n                            orderId='-1'\n                            trades.unshift(newTrade)\n                        }\n                                     \n                    console.log('TRDATA4', trades);\n                    \n                    setData({\n                        ...data,\n                        asset:trades\n                    })\n\n\n                    \n                   \n                }\n                \n               \n                \n                }); \n            }  \n        })\n    } \n    } else {\n            \n    if(event.data === 'pong' || event.data === 'ping' ){\n        //this.send(\"ping\")\n        return;\n    }\n    if(props.exchange.name === 'Binance'){\n            let transformer = new _transform(props.exchange.name);\n            try {\n                let json = JSON.parse(event.data);\n                if(json.e.length > 0 && json.e === 'executionReport'){\n                    setData({\n                        ...data,\n                        asset:[]\n                    })\n\n                    console.log('TRDATA1',json,data);\n\n                    let newTrade = transformer.getTradeStream(json,props.selectedTicker)\n                    let orderId;\n                    if(newTrade.state === 'CANCELED'){\n                        orderId=newTrade.order_id\n                        trades = trades.filter(trade => trade.order_id !== orderId)\n                    } else {\n                        orderId='-1'\n                        trades.unshift(newTrade)\n                    }\n                        \n                    console.log('TRDATA4', trades);\n                    \n                    setData({\n                        ...data,\n                        asset:trades\n                    })\n\n                }\n\n            } catch(e){\n                console.log(e);\n            }\n\n    }\n            \n            //console.log('Text Frame Binance',);\n    }\n    })\n\n        this.client.addEventListener('close', function(event) {\n            //prevPrices = [];\n            \n            if(event.data === undefined){\n                return;\n            }\n            setData({\n\n                asset: []\n            });\n        //console.log('we got: ' + event.data)\n        })\n\n        return ({client:this.client,setData:this.setData,trades:this.trades});\n     }\n    }   \n","const zlib = require(\"zlib\");\nconst RobustWebSocket = require('robust-websocket');\n//const prevPrice = '0.00';\nexport default  function MarketWebSocketConnection(props, setData, data, msg) {\n\nconst obj = Object.create(protoMethods);\n obj.client = {};\n //obj.msg = msg;\n return obj.getClient(props,setData,data, msg);\n\n}\n    //console.log('Previous Ticker', localStorage.getItem('selectedTicker'), this.props.selectedTicker);\n const protoMethods = {\n    getClient: function(props, setData, data, msg){\n        let url=''\n        if(props.exchange.name === 'Binance'){\n            url = 'wss://stream.binance.com:9443/ws/'+props.selectedTicker.replace(/_/g,\"\").toLowerCase()+'@aggTrade';\n        } else {\n            url = 'wss://ws-manager-compress.bitmart.com?protocol=1.1'\n        }\n\n    this.client = new RobustWebSocket(url, null, {\n                // The number of milliseconds to wait before a connection is considered to have timed out. Defaults to 4 seconds.\n                timeout: 4000,\n                // A function that given a CloseEvent or an online event (https://developer.mozilla.org/en-US/docs/Online_and_offline_events) and the `RobustWebSocket`,\n                // will return the number of milliseconds to wait to reconnect, or a non-Number to not reconnect.\n                // see below for more examples; below is the default functionality.\n                shouldReconnect: function(event, ws) {\n                    console.log('Reconnecting')\n                    if (event.code === 1008 || event.code === 1011) return\n                    return [0, 3000, 10000][ws.attempts]\n                },\n                // A boolean indicating whether or not to open the connection automatically. Defaults to true, matching native [WebSocket] behavior.\n                // You can open the websocket by calling `open()` when you are ready. You can close and re-open the RobustWebSocket instance as much as you wish.\n                automaticOpen: true,\n                // A boolean indicating whether to disable subscribing to the connectivity events provided by the browser.\n                // By default RobustWebSocket instances use connectivity events to avoid triggering reconnection when the browser is offline. This flag is provided in the unlikely event of cases where this may not be desired.\n                ignoreConnectivityEvents: false\n                })\n        this.client.binaryType='blob'; \n        this.client.addEventListener('open', function(event) {\n         console.log('WebSocket Client Connected');\n         if(msg.length > 0 && props.exchange.name === 'Bitmart'){\n            this.send(msg);\n        }\n        // let iid2 = setInterval(() =>{\n        //     //console.log('READYSTATE1',client['Bitmart'].readyState)\n        //     if(props.exchange.name == 'Bitmart'){\n        //         console.log('PINGING:','ping')\n        //         this.send('ping');\n        //         //client['Bitmart'].send(msg);\n        //     } \n        // }, 15000);\n        })\n        var prevPrices = [];\n        data.market = [];\n        setData({...data})\n        this.client.addEventListener('message', function(event) {\n\n        //console.log('we got: ' + event.data)\n        if(msg.length > 0){\n            //this.client.send(msg);\n        }\n        // var newState;\n             if(event.data instanceof Blob) {\n        //let transformer = new _transform(props.exchange.name);\n        //console.log(event.data)\n        const stream = event.data.stream();\n        const reader = stream.getReader();\n        reader.read().then(({ done, value }) => {\n            if(done){\n                \n            } else {\n                var b = Buffer.from(value)\n                \n                zlib.inflateRaw(b,{flush: 3, info: true}, (err, buffer) => {\n                var json = JSON.parse(buffer.toString('UTF-8'))\n\n                //let prevPrice = this.prevPrice;\n\n                //let newState = transformer.getStream(json.data[0],props.selectedTicker,prevPrices);\n                \n                data.market.unshift(json.data[0])\n\n                if(data.market.length > 9){\n                    data.market.splice(9,1);\n                }\n                //console.log('MarketWS', newState)\n\n                setData({\n                    ...data,\n                    \n                })\n                //  prevPrices.push(newState.lastPrice );\n\n                // if(prevPrices.length > 2){\n                //     prevPrices.splice(0,1);\n                // }\n                //console.log('Text Frame Bitmart');\n                //console.log(err,json.data[0]);\n                }); \n            }  \n        })\n        \n        } else {\n            // text frame\n\n            if(event.data === 'pong' || event.data === 'ping' ){\n                //client.send(\"ping\")\n                return;\n            }\n            \n            //let transformer = new _transform(props.exchange.name);\n            try {\n                let json = JSON.parse(event.data);\n\n                //console.log('BMARKET', json)\n                \n                //let newData = transformer.getStream(json, props.selectedTicker, prevPrices);\n                \n                let len = prevPrices.length\n                let side = '';\n                if(parseFloat(prevPrices[len-1]) > parseFloat(json.p)){\n                    side = 'sell';\n                } else {\n                    side = 'buy';\n                } \n\n                data.market.unshift({price: json.p, size:json.q, side:side})\n\n                if(data.market.length > 9){\n                    data.market.splice(9,1);\n                }\n\n                setData({\n                    ...data\n                })\n            prevPrices.push(json.p );\n\n            if(prevPrices.length > 2){\n                prevPrices.splice(0,1);\n            }\n\n            } catch(e){\n                console.log(e);\n            }\n\n        \n            \n            //console.log('Text Frame Binance',);\n        }\n        })\n\n        this.client.addEventListener('close', function(event) {\n            //prevPrices = [];\n            setData({\n                asks: [],\n                bids: [],\n                market: []\n            });\n            if(event.data === undefined){\n                return;\n            }\n        //console.log('we got: ' + event.data)\n        })\n\n        return (this.client);\n     }\n    }   \n","const zlib = require(\"zlib\");\nconst RobustWebSocket = require('robust-websocket');\nconst _transform = require('./transformer')\n//const prevPrice = '0.00';\nexport default  function WebSocketConnection(props, setData, data, msg) {\n\nconst obj = Object.create(protoMethods);\n obj.client = {};\n //obj.msg = msg;\n return obj.getClient(props,setData,data, msg);\n\n}\n    //console.log('Previous Ticker', localStorage.getItem('selectedTicker'), this.props.selectedTicker);\n const protoMethods = {\n    getClient: function(props, setData, data, msg){\n        let url=''\n        if(props.exchange.name === 'Binance'){\n            url = 'wss://stream.binance.com:9443/ws/'+props.selectedTicker.replace(/_/g,\"\").toLowerCase()+'@miniTicker';\n        } else {\n            url = 'wss://ws-manager-compress.bitmart.com?protocol=1.1'\n        }\n\n    this.client = new RobustWebSocket(url, null, {\n                // The number of milliseconds to wait before a connection is considered to have timed out. Defaults to 4 seconds.\n                timeout: 4000,\n                // A function that given a CloseEvent or an online event (https://developer.mozilla.org/en-US/docs/Online_and_offline_events) and the `RobustWebSocket`,\n                // will return the number of milliseconds to wait to reconnect, or a non-Number to not reconnect.\n                // see below for more examples; below is the default functionality.\n                shouldReconnect: function(event, ws) {\n                    console.log('Reconnecting', event,ws, url)\n                    if (event.code === 1008 || event.code === 1011) return\n                    return [0, 3000, 10000][ws.attempts]\n                },\n                // A boolean indicating whether or not to open the connection automatically. Defaults to true, matching native [WebSocket] behavior.\n                // You can open the websocket by calling `open()` when you are ready. You can close and re-open the RobustWebSocket instance as much as you wish.\n                automaticOpen: true,\n                // A boolean indicating whether to disable subscribing to the connectivity events provided by the browser.\n                // By default RobustWebSocket instances use connectivity events to avoid triggering reconnection when the browser is offline. This flag is provided in the unlikely event of cases where this may not be desired.\n                ignoreConnectivityEvents: false\n                })\n        this.client.binaryType='blob'; \n        this.client.addEventListener('open', function(event) {\n         console.log('WebSocket Client Connected');\n         if(msg.length > 0 && props.exchange.name === 'Bitmart'){\n            this.send(msg);\n         }\n        // let iid2 = setInterval(() =>{\n        //     //console.log('READYSTATE1',client['Bitmart'].readyState)\n        //     if(props.exchange.name == 'Bitmart'){\n        //         console.log('PINGING:','ping')\n        //         this.send('ping');\n        //         //client['Bitmart'].send(msg);\n        //     } \n        // }, 10000);\n\n        })\n        var prevPrices = [];\n        this.client.addEventListener('message', function(event) {\n\n        //console.log('we got: ' + event.data)\n        if(msg.length > 0){\n            //client.send(msg);\n        }\n        // var newState;\n             if(event.data instanceof Blob) {\n        let transformer = new _transform(props.exchange.name);\n        //console.log(event.data)\n        const stream = event.data.stream();\n        const reader = stream.getReader();\n        reader.read().then(({ done, value }) => {\n            if(done){\n                \n            } else {\n                var b = Buffer.from(value)\n                \n                zlib.inflateRaw(b,{flush: 3, info: true}, (err, buffer) => {\n                var json = JSON.parse(buffer.toString('UTF-8'))\n\n                //let prevPrice = this.prevPrice;\n\n                let newState = transformer.getStream(json.data[0],props.selectedTicker,prevPrices);\n                 \n                setData({\n                    ...data,\n                    ...newState\n                })\n                prevPrices.push(newState.lastPrice );\n\n                if(prevPrices.length > 2){\n                    prevPrices.splice(0,1);\n                }\n                //console.log('Text Frame Bitmart');\n                //console.log(err,json.data[0]);\n                }); \n            }  \n        })\n        \n        } else {\n            // text frame\n\n            if(event.data === 'pong' || event.data === 'ping' ){\n                //client.send(\"ping\")\n                return;\n            }\n            //console.log('PROPS', props);\n            let transformer = new _transform(props.exchange.name);\n            try {\n                let json = JSON.parse(event.data);\n                \n                let newData = transformer.getStream(json, props.selectedTicker, prevPrices);\n                setData({\n                    ...data,\n                    ...newData\n                })\n            prevPrices.push(newData.lastPrice );\n\n            if(prevPrices.length > 2){\n                prevPrices.splice(0,1);\n            }\n\n            } catch(e){\n                console.log(e);\n            }\n\n        \n            \n            //console.log('Text Frame Binance',);\n        }\n        })\n\n        this.client.addEventListener('close', function(event) {\n            prevPrices = [];\n            \n            setData({\n                high24hr: '',\n                low24hr: '',\n                open24hr: '',\n                volume24hr: '',\n                lastPrice:'',\n                priceStyle:'' ,\n                prevPrice:'0.00' \n            });\n            if(event.data === undefined){\n                return;\n            }\n        //console.log('we got: ' + event.data)\n        })\n\n        return (this.client);\n     }\n    }   \n","const zlib = require(\"zlib\");\nconst RobustWebSocket = require('robust-websocket');\n//const prevPrice = '0.00';\nexport default  function DepthWebSocketConnection(props, setData, data, msg) {\n\nconst obj = Object.create(protoMethods);\n obj.client = {};\n //obj.msg = msg;\n return obj.getClient(props,setData,data, msg);\n\n}\n    //console.log('Previous Ticker', localStorage.getItem('selectedTicker'), this.props.selectedTicker);\n const protoMethods = {\n    getClient: function(props, setData, data, msg){\n        let url=''\n        if(props.exchange.name === 'Binance'){\n            url = 'wss://stream.binance.com:9443/ws/'+props.selectedTicker.replace(/_/g,\"\").toLowerCase()+'@depth5@100ms';\n        } else {\n            url = 'wss://ws-manager-compress.bitmart.com?protocol=1.1'\n        }\n\n    this.client = new RobustWebSocket(url, null, {\n                // The number of milliseconds to wait before a connection is considered to have timed out. Defaults to 4 seconds.\n                timeout: 4000,\n                // A function that given a CloseEvent or an online event (https://developer.mozilla.org/en-US/docs/Online_and_offline_events) and the `RobustWebSocket`,\n                // will return the number of milliseconds to wait to reconnect, or a non-Number to not reconnect.\n                // see below for more examples; below is the default functionality.\n                shouldReconnect: function(event, ws) {\n                    console.log('Reconnecting')\n                    if (event.code === 1008 || event.code === 1011) return\n                    return [0, 3000, 10000][ws.attempts]\n                },\n                // A boolean indicating whether or not to open the connection automatically. Defaults to true, matching native [WebSocket] behavior.\n                // You can open the websocket by calling `open()` when you are ready. You can close and re-open the RobustWebSocket instance as much as you wish.\n                automaticOpen: true,\n                // A boolean indicating whether to disable subscribing to the connectivity events provided by the browser.\n                // By default RobustWebSocket instances use connectivity events to avoid triggering reconnection when the browser is offline. This flag is provided in the unlikely event of cases where this may not be desired.\n                ignoreConnectivityEvents: false\n                })\n        this.client.binaryType='blob'; \n        this.client.addEventListener('open', function(event) {\n         console.log('WebSocket Client Connected');\n         if(msg.length > 0 && props.exchange.name === 'Bitmart'){\n            this.send(msg);\n        }\n        // let iid2 = setInterval(() =>{\n        //     //console.log('READYSTATE1',client['Bitmart'].readyState)\n        //     if(props.exchange.name == 'Bitmart'){\n        //         console.log('PINGING:','ping')\n        //         this.send('ping');\n        //         //client['Bitmart'].send(msg);\n        //     } \n        // }, 15000);\n        })\n        //var prevPrices = [];\n        this.client.addEventListener('message', function(event) {\n\n        //console.log('we got: ' + event.data)\n        if(msg.length > 0){\n            //this.client.send(msg);\n        }\n        // var newState;\n             if(event.data instanceof Blob) {\n        //let transformer = new _transform(props.exchange.name);\n        //console.log(event.data)\n        const stream = event.data.stream();\n        const reader = stream.getReader();\n        reader.read().then(({ done, value }) => {\n            if(done){\n                \n            } else {\n                var b = Buffer.from(value)\n                \n                zlib.inflateRaw(b,{flush: 3, info: true}, (err, buffer) => {\n                var json = JSON.parse(buffer.toString('UTF-8'))\n\n                //let prevPrice = this.prevPrice;\n\n                //let newState = transformer.getStream(json.data[0],props.selectedTicker,prevPrices);\n                let newState = json.data[0];\n                setData({\n                    ...data,\n                    ...newState\n                })\n                // prevPrices.push(newState.lastPrice );\n\n                // if(prevPrices.length > 2){\n                //     prevPrices.splice(0,1);\n                // }\n                //console.log('Text Frame Bitmart');\n                //console.log(err,json.data[0]);\n                }); \n            }  \n        })\n        \n        } else {\n            // text frame\n\n            if(event.data === 'pong' || event.data === 'ping' ){\n                //client.send(\"ping\")\n                return;\n            }\n            \n            //let transformer = new _transform(props.exchange.name);\n            try {\n                let json = JSON.parse(event.data);\n                \n                //let newData = transformer.getStream(json, props.selectedTicker, prevPrices);\n                let newData = json;\n                setData({\n                    ...data,\n                    ...newData\n                })\n            //prevPrices.push(newData.lastPrice );\n\n            // if(prevPrices.length > 2){\n            //     prevPrices.splice(0,1);\n            // }\n\n            } catch(e){\n                console.log(e);\n            }\n\n        \n            \n            //console.log('Text Frame Binance',);\n        }\n        })\n\n        this.client.addEventListener('close', function(event) {\n            //prevPrices = [];\n            setData({\n                asks: [],\n                bids: []\n            });\n            if(event.data === undefined){\n                return;\n            }\n        //console.log('we got: ' + event.data)\n        })\n\n        return (this.client);\n     }\n    }   \n","export const SET_ALERT =  'SET_ALERT';\nexport const SET_ALERT_OVERWRITE =  'SET_ALERT_OVERWRITE';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\n\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport { AuthContext } from '../App';\nimport { REMOVE_ALERT} from './types';\nimport logo from \"../logo.svg\";\n\nconst Alert = () => {\n    const { state, dispatch } = React.useContext(AuthContext);  \n    const alerts = state.alerts;\n    const onClose = (e, id) => {\n        console.log(id);\n        //document.getElementById(id).a\n        dispatch({ type: REMOVE_ALERT, payload: id})\n        //e.target.parent.toast('hide');\n    }\n    if(typeof alerts !== 'undefined' && alerts !== null && alerts.length > 0){\n        let alertsList, aid;\n        \n        alertsList = alerts.filter(alert => alert.message !== 'null').map((alert,i) => {\n            aid = alert.id;\n            setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: alert.id}), alert.timeout);\n            // return (\n            //     alert.id && <div className='alert' key={aid} className={als} role='alert'>{alert.message}</div>\n            // )\n            return (\n                alert.id && <div key={alert.id} className='' aria-live='polite' aria-atomic='true' style={{position: 'absolute', top:'150px', right: '500px', minHeight:'200px', width:'200px',zIndex:1000}}>\n                <div id={aid} className='toast fade show'>\n                    <div className='toast-header'>\n                    <img style={{width:30, height:30}} src={logo} className='rounded mr-2' alt='...' />\n                    <strong className='mr-auto'>System</strong>\n                    \n                    <button type='button' onClick={ (e) => onClose(e,aid)} className='ml-2 mb-1 close' data-dismiss='toast' aria-label='Close'>\n                        <span aria-hidden='true'>&times;</span>\n                    </button>\n                    </div>\n                    <div className='toast-body'>\n                    {alert.message}\n                    \n                </div>\n                </div>\n                </div>\n            )\n\n\n            \n        });\n        \n        return alertsList;\n    } else {\n        return null;\n    }\n    \n};\n\n\nexport default Alert;\n\n\n","import React from \"react\";\nimport { AuthContext } from \"../App\";\nimport logo from \"../logo.svg\";\nimport {  Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//import Alert from \"./alert.component\";\nimport axios from 'axios';\nimport { useHistory } from \"react-router\";\nimport { LOGOUT, SET_ALERT_OVERWRITE } from './types';\n\nexport const Nav = () => {\n  const { state, dispatch } = React.useContext(AuthContext);\n  const history = useHistory();\n  \n  const onLogout = e => {      \n    console.log('Logout');\n    localStorage.setItem('token', null);\n    \n    axios.defaults.headers.common['Authorization'] = null;\n    dispatch({\n        type: LOGOUT\n    })\n    dispatch({\n        type: SET_ALERT_OVERWRITE,\n        payload: {  message:'Logout Successful', alertType: 'success', timeout:3000}\n    })\n    history.push(\"/login\");\n }\n\n const onClick = () => {\n   if(!state.isOpen){\n     dispatch( {type:'MENU_STATE',payload:true})\n   }\n }\n  return (\n    <div>\n    \n          <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            <div className=\"\">\n            <div className=\"pull-left\">\n            <a className=\"navbar-brand\" onClick={onClick} href=\"#\" target=\"\" rel=\"noreferrer\">\n              <img src={logo} width=\"30\" height=\"30\" alt=\"CodingTheSmartWay.com\" />\n            </a>\n            <Link to=\"/dashboard\" className=\"navbar-brand\">Order Desk</Link>\n            </div>\n            <div className=\"pull-right\">\n              <ul className=\"navbar-nav navbar-right pull-right mr-auto\">\n              \n                \n                {\n                  !state.isAuthenticated ?  <li className=\"navbar-item pull-right\">\n                  <Link to=\"/login\" isloggedin=\"true\" className=\"nav-link\">Login </Link>\n                </li> : <li className=\"navbar-item pull-right\">\n                <Link to=\"/login\" onClick={onLogout} className=\"nav-link\">Log Out</Link>\n                </li>\n                }\n                <li className=\"navbar-item\">\n                  <Link to=\"/register\" className=\"nav-link\">Register</Link>\n                </li>\n              </ul>\n            </div>\n            </div>\n          </nav>\n          \n          </div>\n          \n  );\n};\n\nexport default Nav;\n\n\n\n","import React , {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport { useHistory } from \"react-router\";\nimport { SET_ALERT, LOGIN} from './types';\n\nimport { AuthContext } from \"../App\";\n\nconst Login = () => {\n    const { dispatch } = React.useContext(AuthContext);\n    const initialState = {\n        username: \"\",\n        password: \"\",\n        isSubmitting: false,\n        errorMessage: null\n      };\n      //localStorage.clear();\n      const [data, setData] = React.useState(initialState);\n      let history = useHistory();\n      let [online,isOnline] = useState(navigator.onLine);\n      const setOnline = () => {\n          console.log('We are online!');\n          \n          isOnline(true);\n      };\n      const setOffline = () => {\n          console.log('We are offline!');\n          //props.selectedTicker='';\n          //props.clearTicker();\n          \n          isOnline(false);\n      };\n\n    const onChangeUsername = e => {\n\n        setData({\n            ...data,\n            username: e.target.value\n          });\n    }\n\n    const onChangePassword = e => {\n        setData({\n            ...data,\n            password: e.target.value\n        });\n    }\n\n    useEffect(() => {\n        window.addEventListener('offline', setOffline);\n        window.addEventListener('online', setOnline);\n        return () => {\n\n            window.removeEventListener('offline', setOffline);\n            window.removeEventListener('online', setOnline);\n        }\n    },[]);\n    const onSubmit = e => {\n        e.preventDefault();\n        //const history = useHistory();\n        setData({\n            ...data,\n            isSubmitting: true,\n            errorMessage: null\n          });\n        console.log(`Form submitted:`);\n         \n        const newLogin = {\n            username: data.username,\n            password: data.password\n        };\n        \n        \n        axios.post('/api/auth/signin', newLogin)\n            .then(res => {\n                console.log(res.data);\n                \n                localStorage.setItem('token', res.data.token);\n                \n                axios.defaults.headers.common['Authorization'] = res.data.token;\n                axios.defaults.baseURL='';\n                dispatch({\n                    type: LOGIN,\n                    payload: res.data\n                })\n                dispatch({\n                    type: SET_ALERT,\n                    payload: {  message:'Login Successful', alertType: 'success', timeout:3000}\n                })\n                \n                history.push(\"/dashboard\");\n                \n            });\n            \n\n\n        setData({\n            ...data,\n            username: '',\n            password: '',\n            isLoggedIn: true\n        })\n    }\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n    const offline = params.get('offline');\n    if( offline === true ){\n        online = false;\n    } else{\n        if(online === false){\n            online = false;\n        } else {\n            online = true;\n        }\n    }\n    \n    return (\n        <div className=\"container\" style={{marginTop: 10}}>\n            <h3>Login</h3>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-group\"> \n                    <label>User Name: </label>\n                    <input  type=\"text\"\n                            className=\"form-control\"\n                            autoComplete=\"username\"\n                            value={data.username}\n                            onChange={onChangeUsername}\n                            />\n                </div>\n                <div className=\"form-group\">\n                    <label>Password: </label>\n                    <input \n                            type=\"password\" \n                            className=\"form-control\"\n                            value={data.password}\n                            autoComplete=\"current-password\"\n                            onChange={onChangePassword}\n                            />\n                </div>\n                \n\n                <div className=\"form-group\">\n                    <input type=\"submit\" disabled={online ? false : true} value={online ? 'Login' : 'Offline'} className=\"btn btn-primary\" />\n                </div>\n            </form>\n        </div>\n    )\n    \n}\n\n\n\n  export default Login;","import React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router\";\nimport MarketWebSocketConnection from './market.websocket';\n\nconst Market = props => {\nconst history = useHistory();\nconst [intervalId, setIntervalId ] = useState('');\nconst [ data, setData ]= useState( {})\n//const [ prevPrice, setPrevPrice ]= useState('0.00')  ;    \nlet [isOnline] = useState(navigator.onLine);\nconst setOnline = () => {\n    console.log('We are online!');\n    isOnline(true);\n};\nconst setOffline = () => {\n    console.log('We are offline!');\n    //props.selectedTicker='';\n    //props.clearTicker();\n    history.push('/login?offline=true')\n    isOnline(false);\n};  \nconst onPriceClick = e => {\n    console.log('Price Click', e.target.innerText);\n    let event = {target:{value:e.target.innerText}}\n    props.onChangePrice(event);\n}\nuseEffect(() => {\n    window.addEventListener('offline', setOffline);\n    window.addEventListener('online', setOnline);\n        //console.log('HANDLESTATE')\n  const ex = JSON.parse(localStorage.getItem('exchanges'))\n        //console.log('local', ex)\n  let thisExchange = ex.filter(exchange => \n            props.exchange.name === exchange.name\n        )\n        if(thisExchange){ \n        } else {\n            thisExchange = [{ \n                name: props.exchange.name,\n                apiKey: '',\n                secret: '',}];        \n        }\n\n        setData({\n            name: props.exchange.name,\n            apiKey: thisExchange.length > 0 ? thisExchange[0].apiKey: '',\n            secret: thisExchange.length > 0 ? thisExchange[0].secret: '',\n            url: props.exchange.url,\n            asks:[],\n            bids:[],\n            market:[],\n            selectedTicker: '',\n            prevSelectedTicker: props.selectedTicker,\n            tickerEndpoint: props.exchange.tickerEndpoint\n        });\n\n        //console.log('exchange' ,props.exchange,props);\n        if(props.selectedTicker.length < 3){\n            return;\n        }\n\n        let msg = '';\n        if(localStorage.getItem('selectedTicker') === undefined){ \n            localStorage.setItem('selectedTicker',props.selectedTicker);\n            msg = JSON.stringify({\"op\": \"subscribe\", \"args\":[\"spot/depth5:\"+props.selectedTicker]});\n            //console.log('ws_send1',props.selectedTicker)\n           // ws_send(msg);\n        } else if(props.selectedTicker === localStorage.getItem('selectedTicker')){\n            //console.log('ws_send2',props.selectedTicker)\n        } else if(props.selectedTicker !== localStorage.getItem('selectedTicker')){\n            msg = JSON.stringify({\"op\": \"unsubscribe\", \"args\": [\"spot/depth5:\"+localStorage.getItem('selectedTicker')]});\n            //console.log('ws_send3',props.selectedTicker)\n            //ws_send(msg);\n            localStorage.setItem('selectedTicker',props.selectedTicker);\n            msg = JSON.stringify({\"op\": \"subscribe\", \"args\":[\"spot/depth5:\"+props.selectedTicker]});\n            //console.log('ws_send4',props.selectedTicker)\n            //ws_send(msg);\n        }\n        if(props.exchange.name === 'Binance'){\n            //msg='';\n        }\n        let client = [];\n        msg = JSON.stringify({\"op\": \"subscribe\", \"args\":[\"spot/trade:\"+props.selectedTicker]});\n        //console.log('DEPTH MSG', msg)\n        client[props.exchange.name] = new MarketWebSocketConnection(props,setData, data ,msg );\n        \n        //c//lient.push(ws);\n        if(props.exchange.name === 'Bitmart'){\n\n           \n\n        // let iid = setInterval(() =>{\n            \n        //     if(client['Bitmart'].readyState == 1){\n        //         //console.log('DEPTH SENDING:',msg)\n        //         client['Bitmart'].send(msg);\n        //         clearInterval(iid)\n        //     }\n        // }, 500);\n        // console.log('DEPTH SENT:',msg)\n\n        let iid = setInterval(() =>{\n            //console.log('READYSTATE1',client['Bitmart'].readyState)\n            if(client['Bitmart'].readyState === 1 ){\n                //console.log('PINGIN:','ping')\n                client['Bitmart'].send('ping');\n                //client['Bitmart'].send(msg);\n            } \n        }, 15000);\n        setIntervalId(iid);\n\n        }\n\n        \n        //console.log('CLIENT', client);\n      \n        return () => {\n\n            window.removeEventListener('offline', setOffline);\n            window.removeEventListener('online', setOnline);\n            setData({});\n            let msg = JSON.stringify({\"op\": \"unsubscribe\", \"args\": [\"spot/trade:\"+localStorage.getItem('selectedTicker')]});\n            \n            \n            localStorage.setItem('selectedTicker', '');\n            //var unSubscribe = [\"btcusd@miniTicker\",\"ethusd@miniTicker\",\"bnbusd@miniTicker\",\"aadausd@miniTicker\",\"adausd@miniTicker\",\"dogeusdt@miniTicker\", \"enjusd@miniTicker\", \"maticusd@miniTicker\", \"eosusd@miniTicker\", \"vthousdt@miniTicker\", \"uniusdt@miniTicker\"]\n            \n            //send unsubscrube message here\n            //client.send(msg)\n            if(client['Bitmart']){\n                //client.send(msg)\n                clearInterval(intervalId)\n            client['Bitmart'].close();\n            }\n            if(client['Binance']){\n                client['Binance'].close();\n            }\n\n            \n            console.log('Leaving', msg);\n        }\n\n},[props.selectedTicker]);\n        if(data.market === undefined){\n            return null;\n        }\n        if(data.bids === undefined){\n            return null;\n        }\n        //console.log('MARKET',data)\n        let sideClass = '';\n        return (\n            \n            <div className=\"pull-right\" style={{marginTop: '2px', marginBottom: '2px', paddingRight:'35px', width:'160px'}}>\n                \n                <ul className=\"pt-1\" style={{listStyleType:'none', paddingLeft:'0px'}}>\n                {data.market.map((value, index) => {\n                    if(value.side === 'buy'){\n                        sideClass = 'text-success';\n                    } else {\n                        sideClass = 'text-danger';\n                    }\n                            return <li className=\"tiny\" key={index} style={{whiteSpace:'nowrap'}}><small onClick={onPriceClick} className={sideClass} >{value.price}</small> <small className=\"\" >{value.size.split('.')[0]}</small></li>\n                })}\n                </ul>\n                \n                \n            </div>\n            \n        );\n        \n}\nexport default Market;","import React, { useEffect, useState } from 'react';\nimport TradeWebSocketConnection from './assets/trade.websocket';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle\";\nimport $ from 'jquery';\nimport Market from \"./assets/market.component\";\nimport axios from 'axios';\nimport Table from \"react-bootstrap/Table\";\n\nconst _transform = require('./assets/transformer');\n\n const Asset  = props => {\n    console.log('AssetProps', props)\n    let style;\n    if(props.assets === undefined || props.assets.length < 1){\n        return null;\n    }\n    console.log('AssetProps1', props.assets);\n    return (\n\n       \n\n    props.assets.map((asset,i) =>{\n        if( asset.state !== undefined && asset.state === 'CANCELED'){\n            style = {textDecoration: 'line-through'}\n        } else {\n            style = {};\n        }\n        return  (\n            <tr style={style} key={i}>\n                <td  className={ asset.side ==='buy' ? 'text-success' : 'text-danger' }>{asset.pair !== undefined ? asset.pair.replace(/_/g,\"/\") : ''}</td>\n                <td style={{textTransform: 'capitalize', whiteSpace:'nowrap'}} className=\" \">{asset.price} {asset.order_type !== undefined ? asset.order_type :''}</td>\n                <td className=\"\">{asset.qty !== undefined ? asset.qty : ''} </td>\n                <td style={{}} className=\"\">{asset.cost} {asset.base}</td> \n                 <td style={{}} className=\"\">{asset.transaction_date}</td>\n            </tr>\n            )\n    })\n    )\n    \n}\n\nconst onDelete = e => {\n    \n    console.log(e.target.asset)\n    axios.delete( 'http://localhost:4000/asset/delete/'+e.target.id)\n    .then(res => {\n        console.log(res.data);\n        \n        // dispatch({\n        //     type: SET_ALERT_OVERWRITE,\n        //     payload: {  message:'Login Successful', alertType: 'success', timeout:10000}\n        // })\n        // dispatch({\n        //     type: SET_ALERT_OVERWRITE,\n        //     payload: {  message:'Login Successful', alertType: 'success', timeout:10000}\n        // })\n        //let history = useHistory();\n       //history.push(\"/asset\");\n        \n    });\n} \n\n\nconst AssetList = props => {\n//export default className AssetList extends Component {\n    const [intervalId, setIntervalId ] = useState('');\n    const [history, setHistory ] = useState({asset:[]});\n   \n    let [isOnline] = useState(navigator.onLine);\n    let [ orderTab, setOrderTab ] = useState(0);\n    \n    // constructor(props) {\n    //     super(props);\n    //     divis.state = {asset: []};\n    // }\n    \n    var ex = JSON.parse(localStorage.getItem('exchanges'))\n    var thisExchange = ex.filter(exchange => \n        props.exchange.name === exchange.name\n    )\n    if(thisExchange){ \n    } else {\n        thisExchange = [{ \n            name: props.exchange.name,\n            apiKey: '',\n            secret: ''}];        \n    }\n    useEffect(() => {\n        $('#carousel-'+props.exchange.name).carousel('pause')\n        $('#carousel-'+props.exchange.name).on('slide.bs.carousel', function (event) {\n            console.log(event.to);\n            setOrderTab(event.to)\n            if(event.to === 0){\n                //listOpenOrders()\n            }\n            getOrderHistory()\n        })\n\n     },[props.selectedTicker,setOrderTab])\n\n\n     useEffect(() => {\n        let mytrades = [];\n        let listenKey;\n        if(props.selectedTicker === undefined || props.selectedTicker.length < 1){\n            return;\n        }\n        var key = thisExchange[0].apiKey;\n        var apiName = thisExchange[0].apiName;\n        var secret = thisExchange[0].secret;\n        console.log('CREDS',key,apiName,secret)\n    \n        let client = [];\n        props.setData({\n            ...props.data,\n            asset: []\n        });\n    \n        console.log('GETTING TRADES', props, orderTab);\n        let transformer = new _transform(props.exchange.name);\n        axios.get('http://localhost:4000/'+props.exchange.name+'/trades?status=4&symbol='+props.selectedTicker, {\n            headers: {\n            'xbmkey': key,\n            'xbmname': apiName,\n            'xbmsecret': secret\n            }\n        })\n        .then(response => {\n            // this.setState({ asset: response.data });\n            \n            console.log('TRADES DATA' , response.data, props.data,'http://localhost:4000/'+props.exchange.name+'/trades?status=4&symbol='+props.selectedTicker);\n            mytrades = transformer.getTrades(response.data.trades,props.selectedTicker)\n            /////////\n            \n            props.setData({\n            ...props.data,\n            asset: mytrades,\n            \n            });\n    \n            if(props.exchange.name === 'Binance'){\n                listenKey = response.data.listenKey;\n                console.log('LISTENKEY', listenKey);\n                if(listenKey === undefined){\n                    axios.get('http://localhost:4000/'+props.exchange.name+'/orders', {\n                        headers: {\n                        'xbmkey': key,\n                        'xbmname': apiName,\n                        'xbmsecret': secret\n                        }\n                    })\n                    .then(data => {\n                        listenKey = data.listenKey;\n                        console.log('GET LISTENKEY', data)\n                    })\n                    .catch(e => {\n                        console.log('LISTENKEY ERROR', e)\n                    })\n                }\n\n\n            }\n            \n            // props, listenKey, credentials, trades\n            client[props.exchange.name] = new TradeWebSocketConnection( props , listenKey, {key:key,apiName:apiName,secret:secret} , mytrades);\n            \n                if(props.exchange.name === 'Bitmart'){\n                    \n                        // let smsg = JSON.stringify({\"op\": \"subscribe\", \"args\":[\"spot/user/order:\"+props.selectedTicker]});\n                        // client['Bitmart'].client.send(smsg)\n                        // let cancelId = setInterval(() =>{\n                        //     console.log('ReadyState:', client['Bitmart'].client.readyState, msg)\n                        //     if(client['Bitmart'].client.readyState == 1 ){\n                        //         console.log('Logging In:', msg)\n                        //         client['Bitmart'].client.send(msg);\n                        //         clearInterval(cancelId);\n                                \n                        //     } \n                        // }, 3000, cancelId);\n    \n                    \n                    let iid = setInterval(() =>{\n                        //console.log('READYSTATE1',client['Bitmart'].readyState)\n                        if(client['Bitmart'].client.readyState === 1 ){\n                            //console.log('PINGIN:','ping')\n                            client['Bitmart'].client.send('ping');\n                            //client['Bitmart'].send(msg);\n                        } \n                    }, 6000);\n                    setIntervalId(iid);\n                }\n    \n                \n        }).catch(function (error){\n            console.log(error);\n        })\n        return () => {\n            // props.setData({\n            //     ...props.data,\n            //     asset: []\n            // });\n            window.removeEventListener('offline', setOffline);\n            window.removeEventListener('online', setOnline);\n            //setData({});\n            \n            \n            \n            localStorage.setItem('selectedTicker', '');\n           // var unSubscribe = [\"btcusd@miniTicker\",\"ethusd@miniTicker\",\"bnbusd@miniTicker\",\"aadausd@miniTicker\",\"adausd@miniTicker\",\"dogeusdt@miniTicker\", \"enjusd@miniTicker\", \"maticusd@miniTicker\", \"eosusd@miniTicker\", \"vthousdt@miniTicker\", \"uniusdt@miniTicker\"]\n            \n            \n            if(client['Bitmart'] !== undefined){\n                //client.send(msg)\n                clearInterval(intervalId)\n            client['Bitmart'].client.close();\n            }\n            if( client['Binance'] !== undefined ){\n                //client['Binance'].client.close();\n            }\n    \n            \n            console.log('Leaving');\n        }\n    \n    }, [props.selectedTicker, orderTab]);  \n \n    \n\n\nconsole.log('AssetsList', props);\nif(props.data === undefined || props.data.asset === undefined || props.selectedTicker === undefined){\n    return ;\n}\n    \n    \n    const setOnline = () => {\n        console.log('We are online!');\n        isOnline(true);\n    };\n    const setOffline = () => {\n        console.log('We are offline!');\n        //props.selectedTicker='';\n        //props.clearTicker();\n        history.push('/login?offline=true')\n        isOnline(false);\n    };  \n      //let history = useHistory();\n     \nconst getOrderHistory = () => {\n    let mytrades;\n    var ex = JSON.parse(localStorage.getItem('exchanges'))\n    var thisExchange = ex.filter(exchange => \n        props.exchange.name === exchange.name\n    )\n    if(thisExchange){ \n    } else {\n        thisExchange = [{ \n            name: props.exchange.name,\n            apiKey: '',\n            secret: ''}];        \n    }\n    var key = thisExchange[0].apiKey;\n    var apiName = thisExchange[0].apiName;\n    var secret = thisExchange[0].secret;\n    //return null;\n    // var timestamp = Date.now().toString();\n    // var signature = require(\"crypto\")\n    // .createHmac(\"sha256\", secret)\n    // .update(timestamp+'#'+apiName+'#bitmart.WebSocket')\n    // .digest(\"hex\"); \n    \n    \n    \n\n    setHistory({\n        ...history,\n        asset: []\n    });\n\n    console.log('GETTING ORDERS', props, thisExchange);\n    let transformer = new _transform(props.exchange.name);\n    axios.get('http://localhost:4000/'+props.exchange.name+'/trades?status=6&symbol='+props.selectedTicker, {\n        headers: {\n            xbmkey: key,\n            xbmname: apiName,\n            xbmsecret: secret\n        }\n        })\n    .then(response => {\n       // this.setState({ asset: response.data });\n       console.log('ORDERS DATA' , response.data);\n       \n\n       mytrades = transformer.getTrades(response.data.trades, props.selectedTicker)\n       setHistory({\n        ...history,\n        asset: mytrades\n        });\n    })\n\n    console.log('listOrderHistory', history)\n\n}\n\n\n\n    //});\n    // componentDidMount() {\n        // axios.get('http://localhost:4000/asset/')\n        //     .diven(response => {\n        //         divis.setState({ asset: response.data });\n        //     })\n        //     .catch(function (error){\n        //         console.log(error);\n        //     })\n    // }\n    const listOpenOrders = () => {\n    //assetList() {\n        console.log('listOpenOrders', props)\n        return <Asset data={props.data} assets={props.data.asset} />;\n\n        // return data.asset.map(function(currentAsset, i){\n        //     return <Asset asset={currentAsset} key={i} />;\n        // })\n    }\n\nconst listOrderHistory = () => {\n\n        // setHistory({\n        //     ...history,\n        //     asset: []\n        // });\n\n        // console.log('GETTING ORDERS', props, orderTab);\n        // let transformer = new _transform(props.exchange.name);\n        // axios.get('http://localhost:4000/'+props.exchange.name+'/trades?status=4&symbol='+props.selectedTicker, headers)\n        // .then(response => {\n        //    // this.setState({ asset: response.data });\n        //    console.log('ORDERS DATA' , response.data, props.data);\n        //    mytrades = transformer.getTrades(response.data.trades)\n        //    setHistory({\n        //     ...history,\n        //     asset: mytrades\n        //     });\n        // })\n\n        // console.log('listOrderHistory', props)\n        return <Asset data={history} assets={history.asset} />\n\n        // return data.asset.map(function(currentAsset, i){\n        //     return <Asset asset={currentAsset} key={i} />;\n        // })\n    }\n    \n          \n        return (\n <div className=\"font-face-din fx-12\" style={{width:'100%', maxHeight:'196px', overflow:'scroll', overflowY:'scroll'}} >\n<div id={'carousel-'+props.exchange.name}  className=\"carousel slide\">\n\n  <ol className=\"carousel-indicators carousel-indicators-numbers\">\n    <li data-target={'#carousel-'+props.exchange.name}  data-slide-to=\"0\" className=\"active\">Open Orders</li>\n    <li data-target={'#carousel-'+props.exchange.name}  data-slide-to=\"1\" className=\"\">Order History</li>\n    <li data-target={'#carousel-'+props.exchange.name}  data-slide-to=\"2\">Market Trades</li>\n  </ol>\n\n\n  <div className=\"carousel-inner\" role=\"listbox\">\n    <div className=\"carousel-item active\">\n    <Table size=\"sm\" className=\"font-face-din fx-11 mb-0\" style={{ marginTop: 0 , width:'100%', minWidth:'375px',textAlign:'left' }} >\n        <tbody style={{ overflow:'auto'}}>\n            <Asset data={props.data} assets={props.data.asset} />\n        </tbody>\n    </Table>\n    </div>\n    <div className=\"carousel-item\">\n    <Table size=\"sm\" className=\"font-face-din fx-11 mb-0\" style={{ marginTop: 0 , width:'100%', minWidth:'375px',textAlign:'left' }} >\n        <tbody style={{ overflow:'auto'}}>\n        <Asset data={history} assets={history.asset} />\n        </tbody>\n    </Table>\n    </div>\n    <div className=\"carousel-item\">\n    <div size=\"sm\" className=\"font-face-din fx-11 mb-0\" style={{ marginTop: 0 , width:'100%', minWidth:'375px',textAlign:'left' }} >\n        <div style={{ overflow:'auto'}}>\n        <Market onChangePrice={props.onChangePrice} clearTicker={props.clearTicker}  baseAsset={props.data.baseAsset}  exchange={props.exchange} selectedTicker={props.selectedTicker} prevSelectedTicker={props.prevSelectedTicker}  />\n        </div>\n    </div>\n    </div>\n  </div>\n\n</div>\n</div>\n               \n)\n\n}\nexport default AssetList;","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle\";\n//import { REMOVE_ALERT, SET_ALERT } from \"../components/types\";\n\n\n const EditAsset = (props) => { \n\n  \n\n\n\n        return (\n\n\n<div className=\"container font-face-din fx-12\" style={{width:'600px'}}>\n<div id=\"carousel-example-generic\"  className=\"carousel slide\">\n\n  <ol className=\"carousel-indicators carousel-indicators-numbers\">\n    <li data-target=\"#carousel-example-generic\" data-slide-to=\"0\" className=\"active\">Market Trades</li>\n    <li data-target=\"#carousel-example-generic\" data-slide-to=\"1\" className=\"\">Order History</li>\n    <li data-target=\"#carousel-example-generic\" data-slide-to=\"2\">Open Orders</li>\n  </ol>\n\n\n  <div className=\"carousel-inner\" role=\"listbox\">\n    <div className=\"carousel-item active\">\n      <img src=\"http://placehold.it/600x400\" alt=\"...\"/>\n    </div>\n    <div className=\"carousel-item\">\n      <img src=\"http://placehold.it/6600x400\" alt=\"...\"/>\n    </div>\n    <div className=\"carousel-item\">\n      <img src=\"http://placehold.it/600x400\" alt=\"...\"/>\n    </div>\n  </div>\n\n</div>\n</div>\n\n            \n        )\n\n}\n\nexport default EditAsset","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class CreateAsset extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onChangePair = this.onChangePair.bind(this);\n        this.onChangePrice = this.onChangePrice.bind(this);\n        this.onChangeAmount = this.onChangeAmount.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            pair: '',\n            price: '',\n            amount: '',\n            //todo_completed: false\n        }\n    }\n\n    onChangePair(e) {\n        this.setState({\n            pair: e.target.value\n        });\n    }\n\n    onChangePrice(e) {\n        this.setState({\n            price: e.target.value\n        });\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        \n        console.log(`Form submitted:`, this.state);\n        console.log(`Pair: ${this.state.pair}`);\n        console.log(`Price: ${this.state.price}`);\n        console.log(`Amount: ${this.state.amount}`);\n        \n\n        const newAsset = {\n            pair: this.state.pair,\n            price: this.state.price,\n            amount: this.state.amount,\n            //todo_completed: this.state.todo_completed\n        };\n\n        axios.post('/api/asset/add', newAsset)\n\n            .then(res => {\n                console.log(res.data);\n                this.setState({\n                    redirectTo: '/'\n                })\n            \n            });\n            \n\n\n        this.setState({\n            pair: '',\n            price: '',\n            amount: '',\n            //order_type: '',\n            //order_status: 0,\n            //status_message: ''\n        })\n    }\n\n    render() {\n        return (\n            <div style={{ marginLeft: '12px', minWidth:'400px' }} className=\"float-left pt-2\">\n                <h5>Create New Asset</h5>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\"> \n                        <label>Pair: </label>\n                        <input  type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.pair}\n                                onChange={this.onChangePair}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Price: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.price}\n                                onChange={this.onChangePrice}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Amount: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.amount}\n                                onChange={this.onChangeAmount}\n                                />\n                    </div>\n                    \n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Create Asset\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class Register extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        //this.onChangeAmount = this.onChangeAmount.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            username: '',\n            password: '',\n            //amount: '',\n            //todo_completed: false\n        }\n    }\n\n    onChangeUsername(e) {\n        this.setState({\n            username: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n\n    onSubmit(e) {\n        e.preventDefault();\n        \n        console.log(`Registration submitted:`, this.state);\n        console.log(`Pair: ${this.state.username}`);\n        console.log(`Price: ${this.state.price}`);\n        console.log(`Amount: ${this.state.amount}`);\n        \n        const newRegistration = {\n            username: this.state.username,\n            password: this.state.password,\n            //amount: this.state.amount,\n            //todo_completed: this.state.todo_completed\n        };\n\n        axios.post('/api/auth/signup', newRegistration)\n\n            .then(res => {\n                console.log(res.data);\n                this.props.history.push(\"/login\");\n                // this.setState({\n                //     redirectTo: '/login'\n                // })\n            \n            });\n            \n        this.setState({\n            username: '',\n            password: '',\n            //amount: '',\n            //order_type: '',\n            //order_status: 0,\n            //status_message: ''\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container\" style={{marginTop: 10}}>\n                <h3>Register</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\"> \n                        <label>User Name: </label>\n                        <input  type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.username}\n                                onChange={this.onChangeUsername}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.password}\n                                onChange={this.onChangePassword}\n                                />\n                    </div>\n                    \n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Register\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport Select from \"react-select\";\n//import axios from 'axios';\n//var opts = [{ value: 'SHIB_USDT', label: 'SHIB_USDT' }]\n//props.options\n const TickerSelect = props => (\n    <Select classNamePrefix=\"react-select\" className=\"react-select-container\" options={props.options} onFocus={props.onFocus} onChange={props.onChange} />\n)\n\nexport default TickerSelect;","import React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router\";\nimport WebSocketConnection from './spot.websocket';\n\n// let count = 0;\n// let prices = [];\n// let gains = [];\n// let losses = [];\nconst Spot = props => {\n//const { state, dispatch } = React.useContext(AuthContext); \nconst history = useHistory();\nconst [intervalId, setIntervalId ] = useState('');\nconst [ data, setData ]= useState( {})\n//const [ prices, setPrices ]= useState( [])\n//const [ prevPrice, setPrevPrice ]= useState('0.00')  ;    \nlet [isOnline] = useState(navigator.onLine);\n\nconst setOnline = () => {\n    console.log('We are online!');\n    isOnline(true);\n};\nconst setOffline = () => {\n    console.log('We are offline!');\n    //props.selectedTicker='';\n    //props.clearTicker();\n    history.push('/login?offline=true')\n    isOnline(false);\n}; \n\nconst onPriceClick = e => {\n    console.log('Price Click', e.target.innerText);\n    let event = {target:{value:e.target.innerText}}\n    props.onChangePrice(event);\n}\n\nuseEffect(()=>{\n    //let prices = [];\n    // if(props !== undefined && props.selectedTicker !== undefined && props.selectedTicker.length > 0){\n\n    //     if(data.priceStyle==='text-danger'){\n    //         //loss\n    //         if(losses.length < 14){\n    //             losses.push(parseFloat(data.prevPrice)-parseFloat(data.lastPrice))\n    //             console.log('Losses',parseFloat(data.prevPrice)-parseFloat(data.lastPrice))\n    //         }\n            \n    //     } else if(data.priceStyle==='text-success'){\n    //         if(gains.length < 14){\n    //             gains.push(parseFloat(data.lastPrice)-parseFloat(data.prevPrice))\n    //             console.log('Gains', parseFloat(data.lastPrice)-parseFloat(data.prevPrice))\n    //         }\n    //     }\n\n    //     console.log(gains,losses)\n    //     if(gains.length == 14 && losses.length == 14){\n    //         console.log('GOT HERE')\n    //     //let gains = prices.filter(price => price > 0);\n    //     console.log('Gains',gains)\n    //     let avgGain = (gains) => gains.reduce((a, b) => a + b) / gains.length;\n    //     //let losses = prices.filter(price => price < 0);\n    //     let avgLoss= (losses) => losses.reduce((a, b) => a + b) / losses.length;\n    //     console.log('Losses',losses)\n    //     let gain = avgGain(gains);\n    //     let loss = avgLoss(losses)\n    //     let rs = Math.abs(gain) / Math.abs(loss);\n    //     let rsi = 100 - (100 / (1 + rs));\n    //     console.log('RSI',rsi);\n    //     gains=[];\n    //     losses=[]\n    //     }\n    //     //prices = [];\n        \n\n    // } else {\n        \n    //     count = 0;\n\n    // count++\n    // console.log(count);\n    // }//if selectedTicker\n     \n},[data.lastPrice, props.selectedTicker])\n\n\n\nuseEffect(() => {\n    window.addEventListener('offline', setOffline);\n    window.addEventListener('online', setOnline);\n\n        //console.log('HANDLESTATE')\n  const ex = JSON.parse(localStorage.getItem('exchanges'))\n        //console.log('local', ex)\n   let thisExchange = ex.filter(exchange => \n            props.exchange.name === exchange.name\n        )\n        if(thisExchange){ \n        } else {\n            thisExchange = [{ \n                name: props.exchange.name,\n                apiKey: '',\n                secret: '',}];        \n        }\n\n        setData({\n            name: props.exchange.name,\n            apiKey: thisExchange.length > 0 ? thisExchange[0].apiKey: '',\n            secret: thisExchange.length > 0 ? thisExchange[0].secret: '',\n            url: props.exchange.url,\n            high24hr: '',\n            low24hr: '',\n            open24hr: '',\n            volume24hr: '',\n            lastPrice:'',\n            priceStyle:'' ,\n            prevPrice:'0.00' ,\n            selectedTicker: '',\n            prevSelectedTicker: props.selectedTicker,\n            tickerEndpoint: props.exchange.tickerEndpoint\n        });\n\n        console.log('exchange' ,props.exchange,props);\n        if(props.selectedTicker.length < 3){\n            return;\n        }\n\n        let msg = '';\n        if(localStorage.getItem('selectedTicker') === undefined){ \n            localStorage.setItem('selectedTicker',props.selectedTicker);\n            msg = JSON.stringify({\"op\": \"subscribe\", \"args\":[\"spot/ticker:\"+props.selectedTicker]});\n            //console.log('ws_send1',props.selectedTicker)\n           // ws_send(msg);\n        } else if(props.selectedTicker === localStorage.getItem('selectedTicker')){\n            //console.log('ws_send2',props.selectedTicker)\n        } else if(props.selectedTicker !== localStorage.getItem('selectedTicker')){\n            msg = JSON.stringify({\"op\": \"unsubscribe\", \"args\": [\"spot/ticker:\"+localStorage.getItem('selectedTicker')]});\n            //console.log('ws_send3',props.selectedTicker)\n            //ws_send(msg);\n            localStorage.setItem('selectedTicker',props.selectedTicker);\n            msg = JSON.stringify({\"op\": \"subscribe\", \"args\":[\"spot/ticker:\"+props.selectedTicker]});\n            //console.log('ws_send4',props.selectedTicker)\n            //ws_send(msg);\n        }\n        if(props.exchange.name === 'Binance'){\n            //msg='';\n        }\n        let client = [];\n        client[props.exchange.name] = new WebSocketConnection(props,setData, data ,msg );\n        \n        //c//lient.push(ws);\n        if(props.exchange.name === 'Bitmart'){\n\n        // let iid = setInterval(() =>{\n            \n        //     if(client['Bitmart'].readyState == 1){\n        //         console.log('SENDING:',msg)\n        //         client['Bitmart'].send(msg);\n        //         clearInterval(iid)\n        //     }\n        // }, 500);\n\n        let iid = setInterval(() =>{\n            //console.log('READYSTATE1',client['Bitmart'].readyState)\n            if(client['Bitmart'].readyState === 1 ){\n                //console.log('PINGING:','ping')\n                client['Bitmart'].send('ping');\n                //client['Bitmart'].send(msg);\n            } \n        }, 15000);\n        setIntervalId(iid)\n\n        }\n        \n        \n        //console.log('CLIENT', client);\n      \n        return () => {\n\n            window.removeEventListener('offline', setOffline);\n            window.removeEventListener('online', setOnline);\n            setData({});\n            let msg = JSON.stringify({\"op\": \"unsubscribe\", \"args\": [\"spot/ticker:\"+localStorage.getItem('selectedTicker')]});\n            \n            \n            localStorage.setItem('selectedTicker', '');\n            var unSubscribe = [\"btcusd@miniTicker\",\"ethusd@miniTicker\",\"bnbusd@miniTicker\",\"aadausd@miniTicker\",\"adausd@miniTicker\",\"dogeusdt@miniTicker\", \"enjusd@miniTicker\", \"maticusd@miniTicker\", \"eosusd@miniTicker\", \"vthousdt@miniTicker\", \"uniusdt@miniTicker\"]\n            \n            //send unsubscrube message here\n            //client.send(msg)\n            if(client['Bitmart']){\n                \n                //client['Bitmart'].send(msg)\n                \n                clearInterval(intervalId)\n                client['Bitmart'].close();\n            }\n            if(client['Binance']){\n                client['Binance'].close();\n            }\n\n            \n            console.log('Leaving', msg);\n        }\n\n},[props.selectedTicker]);\n\n//console.log(count++) \n        return (\n            \n            <div className=\"container\" style={{marginTop: '2px', marginBottom: '2px'}}>\n                \n                 <div onClick={onPriceClick} style={{width:'72%', paddingLeft:'1px',paddingTop:'1px'}} className=\"float-left\"><h6 className={data.priceStyle}>{data.lastPrice}</h6></div>\n                <div style={{width:'28%', paddingLeft:'1px'}} className=\"float-left\"><h6> {data.baseAsset}</h6></div>\n\n                <div style={{width:'72%', paddingLeft:'1px',paddingTop:'1px', marginTop:'0px' }} className=\"tiny pt-1 float-left\"><small>{data.high24hr}</small></div>\n                <div style={{width:'28%',color:'',paddingTop:'1px', marginTop:'0px' }}  className=\"tiny-label pt-1 float-left\"><small >High</small></div>\n\n                <div style={{width:'72%', paddingLeft:'1px',paddingTop:'1px', marginTop:'0px'}} className=\"tiny float-left\"><small>{data.low24hr}</small></div>\n                <div style={{width:'28%',color:'',paddingTop:'1px', marginTop:'0px' }}  className=\"tiny-label float-left\"><small> Low</small></div>\n\n                <div style={{width:'72%', paddingLeft:'1px',paddingTop:'1px', color:'', marginTop:'0px' }} className=\"tiny float-left\"><small>{data.open24hr}</small></div>\n                <div style={{width:'28%',color:'',paddingTop:'1px', marginTop:'0px' }}  className=\"tiny-label float-left\"><small>Open</small></div>\n\n\n                <div style={{width:'72%', paddingLeft:'1px',paddingTop:'1px', color:'', marginTop:'0px'}} className=\"tiny float-left\"><small>{data.volume24hr}</small></div>\n                <div style={{width:'28%',color:'',paddingTop:'1px', marginTop:'0px'}}  className=\"tiny-label float-left\"><small> Volume</small></div>\n\n            </div>\n            \n        );\n        \n}\nexport default Spot;","import React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router\";\nimport DepthWebSocketConnection from './depth.websocket';\n\nconst Depth = props => {\nconst history = useHistory();\nconst [intervalId, setIntervalId ] = useState('');\nconst [ data, setData ]= useState( {})\n//const [ prevPrice, setPrevPrice ]= useState('0.00')  ;    \nlet [isOnline] = useState(navigator.onLine);\nconst setOnline = () => {\n    console.log('We are online!');\n    isOnline(true);\n};\nconst setOffline = () => {\n    console.log('We are offline!');\n    history.push('/login?offline=true')\n    isOnline(false);\n};  \nconst onPriceClick = e => {\n    console.log('Price Click', e.target.innerText);\n    let event = {target:{value:e.target.innerText}}\n    props.onChangePrice(event);\n}\nuseEffect(() => {\n    window.addEventListener('offline', setOffline);\n    window.addEventListener('online', setOnline);\n        //console.log('HANDLESTATE')\n  const ex = JSON.parse(localStorage.getItem('exchanges'))\n        //console.log('local', ex)\n   let thisExchange = ex.filter(exchange => \n            props.exchange.name === exchange.name\n        )\n        if(thisExchange){ \n        } else {\n            thisExchange = [{ \n                name: props.exchange.name,\n                apiKey: '',\n                secret: ''}];        \n        }\n\n        setData({\n            name: props.exchange.name,\n            apiKey: thisExchange.length > 0 ? thisExchange[0].apiKey: '',\n            secret: thisExchange.length > 0 ? thisExchange[0].secret: '',\n            url: props.exchange.url,\n            asks:[],\n            bids:[],\n            selectedTicker: '',\n            prevSelectedTicker: props.selectedTicker,\n            tickerEndpoint: props.exchange.tickerEndpoint\n        });\n\n        //console.log('exchange' ,props.exchange,props);\n        if(props.selectedTicker.length < 3){\n            return;\n        }\n\n        let msg = '';\n        if(localStorage.getItem('selectedTicker') === undefined){ \n            localStorage.setItem('selectedTicker',props.selectedTicker);\n            msg = JSON.stringify({\"op\": \"subscribe\", \"args\":[\"spot/depth5:\"+props.selectedTicker]});\n            //console.log('ws_send1',props.selectedTicker)\n           // ws_send(msg);\n        } else if(props.selectedTicker === localStorage.getItem('selectedTicker')){\n            console.log('ws_send2',props.selectedTicker)\n        } else if(props.selectedTicker !== localStorage.getItem('selectedTicker')){\n            msg = JSON.stringify({\"op\": \"unsubscribe\", \"args\": [\"spot/depth5:\"+localStorage.getItem('selectedTicker')]});\n            //console.log('ws_send3',props.selectedTicker)\n            //ws_send(msg);\n            localStorage.setItem('selectedTicker',props.selectedTicker);\n            msg = JSON.stringify({\"op\": \"subscribe\", \"args\":[\"spot/depth5:\"+props.selectedTicker]});\n            //console.log('ws_send4',props.selectedTicker)\n            //ws_send(msg);\n        }\n        if(props.exchange.name === 'Binance'){\n            //msg='';\n        }\n        let client = [];\n        msg = JSON.stringify({\"op\": \"subscribe\", \"args\":[\"spot/depth5:\"+props.selectedTicker]});\n        //console.log('DEPTH MSG', msg)\n        client[props.exchange.name] = new DepthWebSocketConnection(props,setData, data ,msg );\n        \n        //c//lient.push(ws);\n        if(props.exchange.name === 'Bitmart'){\n\n           \n\n        // let iid = setInterval(() =>{\n            \n        //     if(client['Bitmart'].readyState === 1){\n        //         //console.log('DEPTH SENDING:',msg)\n        //         client['Bitmart'].send(msg);\n        //         clearInterval(iid)\n        //     }\n        // }, 500);\n        // console.log('DEPTH SENT:',msg)\n\n        let iid = setInterval(() =>{\n            //console.log('READYSTATE1',client['Bitmart'].readyState)\n            if(client['Bitmart'].readyState === 1 ){\n                //console.log('PINGIN:','ping')\n                client['Bitmart'].send('ping');\n                //client['Bitmart'].send(msg);\n            } \n        }, 15000);\n        setIntervalId(iid);\n\n        }\n\n        \n        //console.log('CLIENT', client);\n      \n        return () => {\n\n            window.removeEventListener('offline', setOffline);\n            window.removeEventListener('online', setOnline);\n            setData({});\n            let msg = JSON.stringify({\"op\": \"unsubscribe\", \"args\": [\"spot/depth5:\"+localStorage.getItem('selectedTicker')]});\n            \n            \n            localStorage.setItem('selectedTicker', '');\n            var unSubscribe = [\"btcusd@miniTicker\",\"ethusd@miniTicker\",\"bnbusd@miniTicker\",\"aadausd@miniTicker\",\"adausd@miniTicker\",\"dogeusdt@miniTicker\", \"enjusd@miniTicker\", \"maticusd@miniTicker\", \"eosusd@miniTicker\", \"vthousdt@miniTicker\", \"uniusdt@miniTicker\"]\n            \n            //send unsubscrube message here\n            //client.send(msg)\n            if(client['Bitmart']){\n                //client.send(msg)\n                clearInterval(intervalId)\n            client['Bitmart'].close();\n            }\n            if(client['Binance']){\n                client['Binance'].close();\n            }\n\n            \n            console.log('Leaving', msg);\n        }\n\n},[props.selectedTicker]);\n        if(data.asks === undefined){\n            return null;\n        }\n        if(data.bids === undefined){\n            return null;\n        }\n        //console.log('DEPTH',data)\n        return (\n            \n            <div className=\"container\" style={{marginTop: '2px', marginBottom: '2px', paddingLeft:'0px'}}>\n                \n                <ul className=\"pt-1\" style={{listStyleType:'none', paddingLeft:'0px'}}>\n                {data.asks.map((value, index) => {\n                            return <li className=\"tiny\" key={index} style={{whiteSpace:'nowrap'}}><small onClick={onPriceClick} className=\"text-danger\" >{value[0]}</small> <small className=\"\" >{value[1]}</small></li>\n                })}\n                </ul>\n                <ul style={{listStyleType:'none', paddingLeft:'0px'}}>\n                {data.bids.map((value, index) => {\n                            return <li className=\"tiny\" key={index} style={{whiteSpace:'nowrap'}}><small onClick={onPriceClick} className=\"text-success\">{value[0]}</small> <small className=\"\" >{value[1]}</small></li>\n                })}\n                </ul>\n                \n            </div>\n            \n        );\n        \n}\nexport default Depth;","import React, {Component} from 'react';\n\n\n\n class  Technicals extends Component {\n\nconstructor(props){\n    super(props)\n    // this.data =       {\n    //     \"interval\": \"15m\",\n    //     \"width\": \"100%\",\n    //     \"isTransparent\": false,\n    //     \"height\": \"100%\",\n    //     \"symbol\": \"BINANCE:SHIBUSDT\",\n    //     \"showIntervalTabs\": true,\n    //     \"locale\": \"en\",\n    //     \"colorTheme\": \"light\"\n    //   };\n}\n    componentDidMount() {\n        // const script = document.createElement(\"script\");\n        // script.async = true;\n        // script.src = \"https://s3.tradingview.com/external-embedding/embed-widget-technical-analysis.js\";\n        // //const el =findDOMNode(this.domRef)\n        // script.innerHTML=  JSON.stringify({\n        //     \"interval\": \"15m\",\n        //     \"width\": \"100%\",\n        //     \"isTransparent\": false,\n        //     \"height\": \"50%\",\n        //     \"symbol\": \"BINANCE:SHIBUSDT\",\n        //     \"showIntervalTabs\": false,\n        //     \"locale\": \"en\",\n        //     \"colorTheme\": \"light\"\n        //   })\n        \n        // document.getElementById('tradingview').appendChild(script);\n        // console.log('SCRIPTS',document.getElementById('tradingview'))\n         \n      }\nrender(){\n    return(null)\nreturn (\n\n\n    <div class=\"tradingview-widget-container\">\n      <div class=\"tradingview-widget-container__widget\"></div>\n      <div id=\"tradingview\" class=\"tradingview-widget-copyright\"></div>\n      \n    </div>\n\n\n)\n}\n}\n\nexport default Technicals;","import React from 'react';\n\n const Wallet = props => {\n     let avail = '';\n     let currency = '';\n     let frozen = '';\n     let asset, wallet;\n     if( props.wallet === undefined ){\n         return;\n     }\n\n     if(props.tab === 'buy'){\n        \n        asset = props.ticker !== undefined ? props.ticker.replace(/.*_/g,\"\") : '';\n    } else {\n        \n        asset =  props.ticker !== undefined ? props.ticker.replace(/_.*/g,\"\"): '';\n    }\n     wallet = props.wallet.filter(account => \n        account.id === asset\n    ) \n     console.log('WALLET TAG', wallet,asset)\n     if(wallet.length > 0 ){\n        avail = wallet[0].available;\n        frozen = wallet[0].frozen;\n        currency = wallet[0].id\n     }\n\n     const percent25 = e => {\n         console.log('PERCENT25')\n         if(avail.length>0){\n        \n        props.setAmount({target:{value:.25 * Math.round(avail)}})\n         }\n    }\n\n    const percent50 = e => {\n        console.log('PERCENT50')\n        if(avail.length>0){\n       \n       props.setAmount({target:{value:.50 * Math.round(avail)}})\n        }\n   }\n\n   const percent75 = e => {\n    console.log('PERCENT75')\n    if(avail.length>0){\n   \n   props.setAmount({target:{value:.75 * Math.round(avail)}})\n    }\n}\n\nconst percent100 = e => {\n    console.log('PERCENT100', avail)\n    if(avail.length>0){\n   \n        props.setAmount({target:{value:Math.round(avail)}})\n    }\n}\n\n    return (\n    <div className=\"\" style={{paddingLeft:'0px'}}>\n    <div className=\"row\">\n        <div onClick={percent25} className=\"col-sm-3 tiny\"><small>25%</small></div>\n        <div onClick={percent50} className=\"col-sm-3 tiny\"><small className=\"\">50%</small></div>\n        <div onClick={percent75} className=\"col-sm-3 tiny\"><small className=\"\">75%</small></div>\n        <div onClick={percent100} className=\"col-sm-3 tiny\"><small className=\"\">100%</small></div>\n    </div>\n     <div className=\"row\">    \n        <div style={{whiteSpace:'nowrap'}} className=\"col-sm-12 pt-2 tiny\"><small className=\"\">Avail. {avail} {currency}</small></div> \n        <div style={{whiteSpace:'nowrap'}} className=\"col-sm-12  tiny\"><small className=\"\">In Orders {frozen} </small></div> \n    </div>\n    </div>\n    )\n     \n }\n\nexport default Wallet;","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport TickerSelect from \"./assets/ticker.select.component\";\nimport Spot from \"./assets/spot.component\";\nimport Depth from \"./assets/depth.component\";\nimport Technicals from \"./assets/technicals.component\";\nimport Wallet from \"./assets/wallet.component\";\nimport AssetList from \"./asset-list.component\";\nimport { Tabs, Tab } from \"react-bootstrap\";\nimport {SET_ALERT} from './types';\nimport { AuthContext } from '../App';\n\n const  ExchangeTradeForm = (props) => {\n// onTabSelect={onSelect} prev={prev} setTab={setKey} tab={key} exchange={props.exchange}\n    \n\n    const [orderType, setOrderType] = useState('limit');\n    \n    const onSelect = k => {\n        console.log('onSelect',k)\n        setOrderType(k)\n    }\n        const {  dispatch } = React.useContext(AuthContext);\n        //const { state, dispatch, data, setData } = React.useContext(AuthContext);\n        var ex = JSON.parse(localStorage.getItem('exchanges'))\n\n        //console.log('TAB:',props.tab)\n        //var prevTab = props.tab;\n        var thisExchange = ex.filter(exchange => \n            props.exchange.name === exchange.name\n        )\n        if(thisExchange){ \n        } else {\n            thisExchange = [{ \n                name: props.exchange.name,\n                apiKey: '',\n                secret: ''}];        \n        }\n        \n        var initalState = {\n            name: props.exchange.name,\n            apiKey: thisExchange.length > 0 ? thisExchange[0].apiKey: '',\n            url: props.exchange.url,\n            tickers: [],\n            asset: [],\n            amount: '',\n            qty: '',\n            lastPrice:'',\n            selectedTicker: '',\n            baseAsset:'',\n            price:'',\n            tickerEndpoint: props.exchange.tickerEndpoint,\n            secret: thisExchange.length > 0 ? thisExchange[0].secret: ''\n        }\n\n\n        \nconst [data, setData]= useState(initalState);          \nconst [wallet, setWallet]= useState({wallet:[]});\nuseEffect(() => {\n\n    \n    \n    if(data.price.length > 0 || data.qty.length > 0 || data.amount.length > 0 ){\n        setData(\n            {...data,\n            price:'',\n            amount: '',\n            qty: ''}\n        )\n    }\n\n}, []); \n\nuseEffect(() => {\n    if(data.price.length > 0 || data.qty.length > 0 || data.amount.length > 0 ){\n        setData(\n            {...data,\n            price:'',\n            amount: '',\n            qty: ''}\n        )\n    }\n\n}, [orderType]);\n\nuseEffect(() => {\n\n\n      axios.get(props.exchange.url+'/tickers').then(result => {\n            \n        result.data.tickers.forEach((ticker,i) => {\n\n            result.data.tickers[i] = { value: ticker, label: ticker }\n        })\n\n        console.log('TICKERS:',props.exchange.url,result.data.tickers);\n            \n            setData({\n            ...data,\n            tickers:result.data.tickers\n            })\n\n        });\n        //if(props.exchange.name == 'Bitmart'){\n            \n            console.log('URL',props.exchange.url)\n            axios.get(props.exchange.url+'/accounts', {\n                headers: {\n                'xbmkey': data.apiKey,\n                'xbmsecret': data.secret\n                }\n            }).then(result => {\n            \n            console.log('WALLET',result.data.wallet)\n    \n                setWallet({\n                wallet:result.data.wallet\n                })\n                //console.log('ACCOUNTDATA:',data);\n    \n            })\n        //}\n      return () => {\n          //setData({})\n          console.log('LEAVING')\n      };\n}, []);  \n\n\n const onFocusTicker = e => {\n\n     setData({\n            ...data,\n            prevSelectedTicker: data.selectedTicker ? data.selectedTicker : \"\",\n            \n          });\n }\n const clearTicker = e => {\n    setData({\n        ...data,\n        selectedTicker:  \"\",\n        baseAsset:  ''\n\n      });\n }\nconst onChangeTicker = e => {\n    //    \nconsole.log('OnChangeTicker', e)\n    \n    let asset, sellAsset;\n    //   setData({\n        //       name: e.target.value\n        //   });\n        //console.log('MYWALLET',mywallet)\n        if(props.tab === 'buy'){\n            asset = e.value.replace(/.*_/g,\"\");\n            sellAsset = e.value.replace(/_.*/g,\"\");\n        } else {\n            asset = e.value.replace(/_.*/g,\"\");\n            sellAsset = e.value.replace(/.*_/g,\"\");\n            \n        }\n        setData({\n            ...data,\n            selectedTicker: e.value ? e.value : \"\",\n            baseAsset: e.value !== undefined ? asset : '',\n            sellAsset: sellAsset\n          });\n          //data.wallet.filter( account => account.id === e.value.replace(/.*_/g,\"\") )\n       // console.log('FILTERED WALLET',data.wallet, e.value.replace(/.*_/g,\"\"));\n  \n}\n\n\n//const { Provider, Consumer } = React.createContext();\n\nconst onChangeName = e => {\n        setData({\n            ...data,\n            name: e.target.value\n        });\n        \n}\n// const tabEvent = e => {\n//     console.log('TABEVENT',e)\n// }\nconst clearAmount = e => {\n    setData(\n        {...data,\n        price:'',\n        amount: '',\n        qty: ''}\n    )\n}\nconst onChangeAmount = e => {\n    let qty, amount;\n    if(data.price.length < 1 && orderType === 'limit'){\n        dispatch({\n            type: SET_ALERT,\n            payload: {  message:'Please Choose a price before setting qty', alertType: 'success', timeout:3000}\n        })\n        return;\n    }\n\n    if(props.tab === 'buy' && orderType === 'limit'){\n         qty = Math.round(parseFloat(e.target.value) / parseFloat(data.price));\n         amount = parseFloat(e.target.value).toFixed(2);\n    } else if(props.tab === 'sell' && orderType === 'limit') {\n        qty = e.target.value ;\n        amount = Math.round(parseFloat(e.target.value) * parseFloat(data.price));\n        amount = amount.toFixed(2)\n    } else if(props.tab === 'buy' && orderType === 'market') {\n        amount = parseFloat(e.target.value).toFixed(2);\n        qty = '';\n    } else if(props.tab === 'sell' && orderType === 'market'){\n        amount = parseFloat(e.target.value).toFixed(2);\n        qty='';\n    }\n\n    setData({\n        ...data,\n        amount: amount,\n        qty: qty\n    });\n    \n}\nconst onChangePrice = e => {\n    \n    setData({\n        ...data,\n        price: e.target.value\n    });  \n}\n\nconst onChangeQty = e => {\n    setData({\n        ...data,\n        qty: e.target.value\n    });  \n}\n\n\n\nfunction onSubmit(e) {\n\n    e.preventDefault();\n    \n    console.log(`Form submitted:`, data.name);\n\n    \n\n\n}\n\n\n       //console.log('RETURN FORM', data, props)\nreturn (       \n    \n            <div className=\"pl-0\" style={{marginTop: '10px', marginLeft:'2px', marginRight:'2px'}}>\n                \n                <form className=\"form-row pb-0 mb-0\" style={{width:'100%'}} onSubmit={onSubmit}>\n                    <div className=\"form-group col-sm-6 mb-0\"> \n                    <TickerSelect options={data.tickers} onFocus={onFocusTicker} onChange={onChangeTicker} />\n                        <input  type=\"hidden\"\n                                className=\"form-control\"\n                                value={data.name}\n                                onChange={onChangeName}\n                                />\n                    <h5 className=\"mt-9x\">{props.exchange.name} </h5>\n                    {/* <Spot onRef={ref => (spot = ref)} baseAsset={data.baseAsset}  exchange={props.exchange} clearTicker={clearTicker} selectedTicker={data.selectedTicker}  /> */}\n                    <Technicals />\n                    </div>\n                    <div className=\"form-group col-sm-6 mb-0\"> \n                    \n                    <Spot onChangePrice={onChangePrice} clearTicker={clearTicker}  baseAsset={data.baseAsset}  exchange={props.exchange} selectedTicker={data.selectedTicker} prevSelectedTicker={data.prevSelectedTicker}  />\n                    \n                    </div>\n\n                    <Tabs onSelect={onSelect} defaultActiveKey=\"limit\" id=\"controlled-tab-example\" className=\"col-sm-12\">\n                <Tab eventKey=\"limit\" title=\"Limit\" className=\"col-sm-12\">\n                \n                   <div className=\"row pt-2\"> \n                   <div className=\"col-sm-6\"> \n                    <div className=\"form-group\"> \n                        <label>Price</label>\n                        <input  type=\"text\"\n                                placeholder=\"Price\"\n                                className=\"form-control\"\n                                value={data.price}\n                                onChange={onChangePrice}\n                                />\n                    </div>\n                    <div className=\"form-group\"> \n                        <label>Qty</label>\n                        <input  type=\"text\"\n                                placeholder=\"Quantity\"\n                                className=\"form-control\"\n                                value={data.qty}\n                                onChange={onChangeQty}\n                                />\n                    </div>\n                    <Wallet tab={props.tab} clearAmount={clearAmount} wallet={wallet.wallet} ticker={data.selectedTicker} setAmount={onChangeAmount}/>\n                    <div className=\"form-group mb-0 pb-0\"> \n                        <label>Total:</label> <div style={{display:'inline-block'}} onChange={onChangeAmount}>{data.amount}</div> \n                    </div>\n                </div>\n                <div className=\"col-sm-6 form-group\">\n                <label>Depth</label>\n                    <Depth onChangePrice={onChangePrice} clearTicker={clearTicker}  baseAsset={data.baseAsset}  exchange={props.exchange} selectedTicker={data.selectedTicker} prevSelectedTicker={data.prevSelectedTicker}  />\n                </div>\n                    \n                </div>\n                </Tab>\n                <Tab eventKey=\"market\" title=\"Market\" className=\"col-sm-12\">\n                <div className=\"row pt-2\">\n                <div className=\"col-sm-6\"> \n                <div className=\"form-group \"> \n                        <label>Price</label>\n                        <input  type=\"text\"\n                                disabled=\"disabled\"\n                                placeholder=\"Optimal Market Price\"\n                                className=\"form-control\"\n                                value=\"Optimal Market Price\"\n                                \n                                />\n                </div>\n                <div className=\"form-group\"> \n                        <label>Total</label>\n                        <input  type=\"text\"\n                                placeholder={ props.tab === 'buy' ? 'Total '+data.baseAsset : 'Total '+data.sellAsset}\n                                className=\"form-control\"\n                                value={data.amount}\n                                onChange={onChangeQty}\n                                />\n                </div>\n                <div><Wallet clearAmount={clearAmount} tab={props.tab} wallet={wallet.wallet} ticker={data.selectedTicker}  setAmount={onChangeAmount}/></div>\n                    <div className=\"form-group mb-0\"> \n                        <label>Total:</label> <div style={{display:'inline-block'}} onChange={onChangeAmount}>{data.amount}</div> \n                    </div>\n                </div>\n                <div className=\"col-sm-6 form-group\">\n                    <label>Depth</label>\n                    <Depth onChangePrice={onChangePrice} clearTicker={clearTicker}  baseAsset={data.baseAsset}  exchange={props.exchange} selectedTicker={data.selectedTicker} prevSelectedTicker={data.prevSelectedTicker}  />\n                </div>\n                </div>\n                \n                </Tab>\n                </Tabs>\n                    \n                    <div className=\"form-group col-sm-12 pb-2 mb-0\">\n                        { props.tab ==='buy' ? <input type=\"submit\" value=\"Place buy order\" className=\"btn btn-success\" /> :\n                        <input type=\"submit\" value=\"Place sell order\" className=\"btn btn-danger\" />\n                    }\n                    </div>\n                    <AssetList onChangePrice={onChangePrice} data={data} clearTicker={clearTicker} setData={setData} selectedTicker={data.selectedTicker} exchange={props.exchange} prevSelectedTicker={data.prevSelectedTicker}/>\n                </form>\n            {/* <div className=\"d-flex justify-content-between flex-wrap  align-items-center pb-2 mb-3 border-bottom\"> */}\n                {/* <Trade exchange={props.exchange} selectedTicker={data.selectedTicker} prevSelectedTicker={data.prevSelectedTicker}  /> */}\n               \n            {/* </div> */}\n            </div>\n        \n        )\n    \n}\nexport default ExchangeTradeForm;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n//import {SET_ALERT_OVERWRITE} from './types';\n\nimport ExchangeTradeForm from \"./exchange.tradeForm.component\"\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\n export const Exchange  = props => {\nconst [key, setKey] = useState('buy');\nconst [prev, setPrev] = useState('sell');\nconst onSelect = k => {\n    console.log('onSelect',k)\n    if(k === 'buy'){\n        setPrev('sell')\n    } else {\n        setPrev('buy')\n    }\n    setKey(k)\n}\n\nuseEffect(() => {\n\n\n}, []);\n    \n\nreturn (\n    \n    <div className=\"card\" style={{float:'left', width: '26rem', marginLeft:'10px',  marginRight:'5px'}}>\n        \n        <div style={{paddingLeft:'10px', paddingRight:'0px', paddingTop:'10px' ,paddingBottom:'5px'}} className=\"card-body\">\n            <Tabs defaultActiveKey=\"buy\" \n                id={'buy-sell-tab-'+props.exchange.name}  onSelect={onSelect} className=\"nav nav-pills nav-justified nav-fill\">\n                <Tab className=\"tab\" data-toggle=\"tab\" eventKey=\"buy\" title=\"Buy\" tabClassName=\"\">\n                {/* <ExchangeTradeForm exchange={props.exchange} /> */}\n                </Tab>\n                <Tab className=\"tab\" data-toggle=\"tab\" eventKey=\"sell\" title=\"Sell\" tabClassName=\"\">\n                {/* <ExchangeTradeForm exchange={props.exchange} />  */}\n                </Tab>\n            </Tabs>\n            <ExchangeTradeForm onTabSelect={onSelect} prev={prev} setTab={setKey} tab={key} exchange={props.exchange} /> \n            {/* <AssetList selectedTicker={props.selectedTicker} exchange={props.exchange}/> */}\n            {/* <div class=\"btn-group\" style={{width:'100%'}} role=\"group\" aria-label=\"Buy or Sell\">\n                <button type=\"button\" class=\"btn btn-primary btn-block btn-sm mt-0 active\">Buy</button>\n                <button type=\"button\" class=\"btn btn-secondary btn-block btn-sm mt-0\">Sell</button>\n            </div> */}\n            {/* <div>\n                <div className=\"col-sm-12\" eventKey=\"buy\" title=\"Buy\" tabClassName=\"\">\n                <ExchangeTradeFormBuy exchange={props.exchange} />\n                </div>\n                <div className=\"col-sm-12\" eventKey=\"sell\" title=\"Sell\" tabClassName=\"\">\n                <ExchangeTradeFormBuy exchange={props.exchange} /> \n                </div>\n            </div> */}\n            \n        </div>\n    </div>\n    )\n\n    \n}\n\n\nconst ExchangeTradeList = props => {\n\n    //const { data, setData } = React.useContext(AuthContext);\n\n    const initialState = {\n        exchange: [],\n        showModal: 'none'\n      };\n\n    const [data, setData] = React.useState(initialState);\n    \n\n// if(props.exchange === undefined){\n//     return null;\n// }\nconsole.log('ExchangeTradeList', data)\n    //useEffect(() => {\n        useEffect(() => {\n           \n         axios.get('/api/exchange/')\n             .then(response => {\n                 //this.setState({ asset: response.data });\n                 console.log('GET EX',response.data, data)\n                setData({\n                    ...data,\n                    exchange: response.data,\n                    showModal: 'none'\n                  });\n             })\n             .catch(function (error){\n                 console.log(error);\n             })\n\n            return () => {\n                 setData({})\n             }\n\n         }, []);\n    //console.log('isData', data)\n    const [ setIsOpen] = React.useState(false);\n    const [ setTitle ] = React.useState(\"Transitioning ....\");\n    const [ setUrl ] = React.useState(\"\");\n    //const [time, setTime] = React.useState(\"\");\n    \n    const showModal = props => {\n        //document.getElementById('exchangeModal').setAttribute('show', true);\n        setIsOpen(true);\n        setTitle(props.exchange.name);\n       // setExchange(props.exchange)\n        //setUrl(props.exchange.url)\n        //setHideModal(hideModal);\n \n    };\n    const hideModal = () => {\n        //document.getElementById('exchangeModal').setAttribute('show', true);\n        setIsOpen(false);\n        setTitle('')\n    };\n    \n    async function asyncAxios(currentExchange) {\n        var config = {\n            method: 'get',\n            withCredentials: true,\n            url: currentExchange.url+'/time', \n            data : {}\n          };\n        try {\n        const response = await axios(config);\n        return response.data;\n        }\n        catch (error) {\n            console.log(error);\n        }\n        \n    }\n\n\n    const listExchange = () => {\n        console.log('ListEx', data)\n        return data.exchange.map(function(currentExchange, i){\n           \n            //setData(data)\n             console.log('DATA',currentExchange);\n            \n            // var config = {\n            //     method: 'get',\n            //     withCredentials: true,\n            //     url: currentExchange.url+'/time', \n            //     data : {}\n            //   };\n            //   let {data} =  axios(config);\n            // asyncAxios(currentExchange).then(function(response) {\n            //     console.log('Time',response.serverTime);\n            //     //dispatch('SET_TIME',response.serverTime)\n            //     //currentExchange.serverTime = response.serverTime;\n                \n            //   });\n              //console.log('FFFF',props)\n            \n              return <Exchange title={currentExchange.name} hideModal={hideModal} setUrl={setUrl} setTitle={setTitle} showModal={showModal} setIsOpen={setIsOpen} exchange={currentExchange} key={i} />;\n            \n            \n        })\n    }\n\n  if( data === undefined){\n        return null;\n  }\n  return (\n    <div className=\"pull-left\" style={{marginTop: '36px', width:'100%'}}>\n       \n        {listExchange()}\n\n        {/* <ModalExchange id=\"exchangeModal\" setExchange={setExchange} exchange={exchange} title={title} url={url} setUrl={setUrl} setTitle={setTitle} isOpen={isOpen} show={true} hideModal={hideModal} showModal={showModal} tabindex=\"-1\"></ModalExchange>    */}\n    </div>\n    \n  );\n\n}\nexport default ExchangeTradeList;","import React, { useEffect } from 'react';\n\n//import { REMOVE_ALERT, SET_ALERT } from \"../components/types\";\n//import { AuthContext } from \"../App\";\nimport ExchangeTradeList from \"./exchange.trade.component\";\n//import Trade from \"./assets/trade.component\";\n//import TradeContext from './exchange.tradeForm.component'\n//import TradeFormContext from './tradeFormContext'\n//import axios from 'axios';\n\n const Dashboard = (props) => { \n  //const { data , setData, dispatch} = React.useContext(AuthContext);\n  //let exchange;\n  //const {state} = useContext(TradeFormContext);\n  //console.log('CONTEXT',props)\n \n  useEffect(() => {\n   \n    \n  },[]);\n      \n \n    //const { tradeFormContext } = React.useContext(TradeFormContext);  \n    //console.log(tradeFormContext);\n    //const { state, selectedTicker } = tradeFormContext;\n\n    //const data = state;\n    //const msg = {  message:'Fuck Yeah', alertType: 'success', timeout:10000 } \n    //const { exchange , setExchange} = React.useState({exchange:[]});\n//     useEffect(() => {\n      \n//       axios.get('/api/exchange/')\n//           .then(response => {\n//               //this.setState({ asset: response.data });\n              \n//                 setData({\n//                   ...data,\n//                   exchange: response.data\n//                 });\n//                 //setExchange(response.data)\n//           })\n//           .catch(function (error){\n//               console.log(error);\n//           })\n//       }, []);\n// console.log('AXIOS', data)\n        return ( <ExchangeTradeList />\n          \n  \n        \n            \n        )\n\n}\n\nexport default Dashboard","import React, { Component } from 'react';\n\nexport default class ExchangeForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeApiKey = this.onChangeApiKey.bind(this);\n        this.onChangeApiName = this.onChangeApiName.bind(this);\n        this.onChangeSecret = this.onChangeSecret.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.ex = JSON.parse(localStorage.getItem('exchanges'))\n        //console.log('local',this.ex)\n        this.thisExchange = this.ex.filter(exchange => \n            props.exchange.name === exchange.name\n        )\n        if(this.thisExchange){ \n        } else {\n            this.thisExchange = [{ \n                name: props.exchange.name,\n                apiKey: '',\n                apiName: '',\n                secret: '',}];        \n        }\n\n        this.state = {\n            name: props.exchange.name,\n            apiKey: this.thisExchange.length > 0 ? this.thisExchange[0].apiKey: '',\n            apiName: this.thisExchange.length > 0 ? this.thisExchange[0].apiName: '',\n            url: props.exchange.url,\n            secret: this.thisExchange.length > 0 ? this.thisExchange[0].secret: '',\n        }\n        console.log('exchange',props.exchange);\n        \n        \n        \n    }\n\n    onChangeName(e) {\n        this.setState({\n            name: e.target.value\n        });\n    }\n\n    onChangeApiKey(e) {\n        this.setState({\n            apiKey: e.target.value\n        });\n    }\n    onChangeApiName(e) {\n        this.setState({\n            apiName: e.target.value\n        });\n    }\n\n    onChangeUrl(e) {\n        this.setState({\n            url: e.target.value\n        });\n    }\n\n    onChangeSecret(e) {\n        this.setState({\n            secret: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        \n        console.log(`Form submitted:`, this.state.name);;\n\n        const data = this.ex.filter(exchange => \n            this.state.name !== exchange.name\n        )\n\n        data.push({ name: this.state.name, secret: this.state.secret, apiKey:this.state.apiKey, apiName:this.state.apiName})\n        localStorage.setItem('exchanges', JSON.stringify(data));\n        this.props.hideModal();\n        //console.log(this.props)\n    }\n    \n\n    render() {\n        \n        return (\n            <div className=\"container\" style={{marginTop: 10}}>\n                \n                <form style={{width:'100%'}} onSubmit={this.onSubmit}>\n                    <div className=\"form-group\"> \n                        <label>Name: </label>\n                        <input  type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.name}\n                                onChange={this.onChangeName}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Url: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.url}\n                                onChange={this.onChangeUrl}\n                                \n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>API Name: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.apiName}\n                                onChange={this.onChangeApiName}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>API Key: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.apiKey}\n                                onChange={this.onChangeApiKey}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Secret: </label>\n                        <input \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={this.state.secret}\n                                onChange={this.onChangeSecret}\n                                />\n                    </div>\n                    \n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Save and Close\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport ExchangeForm from \"./exchange.component\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\n\n\n\nconst ModalExchange = props => {\n\n    \n    return(\n        <Modal  show={props.isOpen}  tabIndex=\"-1\">\n        <div style={{width:'400px'}} className=\"modal-dialog\">\n            <div className=\"modal-content\">\n            <div className=\"modal-header\">\n                <h5 className=\"modal-title\">{props.title}</h5>\n                <button type=\"button\" className=\"close\" onClick={props.hideModal} aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div className=\"modal-body\">\n                <ExchangeForm hideModal={props.hideModal} exchange={props.exchange} />\n            </div>\n            <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={props.hideModal}>Close</button>\n            </div>\n            </div>\n        </div>\n        </Modal>\n        )\n\n}\nexport default ModalExchange;","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n//import {SET_ALERT_OVERWRITE} from './types';\nimport ModalExchange from \"./modal-exchange.component\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n//import { AuthContext } from \"../App\";\n//App.use(cors());\n const Exchange  = props => (\n    \n    <div className=\"card\" style={{float:'left', width: '14rem', marginRight:'10px', height:'204px'}}>\n \n        <div className=\"card-body\">\n            <h5 className=\"card-title\">{props.exchange.name} </h5>\n            <p className=\"card-text\"></p>\n            \n            <Link className=\"btn btn-primary\" onClick={() => props.showModal(props)} to={\"#\"}>Configure</Link>\n        </div>\n    </div>\n    \n    \n)\n\n\nconst ExchangeList = () => {\n\n //   const { dispatch } = React.useContext(AuthContext);\n\n    const initialState = {\n        exchange: []\n      };\n\n    const [data, setData] = React.useState(initialState);\n    \n\n\n\n    //useEffect(() => {\n        useEffect(() => {\n           \n        axios.get('/api/exchange/')\n            .then(response => {\n                //this.setState({ asset: response.data });\n                setData({\n                    ...data,\n                    exchange: response.data,\n                    showModal: 'none'\n                  });\n            })\n            .catch(function (error){\n                console.log(error);\n            })\n        }, []);\n    \n    const [isOpen, setIsOpen] = React.useState(false);\n    //const [hideModal, setHideModal] = React.useState({});\n    const [exchange, setExchange] = React.useState({});\n    const [title, setTitle] = React.useState(\"Transitioning...\");\n    const [url, setUrl] = React.useState(\"\");\n    //const [time, setTime] = React.useState(\"\");\n   \n    const showModal = props => {\n        //document.getElementById('exchangeModal').setAttribute('show', true);\n        setIsOpen(true);\n        setTitle(props.exchange.name);\n        setExchange(props.exchange)\n        //setUrl(props.exchange.url)\n        //setHideModal(hideModal);\n \n    };\n    const hideModal = () => {\n        //document.getElementById('exchangeModal').setAttribute('show', true);\n        setIsOpen(false);\n        setTitle('')\n    };\n    \n    async function asyncAxios(currentExchange) {\n        var config = {\n            method: 'get',\n            withCredentials: true,\n            url: currentExchange.url+'/time', \n            data : {}\n          };\n        try {\n        const response = await axios(config);\n        return response.data;\n        }\n        catch (error) {\n            console.log(error);\n        }\n        \n    }\n\n\n    const listExchange = () => {\n        \n        return data.exchange.map(function(currentExchange, i){\n           \n    \n            \n            // var config = {\n            //     method: 'get',\n            //     withCredentials: true,\n            //     url: currentExchange.url+'/time', \n            //     data : {}\n            //   };\n            //   let {data} =  axios(config);\n            //asyncAxios(currentExchange).then(function(response) {\n                //console.log('Time',response.serverTime);\n                //dispatch('SET_TIME',response.serverTime)\n                //currentExchange.serverTime = response.serverTime;\n                \n              //});\n              console.log('FFFF',data)\n            \n              return <Exchange title={currentExchange.name} hideModal={hideModal} setUrl={setUrl} setTitle={setTitle} showModal={showModal} setIsOpen={setIsOpen} exchange={currentExchange} key={i} />;\n            \n            \n        })\n    }\n\n\n  return (\n    <div style={{ marginLeft: '12px' }} className=\"float-left pt-2\">\n        <h5>Exchanges</h5>\n        {listExchange()}\n\n        <ModalExchange id=\"exchangeModal\" setExchange={setExchange} exchange={exchange} title={title} url={url} setUrl={setUrl} setTitle={setTitle} isOpen={isOpen} show={true} hideModal={hideModal} showModal={showModal} tabindex=\"-1\"></ModalExchange>   \n    </div>\n    \n  );\n\n}\nexport default ExchangeList;","import React from 'react';\nimport {  Link } from \"react-router-dom\";\nimport { slide as Menu } from 'react-burger-menu';\nimport { AuthContext } from \"../App\";\n\nconst TopNav = props => {\n\n    const {  data, setData } = React.useContext(AuthContext);\n    const handleStateChange = data => {\n        //console.log('Oh Fuck', data)\n        setData({isOpen: data.isOpen})  ;\n    }\n    const closeMenu = () => {\n        setData({isOpen: false})  ;\n      }\n\n  return (\n    <Menu pageWrapId={props.pageWrapId} outerContainerId={props.outerContainerId} styles={props.styles} isOpen={data.isOpen} onStateChange={handleStateChange} className=\"col-md-2 d-none d-md-block eggplant\">\n      {props.isAuthenticated && (\n                  <Link to=\"/dashboard\" onClick={closeMenu} className=\"nav-link menu-item\">Dashboard</Link>\n                )}\n                {props.isAuthenticated && (\n                  <Link to=\"/exchanges\" onClick={closeMenu} className=\"nav-link menu-item\">Exchanges</Link>\n                )}\n                {props.isAuthenticated && ( \n                  <Link to=\"/asset\" onClick={closeMenu} className=\"nav-link menu-item\">Assets</Link>\n                )}\n                {props.isAuthenticated && ( \n                  <Link to=\"/create\" onClick={closeMenu} className=\"nav-link menu-item\">Create Asset</Link>\n                )}\n                {props.isAuthenticated && ( \n                  <Link to=\"/edit\" onClick={closeMenu} className=\"nav-link menu-item\">Edit Asset</Link>\n                )}\n    </Menu>\n  );\n}\n\nexport default TopNav;","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { AuthContext } from \"../App\";\nimport { useLocation } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//import { Container, Row, Col, Nav, Navbar} from \"react-bootstrap\";\n\n//import Dashboard from \"./dashboard.component\";\nimport Login from \"./login.component\";\nimport AssetList from \"./asset-list.component\";\nimport EditAsset from \"./edit-asset.component\";\nimport CreateAsset from \"./create-asset.component\";\nimport Register from \"./register.component\";\nimport Dashboard from \"./dashboard.component\";\nimport Exchanges from \"./exchanges.component\";\nimport TopMenu from \"./menu.component\";\n\nexport const Sidebar = props => {\n\n    const { state, data } = React.useContext(AuthContext);\n    let location = useLocation();\n    //console.log(location.pathname);\n    //const { state, dispatch } = React.useContext(AuthContext);\n//     const history = useHistory();\n//     const onLogout = e => {      \n//       console.log('Logout');\n//       localStorage.setItem('token', null);\n      \n//       axios.defaults.headers.common['Authorization'] = null;\n//       dispatch({\n//           type: LOGOUT\n//       })\n//       dispatch({\n//           type: SET_ALERT_OVERWRITE,\n//           payload: {  message:'Logout Successful', alertType: 'success', timeout:10000}\n//       })\n//       history.push(\"/login\");\n//    }\n\n\n\nvar styles = {\n  width:'196px',\n  bmBurgerButton: {\n    position: 'fixed',\n    width: '36px',\n    height: '30px',\n    left: '14px',\n    top: '72px'\n  },\n  bmBurgerBars: {\n    background: '#373a47'\n  },\n  bmBurgerBarsHover: {\n    background: '#a90000'\n  },\n  bmCrossButton: {\n    height: '24px',\n    width: '24px'\n  },\n  bmCross: {\n    background: '#bdc3c7'\n  },\n  bmMenuWrap: {\n    position: 'fixed',\n    height: '100%',\n    minWidth:'230px'\n  },\n  bmMenu: {\n    background: '#373a47',\n    padding: '2.5em 1.5em 0',\n    fontSize: '1.15em'\n  },\n  bmMorphShape: {\n    fill: '#373a47'\n  },\n  bmItemList: {\n    color: '#b8b7ad',\n    padding: '0.8em'\n  },\n  bmItem: {\n    display: 'inline-block'\n  },\n  bmOverlay: {\n    background: 'rgba(0, 0, 0, 0.3)'\n  }\n}\n\nvar isOpen = open => {\n  if(open === undefined){\n    return false;\n  }\n  return open;\n}\nvar isMenuOpen = function(state) {\n  console.log('SIDEBAR MENU STATE',state)\n  return state;\n};\n\n    return (\n        <div id=\"outer-container\" className=\"container-fluid\" style={{width:'100%'}}>\n        <div  className=\"row\"> \n        \n          { state.isAuthenticated  && location.pathname !== '/register' && (\n          <TopMenu pageWrapId={ \"main\" } outerContainerId={ \"outer-container\" } styles={styles}  onStateChange={isMenuOpen}  isOpen={data.isOpen }  isAuthenticated={state.isAuthenticated} />)}\n          <main id=\"main\"  role=\"main\" style={{marginLeft:'unset'}}  className=\"col-md-12 ml-sm-auto col-lg-12 mt-3 px-0\">\n          <Route path=\"/dashboard\" exact render={ () => <Dashboard isOpen={isOpen} />} />\n          <Route path=\"/asset\" exact render={ props => <AssetList showHeading={true} />} />\n          <Route path=\"/exchanges\" exact component={Exchanges} />\n          <Route path=\"/edit\" component={EditAsset} />\n          <Route path=\"/create\" component={CreateAsset} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register}  />\n          </main>\n          </div>\n    </div>\n    )\n};\nexport default Sidebar","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//import \"bootswatch/dist/lux/bootstrap.min.css\"\nimport './App.css'\nimport Alert from \"./components/alert.component\";\nimport Nav from \"./components/nav.component\";\nimport Sidebar from \"./components/sidebar.component\";\nimport {v4 as uuid } from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT, LOGIN, LOGOUT, SET_ALERT_OVERWRITE} from \"./components/types\";\n\n\nexport const AuthContext = React.createContext();\nwindow.onbeforeunload = (event) => {\n  const e = event || window.event;\n  // Cancel the event\n  e.preventDefault();\n  if (e) {\n    e.returnValue = ''; // Legacy method for cross browser support\n  }\n  return ''; // Legacy method for cross browser support\n};\nconst initialState = {\n  isAuthenticated: false,\n  isOpen: false,\n  username: null,\n  token: null,\n  message: null,\n  alerts: [],\n  onTabSelect: {},\n  prev: '',\n  setTab:{},\n  tab: '',\n  selectedTicker:'',\n  exchange: []\n};\nexport const  initalData = {\n  onTabSelect: {},\n  prev: '',\n  theme:'dark',\n  isOpen: false,\n  setTab:{},\n  tab: '',\n  selectedTicker:'',\n  exchange: [],\n  asset: [],\n  name: '',\n  apiKey:  '',\n  secret:  '',\n  url: '',\n  asks:[],\n  bids:[],\n  prevSelectedTicker: '',\n  tickerEndpoint: '',\n  price:'',\n  qty:'',\n  amount:'',\n  wallet:[]\n} ;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case LOGIN:\n      localStorage.setItem(\"username\", action.payload.username);\n      localStorage.setItem(\"token\", action.payload.token);\n      const ls = localStorage.getItem('exchanges') ? localStorage.getItem('exchanges') : false;\n      //console.log('exchanges', ls)\n      if(ls === false){\n          localStorage.setItem('exchanges',JSON.stringify([]));\n      }\n      return {\n        ...state,\n        isAuthenticated: true,\n        isOpen: false,\n        username: action.payload.username,\n        token: action.payload.token\n      };\n      case 'MENU_STATE':\n      console.log('RCVD MENU STATE',action.payload, state)\n       \n      return {\n        ...state,\n        isOpen:false\n      };\n      case SET_ALERT:\n      //console.log('Message',action.payload)\n      state.alerts.push({message:action.payload.message,\n        alertType: action.payload.alertType,\n        timeout: action.payload.timeout,\n        id: uuid()});\n      return {\n        ...state,\n        message: action.payload.message,\n        alerts:state.alerts\n      };\n      case SET_ALERT_OVERWRITE:\n      //console.log('Message',action.payload)\n      state.alerts=[];\n      state.alerts.push({message:action.payload.message,\n        alertType: action.payload.alertType,\n        timeout: action.payload.timeout,\n        id: uuid()});\n      return {\n        ...state,\n        message: action.payload.message,\n        alerts:state.alerts\n      };\n      case REMOVE_ALERT:\n        //console.log('Remove Alert',action.payload, state)\n        \n        return {\n          ...state,\n          message: '',\n          alerts:state.alerts.filter(alert => alert.id !== action.payload)\n        };\n    case LOGOUT:\n      //localStorage.clear();\n      localStorage.setItem('token', '')\n      return {\n        ...state,\n        isAuthenticated: false,\n        username: null\n      };\n    default:\n      return state;\n  }\n};\n\n\n\n//console.log('Store New State',store.getState())\n\n\n  \n\n  function App() {\n\n \n\n    //let nav;\n    //window.$prevPrice = '0.00'\n    //console.log('Store State',this.props.store.getState())\n    const [state, dispatch] = React.useReducer(reducer, initialState);\n\n    const [data, setData] = React.useState(initalData);\n    \n\n \n\n\n    //console.log('App store 1',this.props.authenticated);\n    //var isLoggedIn = this.props.store.getState();\n\n    return (\n      <AuthContext.Provider\n      value={{\n        state,\n        dispatch,\n        data,\n        setData\n      }}\n    >\n      \n      <Router>\n        <div className=\"App\">     \n          <Alert />\n          <Nav /> \n          <Sidebar />\n          <br/>\n          \n        </div>\n      </Router>\n      \n      </AuthContext.Provider>\n    );\n  \n}\n\n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","export default __webpack_public_path__ + \"static/media/DINRegular.93f8fccd.ttf\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\nimport './fonts/DIN/DINRegular/DINRegular.ttf';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\nserviceWorker.unregister();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// {\n//   \"e\": \"24hrTicker\",  // Event type\n//   \"E\": 123456789,     // Event time\n//   \"s\": \"BNBBTC\",      // Symbol\n//   \"p\": \"0.0015\",      // Price change\n//   \"P\": \"250.00\",      // Price change percent\n//   \"w\": \"0.0018\",      // Weighted average price\n//   \"x\": \"0.0009\",      // First trade(F)-1 price (first trade before the 24hr rolling window)\n//   \"c\": \"0.0025\",      // Last price\n//   \"Q\": \"10\",          // Last quantity\n//   \"b\": \"0.0024\",      // Best bid price\n//   \"B\": \"10\",          // Best bid quantity\n//   \"a\": \"0.0026\",      // Best ask price\n//   \"A\": \"100\",         // Best ask quantity\n//   \"o\": \"0.0010\",      // Open price\n//   \"h\": \"0.0025\",      // High price\n//   \"l\": \"0.0010\",      // Low price\n//   \"v\": \"10000\",       // Total traded base asset volume\n//   \"q\": \"18\",          // Total traded quote asset volume\n//   \"O\": 0,             // Statistics open time\n//   \"C\": 86400000,      // Statistics close time\n//   \"F\": 0,             // First trade ID\n//   \"L\": 18150,         // Last trade Id\n//   \"n\": 18151          // Total number of trades\n// }\n// TradeStread\n// \"data\":{\n//   \"current_page\":1,\n//   \"orders\":[\n//       {\n//           \"order_id\":2147601241,\n//           \"symbol\":\"BTC_USDT\",\n//           \"create_time\":1591099963000,\n//           \"side\":\"sell\",\n//           \"type\":\"limit\",\n//           \"price\":\"9000.00\",\n//           \"price_avg\":\"0.00\",\n//           \"size\":\"1.00000\",\n//           \"notional\":\"9000.00000000\",\n//           \"filled_notional\":\"0.00000000\",\n//           \"filled_size\":\"0.00000\",\n//           \"status\":\"4\"\n//       }\n\nclass Transformer {\n    constructor(exchangeName) {\n      this.name = exchangeName;\n    }\n\n    getTrades( json, ticker) {\n      \n      var records= [];\n      var timestamp, date, formatted;\n      if(json === undefined){\n        return [];\n      }\n      console.log('getTrades',json);\n\n          if(this.name === 'Bitmart'){\n            \n            \n            \n            \n            json.forEach( trade =>  {\n              timestamp = Number.parseInt(trade.create_time) + 1000; //convert to milli's\n                date = new Date(timestamp)\n                formatted = date.toLocaleString(\"en-US\", {month: \"numeric\"}) + '-' +\n                date.toLocaleString(\"en-US\", {day: \"numeric\"}) + ' ' +\n                date.toLocaleTimeString('en-US')\n              records.push(\n                {\n                  order_id: trade.order_id,\n                  detail_id: trade.detail_id,\n                  avg_price: trade.price_avg,\n                  price: trade.price,\n                  pair: trade.symbol,\n                  side: trade.side,\n                  qty: trade.size,\n                  cost: parseFloat(trade.notional).toFixed(2),\n                  base:trade.symbol.split('_')[1],\n                  order_type:  trade.exec_type === 'M' ? 'Market': 'Limit' ,\n                  transaction_date: formatted,\n                  state: 'EXISTING',\n                  status: 'WORKING'\n                }\n              )\n              })\n            \n            return records;\n          }\n          if(this.name === 'Binance'){\n \n            \n            json.forEach( trade => {\n              timestamp = Number.parseInt(trade.create_time) + 1000; //convert to milli's\n                date = new Date(timestamp)\n                formatted = date.toLocaleString(\"en-US\", {month: \"numeric\"}) + '-' +\n                date.toLocaleString(\"en-US\", {day: \"numeric\"}) + ' ' +\n                date.toLocaleTimeString('en-US')\n              records.push(\n                \n                {\n                  order_id: trade.order_id,\n                  detail_id: trade.detail_id,\n                  avg_price: trade.price_avg === undefined ? trade.price_avg: trade.price,\n                  price: trade.price,\n                  pair: ticker.replace('_','/'),\n                  side: trade.side,\n                  qty: parseFloat(trade.size).toFixed(2),\n                  cost: parseFloat(trade.notional).toFixed(2),\n                  base:ticker.split('_')[1],\n                  order_type:  trade.exec_type === 'M' ? 'Market': 'Limit' ,\n                  transaction_date: formatted,\n                  state: 'EXISTING',\n                  status: 'WORKING'\n                }\n              )\n            })\n            \n            return records;\n          }\n      }\n\n    getStream( json, symbol, prevPrices) {\n    //console.log('GETSTREAM',this.name,json, symbol);\n      var transformed = {};\n      var len = prevPrices.length;\n      var priceStyle = '';\n        if(this.name === 'Bitmart'){\n          \n          \n          \n          if(parseFloat(prevPrices[len-1]) > parseFloat(json.last_price)){\n            priceStyle = 'text-danger';\n          } else if(parseFloat(prevPrices[len-1]) < parseFloat(json.last_price)){\n            priceStyle = 'text-success';\n          } else {\n            priceStyle = '';\n          }\n\n          transformed = {\n            lastPrice: json.last_price,\n            high24hr: json.high_24h,\n            low24hr: json.low_24h,\n            open24hr: json.open_24h,\n            volume24hr: json.base_volume_24h.split('.')[0],\n            priceStyle: priceStyle,\n            prevPrice: prevPrices[len-1],\n            baseAsset: symbol.replace(/.*_/g,\"\")\n        };\n\n\n\n          return transformed;\n        }\n        if(this.name === 'Binance'){\n         \n          len = prevPrices.length\n          priceStyle = '';\n          if(parseFloat(prevPrices[len-1]) > parseFloat(json.c)){\n            priceStyle = 'text-danger';\n          } else if(parseFloat(prevPrices[len-1]) < parseFloat(json.c)){\n            priceStyle = 'text-success';\n          } else {\n            priceStyle = '';\n          }\n        //console.log('PREVIOUS', prevPrices[len - 1], json.c, Math.floor(parseFloat(prevPrices[len-1])*1000000)   > Math.floor(parseFloat(json.c)*1000000));\n        transformed = {\n            lastPrice: json.c,\n            high24hr: json.h,\n            low24hr: json.l,\n            open24hr: json.o,\n            volume24hr: json.v !== undefined ? json.v.split('.')[0]: '',\n            priceStyle: priceStyle,\n            prevPrice: prevPrices[len-1],\n            baseAsset: symbol.replace(/.*_/g,\"\")\n        };\n          return transformed ;\n        }\n    }\n    getTradeStream( trade,ticker) {\n      //console.log('GETSTREAM',this.name,json, symbol);\n      var transformed = {};\n      var timestamp, date, formatted, time;\n          if(this.name === 'Bitmart'){\n\n           \n            console.log('Pre Transform', trade)\n            // if(trade.cost !== undefined && trade.cost.length > 0){\n            //   return trade;\n            // }\n\n            // if(trade.state == 8){\n            //   transformed.order_id = trade.order_id ;\n            //   transformed.state = 'CANCELED' ;\n            //   return transformed;\n            // }\n\n            \n            var  state, status;\n            //console.log('MST1', trade.ms_t)\n           if(trade.ms_t !== undefined){\n             time = trade.ms_t;\n             //console.log('MST2', time)\n             timestamp = Number.parseInt(time)  ; //convert to milli's\n             //console.log('MST3', timestamp)\n           } else {\n             time = trade.create_time;\n             timestamp = Number.parseInt(time) + 1000; //convert to milli's\n           }\n            // date.toLocaleString(\"en-US\", {year: \"numeric\"}) + '-' + \n            date = new Date(timestamp)\n            //console.log('MST4', date)\n            formatted = date.toLocaleString(\"en-US\", {month: \"numeric\"}) + '-' +\n            date.toLocaleString(\"en-US\", {day: \"numeric\"}) + ' ' +\n            date.toLocaleTimeString('en-US')\n  //       {\n//           \"order_id\":2147601241,\n//           \"symbol\":\"BTC_USDT\",\n//           \"create_time\":1591099963000,\n//           \"side\":\"sell\",\n//           \"type\":\"limit\",\n//           \"price\":\"9000.00\",\n//           \"price_avg\":\"0.00\",\n//           \"size\":\"1.00000\",\n//           \"notional\":\"9000.00000000\",\n//           \"filled_notional\":\"0.00000000\",\n//           \"filled_size\":\"0.00000\",\n//           \"status\":\"4\"\n// 1=Order failure\n// 2=Placing order\n// 3=Order failure, Freeze failure\n// 4=Order success, Pending for fulfilment\n// 5=Partially filled\n// 6=Fully filled\n// 7=Canceling\n// 8=Canceled\n//       }\n// let statusEnum = ['Order failure', 'Placing order', \n// 'Order failure - Freeze failure','Order success-Pending for fulfilment',\n// 'Partially filled', 'Fully filled', 'Canceling', 'Canceled']\n\n\n          if(trade.state === \"1\" || trade.state === \"3\" ){\n            state = 'REJECTED';\n            status = 'REJECTED state:'+trade.state;\n          }\n          if(trade.state === \"8\" || trade.state === \"7\" ){\n              state = 'CANCELED';\n              status = 'CANCELED state:'+trade.state;\n          }\n          if(trade.state === \"2\" || trade.state === \"4\" || trade.state === \"5\" || trade.state === \"6\" ){\n            state = 'NEW';\n            status = 'NEW state:'+trade.state;\n          }\n\n            transformed = {\n              order_id: parseInt(trade.order_id),\n              avg_price: (trade.price !== undefined && trade.price.length > 0) ? trade.price.match(/.*[1-9]/gm)[0] : '', \n              price: (trade.price !== undefined && trade.price.length > 0) ? trade.price.match(/.*[1-9]/gm)[0] : '',\n              pair: trade.symbol.replace('_', '/'),\n              side: trade.side,\n              qty: parseFloat(trade.size).toFixed(2),\n              cost: (trade.notional !== undefined && trade.notional.length > 0) ? parseFloat(trade.notional).toFixed(2) : trade.filled_notional !== undefined ? parseFloat(trade.filled_notional).toFixed(2) : '' ,\n              base:trade.symbol.split('_')[1],\n              order_type:  trade.type === 'market' || trade.type === 'M'? 'Market': 'Limit' ,\n              transaction_date: formatted,\n              status: status,\n              state: state\n            }\n  \n            console.log('Post Transform', transformed)\n  \n            return transformed;\n          }\n          if(this.name === 'Binance'){\n           \n          //   {\n          //     \"e\": \"executionReport\",\n          //     \"E\": 1622812265611,\n          //     \"s\": \"DOGEUSD\",\n          //     \"c\": \"web_aa4d10978ef54eabb2326f7d32bc0570\",\n          //     \"S\": \"SELL\",\n          //     \"o\": \"LIMIT\",\n          //     \"f\": \"GTC\",\n          //     \"q\": \"26.00000000\",\n          //     \"p\": \"0.9900\",\n          //     \"P\": \"0.0000\",\n          //     \"F\": \"0.00000000\",\n          //     \"g\": -1,\n          //     \"C\": \"web_2df29c1a353c4a18b538f4f2195e3328\",\n          //     \"x\": \"CANCELED\",\n          //     \"X\": \"CANCELED\",\n          //     \"r\": \"NONE\",\n          //     \"i\": 85245149,\n          //     \"l\": \"0.00000000\",\n          //     \"z\": \"0.00000000\",\n          //     \"L\": \"0.0000\",\n          //     \"n\": \"0\",\n          //     \"N\": null,\n          //     \"T\": 1622812265610,\n          //     \"t\": -1,\n          //     \"I\": 182468972,\n          //     \"w\": false,\n          //     \"m\": false,\n          //     \"M\": false,\n          //     \"O\": 1622810861818,\n          //     \"Z\": \"0.0000\",\n          //     \"Y\": \"0.0000\",\n          //     \"Q\": \"0.0000\"\n          // }\n            console.log('Pre Transform Binance', trade)\n            if(trade.create_time !== undefined && trade.create_time.length > 0){\n              return trade;\n            }\n\n            if(trade.e !== undefined && trade.e !== 'executionReport'){\n              return trade;\n            }\n            \n           \n             time = trade.T;\n             timestamp = Number.parseInt(time) + 1000; //convert to milli's\n           \n            // date.toLocaleString(\"en-US\", {year: \"numeric\"}) + '-' + \n            date = new Date(timestamp)\n            formatted = date.toLocaleString(\"en-US\", {month: \"numeric\"}) + '-' +\n            date.toLocaleString(\"en-US\", {day: \"numeric\"}) + ' ' +\n            date.toLocaleTimeString('en-US')\n            let cost =  parseFloat(trade.p) * parseFloat(trade.q)\n\n            transformed = {\n              order_id: trade.i,\n              avg_price: trade.p ,//(trade.p !== undefined && trade.p.length > 0) ? trade.p : '', \n              price: trade.p, //(trade.p !== undefined && trade.p.length > 0) ? trade.p.match(/.*[1-9]/gm)[0] : '',\n              pair: ticker.replace('_', '/'),\n              side: trade.S,\n              qty: parseFloat(trade.q).toFixed(2),\n              cost: cost.toFixed(2)  ,\n              base:ticker.split('_')[1],\n              order_type:  trade.o === 'market' || trade.o === 'MARKET'? 'Market': 'Limit' ,\n              transaction_date: formatted,\n              status: (trade.X !== undefined) ? trade.X : '',\n              state: (trade.x !== undefined) ? trade.x : ''\n            }\n\n            console.log('POST Transform Binance', transformed)\n\n            return transformed ;\n          }\n      }\n  }\n  module.exports = Transformer ;"],"sourceRoot":""}